{"version":3,"file":"static/js/1302.6ae27b62.chunk.js","mappings":"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","sources":["Pages/Inventories/Inventories.js"],"sourcesContent":["import React, {useCallback, useEffect, useState} from 'react'\r\nimport * as XLSX from 'xlsx'\r\nimport Table from '../../Components/Table/Table'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {universalToast} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport SmallLoader from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport {motion} from 'framer-motion'\r\nimport {getConnectors, postInventoriesId} from './inventorieSlice.js'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {roundUzs, universalSort} from './../../App/globalFunctions'\r\n\r\nfunction Inventories() {\r\n    const { t } = useTranslation(['common'])\r\n    const headers = [\r\n        { styles: 'w-[10%] text-start', title: '№' },\r\n        { styles: 'w-[10%] text-start', filter: 'createdAt', title: t('Sana') },\r\n        { styles: 'w-[10%] text-start', filter: 'id', title: t('ID') },\r\n        { styles: 'text-start', title: t('Maxsulotlar') },\r\n        { styles: 'w-[10%]', title: t('Holati') },\r\n        { styles: 'w-[10%]', title: ' ' },\r\n    ]\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        connectors,\r\n        errorConnectors,\r\n        clearErrorConnectors,\r\n        loading,\r\n        dataLoading,\r\n        total,\r\n    } = useSelector((state) => state.inventoryConnectors)\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0,\r\n    })\r\n    const [storeData, setStoreData] = useState(connectors)\r\n    const [data, setData] = useState(connectors)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [startDate, setStartDate] = useState(\r\n        new Date(new Date().getFullYear(), new Date().getMonth(), 1)\r\n    )\r\n    const [endDate, setEndDate] = useState(new Date())\r\n    const [printedInventories, setPrintedInventories] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n\r\n    // filter by total\r\n    const filterByTotal = ({ value }) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // excel function\r\n    const headersInventories = [\r\n        '№',\r\n        t('Sana'),\r\n        t('Kodi'),\r\n        t('Maxsulot'),\r\n        t('Narxi UZS'),\r\n        t('Dastlabki'),\r\n        t('Sanoq'),\r\n        t('Farqi'),\r\n        t('Farqi UZS'),\r\n    ]\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setPrintedInventories(null)\r\n    }\r\n\r\n    const handleClickPrint = (e) => {\r\n        const body = {\r\n            id: e._id,\r\n        }\r\n        dispatch(postInventoriesId(body)).then(({ payload: { inventories } }) => {\r\n            if (inventories.length > 0) {\r\n                setPrintedInventories(inventories)\r\n            }\r\n        })\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const autoFillColumnWidth = (json) => {\r\n        const cols = Object.keys(json[0])\r\n        const maxLength = cols.reduce((acc, curr) => {\r\n            return acc > curr.length ? acc : curr.length\r\n        }, 0)\r\n        return cols.map((col) => ({\r\n            wch: maxLength,\r\n        }))\r\n    }\r\n    const continueHandleClick = useCallback(\r\n        (data) => {\r\n            const wscols = autoFillColumnWidth(data)\r\n            const wb = XLSX.utils.book_new()\r\n            const ws = XLSX.utils.json_to_sheet([])\r\n            ws['!cols'] = wscols\r\n            XLSX.utils.sheet_add_aoa(ws, [headersInventories])\r\n            XLSX.utils.sheet_add_json(ws, data, {\r\n                origin: 'A2',\r\n                skipHeader: true,\r\n            })\r\n            XLSX.utils.book_append_sheet(wb, ws, 'Inventorizatsiyalar')\r\n            XLSX.writeFile(\r\n                wb,\r\n                `${t(\r\n                    'Invertarizatsiyalar'\r\n                )}-${new Date().toLocaleDateString()}.xlsx`\r\n            )\r\n        },\r\n        [headersInventories, t]\r\n    )\r\n\r\n    const handleClick = (e, idx) => {\r\n        const body = {\r\n            id: e._id,\r\n        }\r\n        dispatch(postInventoriesId(body)).then(({ payload: { inventories } }) => {\r\n            if (inventories.length > 0) {\r\n                const newData = [...inventories].map((item, index) => ({\r\n                    nth: index + 1,\r\n                    data: new Date(item?.createdAt).toLocaleDateString(),\r\n                    code: item.productdata.code,\r\n                    name: item.productdata.name,\r\n                    incomingprice: roundUzs(item.price.incomingpriceuzs * item.productcount),\r\n                    initial: item.productcount,\r\n                    count: item.inventorycount,\r\n                    difference: item.inventorycount - item.productcount,\r\n                    differenceUZS:\r\n                        item.inventorycount * item.price.incomingpriceuzs -\r\n                        item.productcount * item.price.incomingpriceuzs,\r\n                }))\r\n                newData.push(\r\n                    {\r\n                    nth: \"\",\r\n                    data: \"\",\r\n                    code: \"\",\r\n                    name: \"\",\r\n                    incomingprice: [...inventories].reduce(((prev, el) => prev + roundUzs(el.price.incomingpriceuzs * el.productcount)), 0),\r\n                    initial: [...inventories].reduce(((prev, el) => prev + el.productcount), 0),\r\n                    count: [...inventories].reduce(((prev, el) => prev + el.inventorycount), 0),\r\n                    difference: [...inventories].reduce(((prev, el) => prev + (el.inventorycount - el.productcount)), 0),\r\n                    differenceUZS:\r\n                    [...inventories].reduce(((prev, el) => prev + (el.inventorycount * el.price.incomingpriceuzs -\r\n                        el.productcount * el.price.incomingpriceuzs)), 0),\r\n                    }\r\n                )\r\n                continueHandleClick(newData, idx)\r\n            }\r\n        })\r\n    }\r\n\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2,\r\n                    })\r\n                    universalSort(data, setData, filterKey, 1, storeData)\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0,\r\n                    })\r\n                    universalSort(data, setData, filterKey, '', storeData)\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1,\r\n                    })\r\n                    universalSort(data, setData, filterKey, -1, storeData)\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1,\r\n            })\r\n            universalSort(data, setData, filterKey, -1, storeData)\r\n        }\r\n    }\r\n\r\n    // excel function\r\n\r\n    useEffect(() => {\r\n        setData(connectors)\r\n        setStoreData(connectors)\r\n    }, [connectors])\r\n    useEffect(() => {\r\n        if (errorConnectors) {\r\n            universalToast(errorConnectors, 'error')\r\n            dispatch(clearErrorConnectors())\r\n        }\r\n    }, [dispatch, clearErrorConnectors, errorConnectors])\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            startDate: new Date(\r\n                new Date(startDate).getFullYear(),\r\n                new Date(startDate).getMonth(),\r\n                new Date(startDate).getDate()\r\n            ).toISOString(),\r\n            endDate: endDate.toISOString(),\r\n        }\r\n        dispatch(getConnectors(body))\r\n    }, [currentPage, showByTotal, dispatch, startDate, endDate])\r\n    useEffect(() => {\r\n        setData(connectors)\r\n    }, [connectors])\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: { opacity: 1, height: 'auto' },\r\n                collapsed: { opacity: 0, height: 0 },\r\n            }}\r\n            transition={{ duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98] }}\r\n        >\r\n            <UniversalModal\r\n                printedInventories={printedInventories}\r\n                body={'checkInventory'}\r\n                isOpen={modalVisible}\r\n                toggleModal={toggleModal}\r\n            />\r\n\r\n            {dataLoading && (\r\n                <div className='fixed z-[50] backdrop-blur-[2px] left-0 right-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n\r\n            <div className='inventoriesHead mainPadding'>\r\n                <div className='font-[400] text-[1.25rem] text-blue-900'>\r\n                    {t('Inventarizatsiyalar')}\r\n                </div>\r\n                <div>\r\n                    {filteredDataTotal !== 0 && (\r\n                        <Pagination\r\n                            countPage={Number(showByTotal)}\r\n                            totalDatas={filteredDataTotal}\r\n                            currentPage={currentPage}\r\n                            setCurrentPage={setCurrentPage}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <SearchForm\r\n                filterBy={[\"total\", 'startDate', 'endDate']}\r\n                filterByTotal={filterByTotal}\r\n                setEndDate={setEndDate}\r\n                setStartDate={setStartDate}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n            />\r\n            <div className='tableContainerPadding'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 ? (\r\n                    <NotFind text={'Invnentarizatsiyalar mavjud emas!'} />\r\n                ) : (\r\n                    <Table\r\n                        isDisabled={dataLoading}\r\n                        page='inventories'\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        data={data}\r\n                        headers={headers}\r\n                        Excel={handleClick}\r\n                        Print={handleClickPrint}\r\n                        Sort={filterData}\r\n                        sortItem={sorItem}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Inventories\r\n"],"names":["t","useTranslation","headers","styles","title","filter","dispatch","useDispatch","connectors","errorConnectors","clearErrorConnectors","loading","dataLoading","total","useSelector","state","inventoryConnectors","sorItem","setSorItem","useState","sort","count","storeData","setStoreData","data","setData","showByTotal","setShowByTotal","currentPage","setCurrentPage","filteredDataTotal","setFilteredDataTotal","startDate","setStartDate","Date","getFullYear","getMonth","endDate","setEndDate","printedInventories","setPrintedInventories","modalVisible","setModalVisible","headersInventories","continueHandleClick","useCallback","wscols","json","cols","Object","keys","maxLength","reduce","acc","curr","length","map","col","wch","autoFillColumnWidth","wb","XLSX","book_new","ws","json_to_sheet","sheet_add_aoa","sheet_add_json","origin","skipHeader","book_append_sheet","toLocaleDateString","useEffect","universalToast","body","countPage","getDate","toISOString","getConnectors","_jsxs","motion","section","initial","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","children","_jsx","UniversalModal","isOpen","toggleModal","className","SmallLoader","Pagination","Number","totalDatas","SearchForm","filterBy","filterByTotal","_ref","value","Spinner","NotFind","text","Table","isDisabled","page","Excel","handleClick","e","idx","id","_id","postInventoriesId","then","_ref3","payload","inventories","newData","item","index","nth","createdAt","code","productdata","name","incomingprice","roundUzs","price","incomingpriceuzs","productcount","inventorycount","difference","differenceUZS","push","prev","el","Print","_ref2","Sort","filterKey","universalSort","sortItem"],"sourceRoot":""}