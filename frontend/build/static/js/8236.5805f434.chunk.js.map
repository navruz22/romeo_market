{"version":3,"file":"static/js/8236.5805f434.chunk.js","mappings":"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","sources":["Components/BarCode/Body.js","Components/BarCode/BarCode.js","Components/FilialButtons/FilialButtons.js","Pages/Labels/Labels.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.js","../node_modules/framer-motion/dist/es/utils/use-force-update.js","Pages/FilialExchanges/FilialExchengesProduct.js","Pages/Labels/LabelsIncome.js","Components/Filial/Filial.js","Pages/MarketFilials/MarketFilials.js","Pages/ProductIdExchanges/ProductIdExchanges.js"],"sourcesContent":["import React from 'react'\r\nimport {useBarcode} from 'next-barcode'\r\nimport {useSelector} from 'react-redux'\r\nimport { t } from 'i18next'\r\n\r\nexport const Body = ({product, currency, marketName, isShowPrice}) => {\r\n    const {inputRef} = useBarcode({\r\n        value: product?.productdata?.barcode,\r\n        options: {\r\n            background: '#fff',\r\n            width: '2cm',\r\n            height: '40cm',\r\n        },\r\n    })\r\n    console.log(product);\r\n    const {currency: currencyEx} = useSelector((state) => state.currency)\r\n    return (\r\n        <div className='w-[40mm] break-after-page font-sans h-[65mm] times '>\r\n            <div className='w-[65mm] rotate-90 mt-20 -ml-0 text-xl'>\r\n                {/*<div className='text-[14px] font-medium text-right pb-[10px]'>*/}\r\n                {/*    1$ - {currencyEx} UZS*/}\r\n                {/*</div>*/}\r\n                <div className='text-center font-bold text-2xl p-[1px]'>\r\n                    <span>\"{marketName}\"</span>\r\n                    {/*<hr />*/}\r\n                </div>\r\n                <div>\r\n                    <div className='text-center text-lg p-1'>\r\n                        {t('Nomi')}:\r\n                        <br />{' '}\r\n                        <span className='font-bold'>\r\n                            {product.productdata && product.productdata.name}\r\n                        </span>\r\n                    </div>\r\n                    {isShowPrice && <div className='text-2xl font-bold text-center p-1'>\r\n                        <span>{product.price ? 'Цена:' : ''}</span>{' '}\r\n                        <span>\r\n                            {(product.price &&\r\n                                (currency === 'UZS'\r\n                                    ? product.price.sellingpriceuzs.toLocaleString(\r\n                                          'ru-RU'\r\n                                      )\r\n                                    : product.price.sellingprice.toLocaleString(\r\n                                          'ru-RU'\r\n                                      )) +\r\n                                    ' ' +\r\n                                    currency) ||\r\n                                ''}\r\n                        </span>\r\n                    </div>}\r\n                    <div>\r\n                        <canvas ref={inputRef} />\r\n                    </div>\r\n                    <div className='flex justify-center p-1'>\r\n                        {/* <svg ref={inputRef} className='h-[23mm] w-[80mm]'  /> */}\r\n                    </div>\r\n                    <div className='flex justify-between text-xl p-1'>\r\n                        <div>\r\n                            {t('Kodi')}: {product.category && product.category.code}{' '}\r\n                            {product.productdata && product.productdata.code}\r\n                        </div>\r\n                        <div>{new Date().toLocaleDateString()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Body} from './Body.js'\r\nimport {map, range, uniqueId} from 'lodash'\r\n\r\nconst repeat = (count, element) => {\r\n    let result = []\r\n    for (let i = 0; i < count; i++) {\r\n        result.push(element)\r\n    }\r\n    return result\r\n}\r\n\r\nexport const BarCode = (\r\n    {\r\n        countOfCheques,\r\n        productForCheques,\r\n        printedData,\r\n        componentRef,\r\n        currency,\r\n        marketName,\r\n        isShowPrice\r\n    }) => {\r\n    return (\r\n        <div ref={componentRef}>\r\n            {productForCheques &&\r\n                countOfCheques &&\r\n                map(productForCheques, (productForCheque) =>\r\n                    range(0, countOfCheques).map(() => {\r\n                        return (\r\n                            <Body\r\n                                key={uniqueId('barCode')}\r\n                                currency={currency}\r\n                                product={productForCheque}\r\n                                marketName={marketName}\r\n                                isShowPrice={isShowPrice}\r\n                            />\r\n                        )\r\n                    })\r\n                )}\r\n            {\r\n                map(printedData, item => <div key={uniqueId('barCodeContainer')}>\r\n                    {\r\n                        map(repeat(item.numberOfChecks, item.product), (product) => <Body\r\n                            key={uniqueId('barCode')}\r\n                            currency={currency}\r\n                            product={product}\r\n                            marketName={marketName}\r\n                            isShowPrice={isShowPrice}\r\n                        />)\r\n                    }\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCartOutline, IoCubeOutline, IoEnterOutline, IoNewspaperOutline} from 'react-icons/io5'\r\n\r\nfunction FilialButtons({type, onClick, active}) {\r\n    const propsType = {\r\n        product: {\r\n            icon: <IoNewspaperOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#12B76A]'\r\n        },\r\n        selling: {\r\n            icon: <IoCartOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#F79009]'\r\n        },\r\n        payments: {\r\n            icon: <IoCubeOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#00B4CC]'\r\n        },\r\n        income: {\r\n            icon: <IoEnterOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#00B4CC]'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={`${active ? 'filial-active' : propsType[type].bgColor} shopButton`}\r\n        >\r\n            {propsType[type].icon}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default FilialButtons\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport ExportBtn from '../../Components/Buttons/ExportBtn'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport Table from '../../Components/Table/Table'\r\nimport { motion } from 'framer-motion'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm.js'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport {\r\n    clearSearchedProducts,\r\n    getProducts,\r\n    getProductsAll,\r\n    getProductsByFilter\r\n} from '../Products/Create/productSlice.js'\r\nimport { useReactToPrint } from 'react-to-print'\r\nimport { BarCode } from '../../Components/BarCode/BarCode.js'\r\nimport { exportExcel, universalSort } from '../../App/globalFunctions.js'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { filter, map } from 'lodash'\r\nimport { universalToast } from '../../Components/ToastMessages/ToastMessages'\r\nimport Checkbox from '../../Components/Checkbox/Checkbox'\r\n\r\nconst Labels = ({ id }) => {\r\n    const { t } = useTranslation(['common'])\r\n\r\n    const headers = [\r\n        {\r\n            title: t('№'),\r\n        },\r\n        {\r\n            title: t('Kategoriyasi'),\r\n            filter: 'category.code',\r\n        },\r\n        {\r\n            title: t('Maxsulot kodi'),\r\n            filter: 'productdata.code',\r\n        },\r\n        {\r\n            title: t('Maxsulot nomi'),\r\n            filter: 'productdata.name',\r\n        },\r\n        {\r\n            title: t('Soni(dona)'),\r\n            filter: 'product.total',\r\n        },\r\n        {\r\n            title: t('Olish'),\r\n            filter: 'price.incomingprice',\r\n        },\r\n        {\r\n            title: t('Olish jami'),\r\n        },\r\n        {\r\n            title: t('Sotish'),\r\n            filter: 'price.sellingprice',\r\n        },\r\n        {\r\n            title: t('Sotish jami'),\r\n        },\r\n        {\r\n            title: t('Cheklar soni'),\r\n        },\r\n        {\r\n            title: '',\r\n        },\r\n    ]\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        products,\r\n        total,\r\n        loading,\r\n        searchedProducts,\r\n        totalSearched,\r\n        loadingExcel,\r\n    } = useSelector((state) => state.products)\r\n\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n\r\n    const {\r\n        market: { name },\r\n    } = useSelector((state) => state.login)\r\n\r\n    const [data, setData] = useState(products)\r\n    const [searchedData, setSearchedData] = useState(searchedProducts)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [searchByCode, setSearchByCode] = useState('')\r\n    const [searchByName, setSearchByName] = useState('')\r\n    const [searchByCategory, setSearchByCategory] = useState('')\r\n    const [productForCheques, setProductForCheques] = useState(null)\r\n    const [countOfCheques, setCountOfCheques] = useState('')\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0,\r\n    })\r\n    const [dataLoaded, setDataLoaded] = useState(false)\r\n    const [printedData, setPrintedData] = useState([])\r\n\r\n    const [isShowPrice, setIsShowPrice] = useState(true)\r\n\r\n    // handle change of search inputs\r\n    const filterByCode = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCode(val)\r\n            ; (searchedData.length > 0 || totalSearched > 0) &&\r\n                dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata.code.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    const filterByName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n            ; (searchedData.length > 0 || totalSearched > 0) &&\r\n                dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata.name\r\n                    .toLowerCase()\r\n                    .includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    // filter by total\r\n    const filterByTotal = ({ value }) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // filter by category\r\n    const filterByCategory = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCategory(val)\r\n            ; (searchedData.length > 0 || totalSearched > 0) &&\r\n                dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.category.code.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        1,\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        '',\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        -1,\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1,\r\n            })\r\n            universalSort(\r\n                searchedData.length > 0 ? searchedData : data,\r\n                searchedData.length > 0 ? setSearchedData : setData,\r\n                filterKey,\r\n                -1,\r\n                searchedData ? searchedProducts : products,\r\n                searchedData.length > 0\r\n            )\r\n        }\r\n    }\r\n\r\n    // handle print\r\n    const componentRef = useRef()\r\n    const onBeforeGetContentResolve = useRef()\r\n\r\n    const handleOnBeforeGetContent = () => {\r\n        setDataLoaded(true)\r\n        return new Promise((resolve) => {\r\n            onBeforeGetContentResolve.current = resolve\r\n            setTimeout(() => {\r\n                setDataLoaded(false)\r\n                resolve()\r\n            }, 2000)\r\n        })\r\n    }\r\n\r\n    const handleChequeCounts = (e) => {\r\n        setCountOfCheques(e.target.value)\r\n        setProductForCheques(searchedData.length > 0 ? searchedData : data)\r\n    }\r\n\r\n    const handleChequeCount = (e, product) => {\r\n        const prevIndex = printedData.findIndex(\r\n            (item) => item.product._id === product._id\r\n        )\r\n        if (prevIndex !== -1) {\r\n            if (e.target.value.trim() !== '') {\r\n                printedData[prevIndex].numberOfChecks = Number(e.target.value)\r\n            } else {\r\n                printedData.splice(prevIndex, 1)\r\n            }\r\n            setPrintedData([...printedData])\r\n        } else {\r\n            setPrintedData([\r\n                ...printedData,\r\n                { product, numberOfChecks: Number(e.target.value) },\r\n            ])\r\n        }\r\n    }\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n    })\r\n\r\n    const handlePrintToProduct = async (product, single) => {\r\n        if (single)\r\n            setPrintedData([\r\n                ...filter(\r\n                    printedData,\r\n                    (item) => item.product._id === product._id\r\n                ),\r\n            ])\r\n        await handlePrint()\r\n    }\r\n\r\n    const filterByCodeAndNameAndCategoryWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                filialId: id,\r\n                currentPage: 0,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                    code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                    category: searchByCategory.replace(/\\s+/g, ''),\r\n                },\r\n            }\r\n            dispatch(getProductsByFilter(body))\r\n        }\r\n    }\r\n    console.log(isShowPrice);\r\n    const exportData = () => {\r\n        let fileName = 'Etiketka'\r\n        const exportProductHead = [\r\n            '№',\r\n            'Mahsulot kodi',\r\n            'Mahsulot nomi',\r\n            'Soni',\r\n            'Olish narxi USD',\r\n            'Olish narxi UZS',\r\n            'Olish narxi jami USD',\r\n            'Olish narxi jami UZS',\r\n            'Sotish narxi USD',\r\n            'Sotish narxi UZS',\r\n            'Sotish narxi jami UZS',\r\n            'Sotish narxi jami USD',\r\n        ]\r\n        dispatch(getProductsAll()).then(({ error, payload }) => {\r\n            if (!error) {\r\n                if (payload?.length > 0) {\r\n                    const ReportData = map(payload, (item, index) => ({\r\n                        nth: index + 1,\r\n                        code: item?.productdata?.code || '',\r\n                        name: item?.productdata?.name || '',\r\n                        total: item.total + item?.unit?.name || '',\r\n                        incomingprice: item?.price?.incomingprice || '',\r\n                        incomingpriceuzs: item?.price?.incomingpriceuzs || '',\r\n                        incomingpricealluzs:\r\n                            item?.price?.incomingpriceuzs * item.total,\r\n                        incomingpriceallusd:\r\n                            item?.price?.incomingprice * item.total,\r\n                        sellingprice: item?.price?.sellingprice || '',\r\n                        sellingpriceuzs: item?.price?.sellingpriceuzs || '',\r\n                        sellingalluzs:\r\n                            item?.price?.sellingpriceuzs * item.total,\r\n                        sellingallusd: item?.price?.sellingprice * item.total,\r\n                    }))\r\n                    exportExcel(ReportData, fileName, exportProductHead)\r\n                } else {\r\n                    universalToast(\"Jadvalda ma'lumot mavjud emas !\", 'warning')\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            filialId: id,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                category: searchByCategory.replace(/\\s+/g, ''),\r\n            },\r\n        }\r\n        dispatch(getProducts(body))\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, showByTotal, dispatch])\r\n\r\n    useEffect(() => {\r\n        setData(products)\r\n    }, [products])\r\n\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n\r\n    useEffect(() => {\r\n        setSearchedData(searchedProducts)\r\n    }, [searchedProducts])\r\n\r\n    useEffect(() => {\r\n        if (\r\n            dataLoaded &&\r\n            typeof onBeforeGetContentResolve.current === 'function'\r\n        ) {\r\n            onBeforeGetContentResolve.current()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [onBeforeGetContentResolve.current, dataLoaded])\r\n\r\n    useEffect(() => {\r\n        if (!dataLoaded) {\r\n            setPrintedData([])\r\n            setCountOfCheques('')\r\n            // setIsShowPrice(false)\r\n            setProductForCheques(null)\r\n        }\r\n    }, [dataLoaded])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: { opacity: 1, height: 'auto' },\r\n                collapsed: { opacity: 0, height: 0 },\r\n            }}\r\n            transition={{ duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98] }}\r\n        >\r\n            {loadingExcel ||\r\n                (dataLoaded && (\r\n                    <div className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                        <Spinner />\r\n                    </div>\r\n                ))}\r\n            <div className='mt-10 lg:mt-0 pagination mainPadding'>\r\n                <ExportBtn onClick={exportData} />\r\n                {/* <p className='product_name'>{t('Etiketka')}</p> */}\r\n\r\n            </div>\r\n            <SearchForm\r\n                filterBy={[\r\n                    'total',\r\n                    'category',\r\n                    'code',\r\n                    'name',\r\n                    'checks',\r\n                    'checkbox',\r\n                    'printBtn',\r\n                ]}\r\n                filterByCode={filterByCode}\r\n                filterByName={filterByName}\r\n                searchByCode={searchByCode}\r\n                searchByName={searchByName}\r\n                searchByCategory={searchByCategory}\r\n                filterByCategory={filterByCategory}\r\n                numberOfChecks={countOfCheques}\r\n                filterByTotal={filterByTotal}\r\n                filterByCodeAndNameAndCategoryWhenPressEnter={\r\n                    filterByCodeAndNameAndCategoryWhenPressEnter\r\n                }\r\n                clickPrintBtn={handlePrintToProduct}\r\n                setNumberOfChecks={handleChequeCounts}\r\n                check={!isShowPrice}\r\n                handleChangeCheck={() => setIsShowPrice(!isShowPrice)}\r\n                checkboxLabel={'Narxi'}\r\n            />\r\n            {/* <Checkbox\r\n                id={'isShowPrice'}\r\n                onChange={() => setIsShowPrice(!isShowPrice)}\r\n                value={!isShowPrice}\r\n                label={t('Narxi')}\r\n            /> */}\r\n            <div className='tableContainerPadding'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={t('Maxsulotlar mavjud emas')} />\r\n                ) : (\r\n                    <Table\r\n                        page={'productreport'}\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        currency={currencyType}\r\n                        headers={headers}\r\n                        Sort={filterData}\r\n                        sortItem={sorItem}\r\n                        placeholder={`${t('misol')} : 10`}\r\n                        changeHandler={handleChequeCount}\r\n                        Print={handlePrintToProduct}\r\n                        printedData={printedData}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className='hidden'>\r\n                <BarCode\r\n                    currency={currencyType}\r\n                    componentRef={componentRef}\r\n                    countOfCheques={countOfCheques}\r\n                    productForCheques={productForCheques}\r\n                    printedData={printedData}\r\n                    marketName={name}\r\n                    isShowPrice={isShowPrice}\r\n                />\r\n            </div>\r\n            <div className='m-3 flex justify-center'>\r\n                {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearched || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Labels\r\n","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            presenceChildren.set(childId, true);\n            var allComplete = true;\n            presenceChildren.forEach(function (isComplete) {\n                if (!isComplete)\n                    allComplete = false;\n            });\n            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __spreadArray, __read } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.js';\nimport { PresenceChild } from './PresenceChild.js';\nimport { SharedLayoutContext, isSharedLayout } from '../../context/SharedLayoutContext.js';\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * @library\n *\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { Frame, AnimatePresence } from 'framer'\n *\n * // As items are added and removed from `items`\n * export function Items({ items }) {\n *   return (\n *     <AnimatePresence>\n *       {items.map(item => (\n *         <Frame\n *           key={item.id}\n *           initial={{ opacity: 0 }}\n *           animate={{ opacity: 1 }}\n *           exit={{ opacity: 0 }}\n *         />\n *       ))}\n *     </AnimatePresence>\n *   )\n * }\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * @motion\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var forceRender = useForceUpdate();\n    var layoutContext = useContext(SharedLayoutContext);\n    if (isSharedLayout(layoutContext)) {\n        forceRender = layoutContext.forceUpdate;\n    }\n    var isInitialRender = useRef(true);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map())\n        .current;\n    // A living record of all currently exiting components.\n    var exiting = useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React.createElement(React.Fragment, null, filteredChildren.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = __spreadArray([], __read(filteredChildren));\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport { useCallback, useRef, useState } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.js';\n\nfunction useForceUpdate() {\n    var unloadingRef = useRef(false);\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (unloadingRef.current = true); });\n    return useCallback(function () {\n        !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n}\n\nexport { useForceUpdate };\n","import React, {useEffect, useState} from 'react'\r\nimport Table from '../../Components/Table/Table'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n    changeEndDate,\r\n    changeStartDate,\r\n    clearSearchedExchanges,\r\n    getExchangesFilterId,\r\n    getFilialShopData\r\n} from './filialExchengesSlice.js'\r\nimport {motion} from 'framer-motion'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport ExportBtn from '../../Components/Buttons/ExportBtn'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport {filter, map} from 'lodash'\r\nimport NotFind from '../../Components/NotFind/NotFind'\r\nimport SmallLoader from '../../Components/Spinner/SmallLoader'\r\nimport {exportExcel} from '../../App/globalFunctions'\r\nimport {universalToast} from '../../Components/ToastMessages/ToastMessages'\r\nimport {t} from 'i18next'\r\n\r\nfunction FilialExchangesProduct({id, currency}) {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        shops,\r\n        loading,\r\n        total,\r\n        totalSearched,\r\n        searchedExchanges,\r\n        startDate,\r\n        endDate,\r\n    } = useSelector((state) => state.filialData)\r\n\r\n    const headers = [\r\n        {styles: 'w-[10%] text-start', title: '№'},\r\n        {styles: 'w-[10%] text-start', filter: 'createdAt', title: 'Sana'},\r\n        {styles: 'w-[10%] text-start', filter: 'id', title: 'ID'},\r\n        {styles: 'text-start', title: 'Maxsulot turi'},\r\n        {styles: 'text-start', title: 'Maxsulot soni'},\r\n        {styles: 'text-start', title: 'Qabul qilish'},\r\n        {styles: 'text-start', title: 'Sotish'},\r\n        {styles: 'w-[10%]', title: ' '},\r\n    ]\r\n\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [data, setData] = useState([])\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [searchById, setSearchById] = useState('')\r\n    const [searchedData, setSearchedData] = useState(searchedExchanges)\r\n\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    const filterById = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchById(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedExchanges())\r\n        if (valForSearch === '') {\r\n            setData(shops)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredExchanges = filter(shops, (item) => {\r\n                return item._id.includes(valForSearch)\r\n            })\r\n            setData(filteredExchanges)\r\n            setFilteredDataTotal(filteredExchanges.length)\r\n        }\r\n    }\r\n\r\n    const filterByIdWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            const body = {\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchById.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n            }\r\n            dispatch(getExchangesFilterId(body))\r\n        }\r\n    }\r\n\r\n    const exportData = () => {\r\n        let fileName = `${t(\"Almashinilgan tovarlar\")}`\r\n        const headersExcel = [\r\n            '№',\r\n            t('Sana'),\r\n            t('Id'),\r\n            t('Maxsulot turi'),\r\n            t('Maxsulot Soni'),\r\n            t('Jami olish summasi'),\r\n            t('Jami sotish summasi'),\r\n        ]\r\n        if (data?.length > 0) {\r\n            const ExchangesDatas = map(data, (item, index) => ({\r\n                nth: index + 1,\r\n                date: new Date(item?.createdAt).toLocaleDateString() || '',\r\n                product_id: item?._id || '',\r\n                product_type: item?.products.length || '',\r\n                product_number: item?.pieces || '',\r\n                all_get_product:\r\n                    currency === 'UZS'\r\n                        ? (\r\n                              Math.round(item.totalincomingpriceuzs * 1) / 1\r\n                          ).toLocaleString('ru-RU')\r\n                        : (\r\n                              Math.round(item.totalincomingprice * 1000) / 1000\r\n                          ).toLocaleString('ru-RU'),\r\n                all_sell_product:\r\n                    currency === 'UZS'\r\n                        ? (\r\n                              Math.round(item?.totalsellingpriceuzs * 1) / 1\r\n                          ).toLocaleString('ru-RU')\r\n                        : (\r\n                              Math.round(item?.totalsellingprice * 1000) / 1000\r\n                          ).toLocaleString('ru-RU'),\r\n            }))\r\n            exportExcel(ExchangesDatas, fileName, headersExcel)\r\n        } else {\r\n            universalToast(\"Jadvalda ma'lumot mavjud emas !\", 'warning')\r\n        }\r\n    }\r\n\r\n    const handleStartDate = (e) => {\r\n        dispatch(changeStartDate({start: e.toISOString()}))\r\n    }\r\n    const handleEndDate = (e) => {\r\n        dispatch(changeEndDate({end: e.toISOString()}))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            startDate: new Date(\r\n                new Date(startDate).getFullYear(),\r\n                new Date(startDate).getMonth(),\r\n                new Date(startDate).getDate()\r\n            ).toISOString(),\r\n            endDate: endDate,\r\n            filial: id,\r\n        }\r\n        dispatch(getFilialShopData(body))\r\n    }, [dispatch, id, startDate, endDate, currentPage, showByTotal])\r\n    useEffect(() => {\r\n        setData(shops)\r\n    }, [dispatch, shops, startDate, endDate])\r\n\r\n    useEffect(() => {\r\n        setSearchedData(searchedExchanges)\r\n    }, [searchedExchanges])\r\n\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            <div className='pagination-supplier mainPadding'>\r\n                <ExportBtn onClick={exportData} />\r\n                <p className='supplier-title'>`${t(\"Almashinilgan tovarlar\")}`</p>\r\n                <div>\r\n                    {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                        <Pagination\r\n                            countPage={Number(showByTotal)}\r\n                            totalDatas={totalSearched || filteredDataTotal}\r\n                            setCurrentPage={setCurrentPage}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <SearchForm\r\n                filterBy={['total', 'id', 'startDate', 'endDate']}\r\n                filterByTotal={filterByTotal}\r\n                searchById={searchById}\r\n                filterById={filterById}\r\n                filterByIdWhenPressEnter={filterByIdWhenPressEnter}\r\n                startDate={new Date(startDate)}\r\n                endDate={new Date(endDate)}\r\n                setStartDate={handleStartDate}\r\n                setEndDate={handleEndDate}\r\n            />\r\n            <div className='pl-[2.5rem] pr-[1.25rem] pb-[1.25rem]'>\r\n                {loading ? (\r\n                    <SmallLoader />\r\n                ) : data.length === 0 ? (\r\n                    <NotFind text={`${t(\"Tovarlar mavjud emas\")}`} />\r\n                ) : (\r\n                    <Table\r\n                        data={data}\r\n                        page={'filialShop'}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        headers={headers}\r\n                        currency={currency}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default FilialExchangesProduct\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport ExportBtn from '../../Components/Buttons/ExportBtn'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport Table from '../../Components/Table/Table'\r\nimport {motion} from 'framer-motion'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport {\r\n    clearSearchedProducts,\r\n    getIncomeProducts,\r\n    getProductsAll,\r\n    getProductsByFilter\r\n} from '../Products/Create/productSlice.js'\r\nimport {useReactToPrint} from 'react-to-print'\r\nimport {BarCode} from '../../Components/BarCode/BarCode.js'\r\nimport {exportExcel, universalSort} from '../../App/globalFunctions.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {filter, map} from 'lodash'\r\nimport {universalToast} from '../../Components/ToastMessages/ToastMessages'\r\n\r\nconst LabelsIncome = ({id}) => {\r\n    const {t} = useTranslation(['common'])\r\n\r\n    const headers = [\r\n        {\r\n            title: t('№'),\r\n        },\r\n        {\r\n            title: t('Kategoriyasi'),\r\n            filter: 'category.code',\r\n        },\r\n        {\r\n            title: t('Maxsulot kodi'),\r\n            filter: 'productdata.code',\r\n        },\r\n        {\r\n            title: t('Maxsulot nomi'),\r\n            filter: 'productdata.name',\r\n        },\r\n        {\r\n            title: t('Soni(dona)'),\r\n            filter: 'product.total',\r\n        },\r\n        {\r\n            title: t('Olish'),\r\n            filter: 'price.incomingprice',\r\n        },\r\n        {\r\n            title: t('Olish jami'),\r\n        },\r\n        {\r\n            title: t('Sotish'),\r\n            filter: 'price.sellingprice',\r\n        },\r\n        {\r\n            title: t('Sotish jami'),\r\n        },\r\n        {\r\n            title: t('Cheklar soni'),\r\n        },\r\n        {\r\n            title: '',\r\n        },\r\n    ]\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        products,\r\n        total,\r\n        loading,\r\n        searchedProducts,\r\n        totalSearched,\r\n        loadingExcel,\r\n    } = useSelector((state) => state.products)\r\n\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n\r\n    const {\r\n        market: {name},\r\n    } = useSelector((state) => state.login)\r\n\r\n    const [data, setData] = useState(products)\r\n    const [searchedData, setSearchedData] = useState(searchedProducts)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [searchByCode, setSearchByCode] = useState('')\r\n    const [searchByName, setSearchByName] = useState('')\r\n    const [searchByCategory, setSearchByCategory] = useState('')\r\n    const [productForCheques, setProductForCheques] = useState(null)\r\n    const [countOfCheques, setCountOfCheques] = useState('')\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0,\r\n    })\r\n    const [dataLoaded, setDataLoaded] = useState(false)\r\n    const [printedData, setPrintedData] = useState([])\r\n\r\n    // handle change of search inputs\r\n    const filterByCode = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCode(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata.code.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    const filterByName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata.name\r\n                    .toLowerCase()\r\n                    .includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    // filter by total\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // filter by category\r\n    const filterByCategory = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCategory(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.category.code.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        1,\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        '',\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        -1,\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1,\r\n            })\r\n            universalSort(\r\n                searchedData.length > 0 ? searchedData : data,\r\n                searchedData.length > 0 ? setSearchedData : setData,\r\n                filterKey,\r\n                -1,\r\n                searchedData ? searchedProducts : products,\r\n                searchedData.length > 0\r\n            )\r\n        }\r\n    }\r\n\r\n    // handle print\r\n    const componentRef = useRef()\r\n    const onBeforeGetContentResolve = useRef()\r\n\r\n    const handleOnBeforeGetContent = () => {\r\n        setDataLoaded(true)\r\n        return new Promise((resolve) => {\r\n            onBeforeGetContentResolve.current = resolve\r\n            setTimeout(() => {\r\n                setDataLoaded(false)\r\n                resolve()\r\n            }, 2000)\r\n        })\r\n    }\r\n\r\n    const handleChequeCounts = (e) => {\r\n        setCountOfCheques(e.target.value)\r\n        setProductForCheques(searchedData.length > 0 ? searchedData : data)\r\n    }\r\n\r\n    const handleChequeCount = (e, product) => {\r\n        const prevIndex = printedData.findIndex(\r\n            (item) => item.product._id === product._id\r\n        )\r\n        if (prevIndex !== -1) {\r\n            if (e.target.value.trim() !== '') {\r\n                printedData[prevIndex].numberOfChecks = Number(e.target.value)\r\n            } else {\r\n                printedData.splice(prevIndex, 1)\r\n            }\r\n            setPrintedData([...printedData])\r\n        } else {\r\n            setPrintedData([\r\n                ...printedData,\r\n                {product, numberOfChecks: Number(e.target.value)},\r\n            ])\r\n        }\r\n    }\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n    })\r\n\r\n    const handlePrintToProduct = async (product, single) => {\r\n        if (single)\r\n            setPrintedData([\r\n                ...filter(\r\n                    printedData,\r\n                    (item) => item.product._id === product._id\r\n                ),\r\n            ])\r\n        await handlePrint()\r\n    }\r\n\r\n    const filterByCodeAndNameAndCategoryWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                filialId: id,\r\n                currentPage: 0,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                    code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                    category: searchByCategory.replace(/\\s+/g, ''),\r\n                },\r\n            }\r\n            dispatch(getProductsByFilter(body))\r\n        }\r\n    }\r\n\r\n    const exportData = () => {\r\n        let fileName = 'Etiketka'\r\n        const exportProductHead = [\r\n            '№',\r\n            'Mahsulot kodi',\r\n            'Mahsulot nomi',\r\n            'Soni',\r\n            'Olish narxi USD',\r\n            'Olish narxi UZS',\r\n            'Olish narxi jami USD',\r\n            'Olish narxi jami UZS',\r\n            'Sotish narxi USD',\r\n            'Sotish narxi UZS',\r\n            'Sotish narxi jami UZS',\r\n            'Sotish narxi jami USD',\r\n        ]\r\n        dispatch(getProductsAll()).then(({error, payload}) => {\r\n            if (!error) {\r\n                if (payload?.length > 0) {\r\n                    const ReportData = map(payload, (item, index) => ({\r\n                        nth: index + 1,\r\n                        code: item?.productdata?.code || '',\r\n                        name: item?.productdata?.name || '',\r\n                        total: item.total + item?.unit?.name || '',\r\n                        incomingprice: item?.price?.incomingprice || '',\r\n                        incomingpriceuzs: item?.price?.incomingpriceuzs || '',\r\n                        incomingpricealluzs:\r\n                            item?.price?.incomingpriceuzs * item.total,\r\n                        incomingpriceallusd:\r\n                            item?.price?.incomingprice * item.total,\r\n                        sellingprice: item?.price?.sellingprice || '',\r\n                        sellingpriceuzs: item?.price?.sellingpriceuzs || '',\r\n                        sellingalluzs:\r\n                            item?.price?.sellingpriceuzs * item.total,\r\n                        sellingallusd: item?.price?.sellingprice * item.total,\r\n                    }))\r\n                    exportExcel(ReportData, fileName, exportProductHead)\r\n                } else {\r\n                    universalToast(\"Jadvalda ma'lumot mavjud emas !\", 'warning')\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            filial: id,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                category: searchByCategory.replace(/\\s+/g, ''),\r\n            },\r\n        }\r\n        dispatch(getIncomeProducts(body))\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, showByTotal, dispatch])\r\n\r\n    useEffect(() => {\r\n        setData(products)\r\n    }, [products])\r\n\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n\r\n    useEffect(() => {\r\n        setSearchedData(searchedProducts)\r\n    }, [searchedProducts])\r\n\r\n    useEffect(() => {\r\n        if (\r\n            dataLoaded &&\r\n            typeof onBeforeGetContentResolve.current === 'function'\r\n        ) {\r\n            onBeforeGetContentResolve.current()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [onBeforeGetContentResolve.current, dataLoaded])\r\n\r\n    useEffect(() => {\r\n        if (!dataLoaded) {\r\n            setPrintedData([])\r\n            setCountOfCheques('')\r\n            setProductForCheques(null)\r\n        }\r\n    }, [dataLoaded])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            {loadingExcel ||\r\n                (dataLoaded && (\r\n                    <div className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                        <Spinner />\r\n                    </div>\r\n                ))}\r\n            <div className='pagination mainPadding'>\r\n                <ExportBtn onClick={exportData} />\r\n                <p className='product_name'>{t('Etiketka')}</p>\r\n                {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearched || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div>\r\n            <SearchForm\r\n                filterBy={[\r\n                    'total',\r\n                    'category',\r\n                    'code',\r\n                    'name',\r\n                    'checks',\r\n                    'printBtn',\r\n                ]}\r\n                filterByCode={filterByCode}\r\n                filterByName={filterByName}\r\n                searchByCode={searchByCode}\r\n                searchByName={searchByName}\r\n                searchByCategory={searchByCategory}\r\n                filterByCategory={filterByCategory}\r\n                numberOfChecks={countOfCheques}\r\n                filterByTotal={filterByTotal}\r\n                filterByCodeAndNameAndCategoryWhenPressEnter={\r\n                    filterByCodeAndNameAndCategoryWhenPressEnter\r\n                }\r\n                clickPrintBtn={handlePrintToProduct}\r\n                setNumberOfChecks={handleChequeCounts}\r\n            />\r\n            <div className='tableContainerPadding'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={t('Maxsulotlar mavjud emas')} />\r\n                ) : (\r\n                    <Table\r\n                        page={'labelsincome'}\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        currency={currencyType}\r\n                        headers={headers}\r\n                        Sort={filterData}\r\n                        sortItem={sorItem}\r\n                        placeholder={`${t('misol')} : 10`}\r\n                        changeHandler={handleChequeCount}\r\n                        Print={handlePrintToProduct}\r\n                        printedData={printedData}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className='hidden'>\r\n                <BarCode\r\n                    currency={currencyType}\r\n                    componentRef={componentRef}\r\n                    countOfCheques={countOfCheques}\r\n                    productForCheques={productForCheques}\r\n                    printedData={printedData}\r\n                    marketName={name}\r\n                />\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default LabelsIncome\r\n","import React, {useEffect, useState} from 'react'\r\nimport FilialButtons from '../FilialButtons/FilialButtons'\r\nimport Avatar from '../Avatar/Avatar.js'\r\nimport {Link, Route, Routes, useLocation, useParams} from 'react-router-dom'\r\nimport Labels from '../../Pages/Labels/Labels.js'\r\nimport {AnimatePresence} from 'framer-motion'\r\nimport Sellings from '../../Pages/Sale/Routes/Sellings'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {useSelector} from 'react-redux'\r\nimport FilialExchangesProduct from '../../Pages/FilialExchanges/FilialExchengesProduct'\r\nimport ProductIdExchanges from '../../Pages/ProductIdExchanges/ProductIdExchanges'\r\nimport LabelsIncome from '../../Pages/Labels/LabelsIncome'\r\nconst Filial = ({active, value}) => {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const {tablename, _id} = useParams()\r\n    const location = useLocation()\r\n    const [reportOpen, setReprotOpen] = useState(true)\r\n    const [salesOpen, setSalesOpen] = useState(true)\r\n    const [paymentOpen, setPaymentOpen] = useState(true)\r\n    const [useParamsId, setUseParamsId] = useState(_id)\r\n    const [incomeProducts, setIncomeProducts] = useState()\r\n\r\n\r\n    const handleReportOpen = (e) => {\r\n        e && e.preventDefault()\r\n        setReprotOpen(!reportOpen)\r\n        setSalesOpen(true)\r\n        setPaymentOpen(true)\r\n    }\r\n\r\n    const handleSalesOpen = (e) => {\r\n        e && e.preventDefault()\r\n        setSalesOpen(!salesOpen)\r\n        setReprotOpen(true)\r\n        setPaymentOpen(true)\r\n    }\r\n\r\n    const handlePaymentOpen = (e) => {\r\n        e && e.preventDefault()\r\n        setPaymentOpen(!paymentOpen)\r\n        setReprotOpen(true)\r\n        setSalesOpen(true)\r\n    }\r\n\r\n    const handleIncomeProducts = (e) => {\r\n        e && e.preventDefault()\r\n        setIncomeProducts(!incomeProducts)\r\n        setReprotOpen(true)\r\n        setSalesOpen(true)\r\n    }\r\n\r\n    const {t} = useTranslation(['common'])\r\n\r\n    useEffect(() => {\r\n        if (_id) {\r\n            setUseParamsId(_id)\r\n        }\r\n    }, [_id])\r\n\r\n    return (\r\n        <section>\r\n            <div\r\n                className={`shops_card flex gap-[1.25rem] ${\r\n                    active ? 'active_shop' : ''\r\n                }`}\r\n            >\r\n                <Avatar border={true} director={value.director} />\r\n                <div className='product-cost'>\r\n                    <div\r\n                        className={'flex flex-col items-center justify-center'}\r\n                    >\r\n                        <p className='product'>{t('Kategoriyalar')}</p>\r\n                        <p className='product-number'>{value.typecount}</p>\r\n                    </div>\r\n                    <div\r\n                        className={'flex flex-col items-center justify-center'}\r\n                    >\r\n                        <p className='product'>{t('Maxsulotlar turi')}</p>\r\n                        <p className='product-number'>{value.productcount}</p>\r\n                    </div>\r\n                    <div\r\n                        className={'flex flex-col items-center justify-center'}\r\n                    >\r\n                        <p className='product'>{t('Jami')}</p>\r\n                        <p className='product-total'>\r\n                            {currencyType === 'UZS'\r\n                                ? value.totalPrice.toLocaleString('ru-Ru')\r\n                                : value.totalPriceUSD.toLocaleString(\r\n                                      'ru-Ru'\r\n                                  )}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='shop-name flex flex-col w-[13.4375rem]'>\r\n                    <div className='shop-title'>\r\n                        <p>{t(value.shopname)}</p>\r\n                    </div>\r\n                    <div className={'filial-btn'}>\r\n                        <Link\r\n                            to={`${\r\n                                reportOpen\r\n                                    ? `/dukonlar/filiallar/report/${value._id}`\r\n                                    : '/dukonlar/filiallar'\r\n                            }`}\r\n                            onClick={() => handleReportOpen()}\r\n                        >\r\n                            <FilialButtons\r\n                                type={'product'}\r\n                                active={\r\n                                    _id === value._id && tablename === 'report'\r\n                                }\r\n                            />\r\n                        </Link>\r\n                        <Link\r\n                            to={`${\r\n                                salesOpen\r\n                                    ? `/dukonlar/filiallar/sales/${value._id}`\r\n                                    : '/dukonlar/filiallar'\r\n                            } `}\r\n                            onClick={() => handleSalesOpen()}\r\n                        >\r\n                            <FilialButtons\r\n                                type={'selling'}\r\n                                active={\r\n                                    _id === value._id && tablename === 'sales'\r\n                                }\r\n                            />\r\n                        </Link>\r\n                        <Link\r\n                            to={`${\r\n                                paymentOpen\r\n                                    ? `/dukonlar/filiallar/payment/${value._id}`\r\n                                    : '/dukonlar/filiallar'\r\n                            }`}\r\n                            onClick={() => handlePaymentOpen()}\r\n                        >\r\n                            <FilialButtons\r\n                                type={'payments'}\r\n                                active={\r\n                                    (_id === value._id &&\r\n                                        tablename === 'payment') ||\r\n                                    (_id === value._id &&\r\n                                        location.pathname ===\r\n                                            `/dukonlar/filiallar/payment/${_id}/exchangesId`)\r\n                                }\r\n                            />\r\n                        </Link>\r\n                        <Link\r\n                            to={`${\r\n                                incomeProducts\r\n                                    ? `/dukonlar/filiallar/income/${value._id}`\r\n                                    : '/dukonlar/filiallar'\r\n                            }`}\r\n                            onClick={() => handleIncomeProducts()}\r\n                        >\r\n                            <FilialButtons\r\n                                type={'income'}\r\n                                active={\r\n                                    (_id === value._id &&\r\n                                        tablename === 'income') ||\r\n                                    (_id === value._id &&\r\n                                        location.pathname ===\r\n                                            `/dukonlar/filiallar/income/${_id}`)\r\n                                }\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AnimatePresence>\r\n                <Routes location={location} key={location.pathname}>\r\n                    <Route\r\n                        path={`/:tablename/:_id`}\r\n                        element={\r\n                            _id === value._id ? (\r\n                                tablename === 'report' ? (\r\n                                    <Labels id={_id} />\r\n                                ) : tablename === 'income' ? (\r\n                                    <LabelsIncome id={_id} />\r\n                                ) :  tablename === 'sales' ? (\r\n                                    <Sellings id={_id} />\r\n                                ) : (\r\n                                    <FilialExchangesProduct\r\n                                        id={value._id}\r\n                                        currency={currencyType}\r\n                                    />\r\n                                )\r\n                            ) : (\r\n                                ''\r\n                            )\r\n                        }\r\n                    />\r\n                    <Route\r\n                        path={`/:tablename/:_id/exchangesId`}\r\n                        element={\r\n                            useParamsId === value._id ? (\r\n                                <ProductIdExchanges currency={currencyType} />\r\n                            ) : (\r\n                                ''\r\n                            )\r\n                        }\r\n                    />\r\n                </Routes>\r\n            </AnimatePresence>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Filial\r\n","import React, {useEffect, useState} from 'react'\r\nimport Filial from '../../Components/Filial/Filial'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {motion} from 'framer-motion'\r\nimport SmallLoader from '../../Components/Spinner/SmallLoader'\r\nimport socket from '../../Config/socket.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {universalToast} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport {setFilialDatas} from '../ProductExchanges/productExchangesSlice.js'\r\n\r\nfunction MarketFilials() {\r\n    const {market} = useSelector((state) => state.login)\r\n    const dispatch = useDispatch()\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        market &&\r\n            socket.emit('getAllFilials', {\r\n                market: market._id,\r\n            })\r\n        market &&\r\n            socket.on('getAllFilials', ({id, filials}) => {\r\n                if (id === market._id) {\r\n                    setLoading(false)\r\n                    dispatch(setFilialDatas(filials))\r\n                    setData(\r\n                        map(filials, (filial) => {\r\n                            return {\r\n                                director: {\r\n                                    firstname:\r\n                                        filial?.director?.firstname || '',\r\n                                    lastname: filial?.director?.lastname || '',\r\n                                    image: filial?.director?.image || '',\r\n                                },\r\n                                typecount: filial?.productCategory || 0,\r\n                                productcount: filial?.productCount || 0,\r\n                                totalPrice:\r\n                                    filial?.products?.totalPriceuzs || 0,\r\n                                totalPriceUSD:\r\n                                    filial?.products?.totalPrice || 0,\r\n                                shopname: filial?.name || '',\r\n                                _id: filial?._id || '',\r\n                            }\r\n                        })\r\n                    )\r\n                }\r\n            })\r\n        market &&\r\n            socket.on('error', ({id, err}) => {\r\n                id === market._id && universalToast(err.message, 'error')\r\n            })\r\n    }, [market, dispatch])\r\n\r\n    return (\r\n        <motion.section\r\n            className='mainPadding'\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            {loading && (\r\n                <div className='fixed backdrop-blur-[2px] left-0 right-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            {data.length > 0 &&\r\n                map(data, (value) => (\r\n                    <div className='pb-[1.25rem]' key={uniqueId('filial')}>\r\n                        <Filial value={value} />\r\n                    </div>\r\n                ))}\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default MarketFilials\r\n","import React, {useEffect, useState} from 'react'\r\nimport Table from '../../Components/Table/Table'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {clearSearchedExchanges, getExchangesFilter, getFilialIdProducts} from './productIdExchangesSlice.js'\r\nimport {motion} from 'framer-motion'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport ExportBtn from '../../Components/Buttons/ExportBtn'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport {filter, map} from 'lodash'\r\nimport NotFind from '../../Components/NotFind/NotFind'\r\nimport SmallLoader from '../../Components/Spinner/SmallLoader'\r\nimport {useLocation, useNavigate} from 'react-router-dom'\r\nimport {exportExcel} from '../../App/globalFunctions'\r\nimport {universalToast} from '../../Components/ToastMessages/ToastMessages'\r\nimport {IoChevronBack} from 'react-icons/io5'\r\nimport {t} from 'i18next'\r\n\r\nfunction ProductIdExchanges({currency}) {\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const dataId = location?.state?.id\r\n    const dispatch = useDispatch()\r\n    const {idProducts, loading, total, totalSearched, searchedExchanges} =\r\n        useSelector((state) => state.exchangesIdData)\r\n    const headers = [\r\n        {styles: 'w-[10%] text-start', title: '№'},\r\n        {\r\n            styles: 'w-[10%] text-start',\r\n            filter: 'category.code',\r\n            title: 'Kategoriyasi',\r\n        },\r\n        {\r\n            styles: 'w-[10%] text-start',\r\n            filter: 'productdata.code',\r\n            title: 'Kodi',\r\n        },\r\n        {styles: 'text-start', title: 'Maxsulot nomi'},\r\n        {styles: 'text-start', filter: 'pieces', title: 'Maxsulot soni'},\r\n        {styles: 'text-start', title: 'Kelgan narxi'},\r\n        {styles: 'text-start', title: 'Jami summasi'},\r\n    ]\r\n    const [searchedData, setSearchedData] = useState(searchedExchanges)\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [data, setData] = useState([])\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [searchByCategory, setSearchByCategory] = useState('')\r\n    const [searchByCode, setSearchByCode] = useState('')\r\n    const [searchByName, setSearchByName] = useState('')\r\n\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    const filterByCategory = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCategory(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedExchanges())\r\n        if (valForSearch === '') {\r\n            setData(idProducts)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredExchanges = filter(idProducts, (item) => {\r\n                return item?.category?.code.includes(valForSearch)\r\n            })\r\n            setData(filteredExchanges)\r\n            setFilteredDataTotal(filteredExchanges.length)\r\n        }\r\n    }\r\n\r\n    const filterByCode = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCode(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedExchanges())\r\n        if (valForSearch === '') {\r\n            setData(idProducts)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredExchanges = filter(idProducts, (item) => {\r\n                return item?.productdata?.code.includes(valForSearch)\r\n            })\r\n            setData(filteredExchanges)\r\n            setFilteredDataTotal(filteredExchanges.length)\r\n        }\r\n    }\r\n\r\n    const filterByName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n            dispatch(clearSearchedExchanges())\r\n        if (valForSearch === '') {\r\n            setData(idProducts)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredExchanges = filter(idProducts, (item) => {\r\n                return item?.productdata?.name\r\n                    .toLowerCase()\r\n                    .includes(valForSearch)\r\n            })\r\n            setData(filteredExchanges)\r\n            setFilteredDataTotal(filteredExchanges.length)\r\n        }\r\n    }\r\n\r\n    const filterWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                currentPage: currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    codeofproduct: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                    nameofproduct: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                    categoryofproduct: searchByCategory\r\n                        .replace(/\\s+/g, ' ')\r\n                        .trim(),\r\n                },\r\n            }\r\n            dispatch(getExchangesFilter(body))\r\n        }\r\n    }\r\n\r\n    const exportData = () => {\r\n        let fileName = 'Barcha almashinilgan maxsulotlar'\r\n        const exportHeader = [\r\n            '№',\r\n            'Kategoriyasi',\r\n            'Kodi',\r\n            'Maxsulot Nomi',\r\n            'Maxsulot Soni',\r\n            'Kelgan Narxi UZS',\r\n            'Jami Summasi UZS',\r\n        ]\r\n        if (data?.length > 0) {\r\n            const BarcodeData = map(data, (item, index) => ({\r\n                nth: index + 1,\r\n                Category_code: item?.category?.code || '',\r\n                Product_code: item?.productdata?.code || '',\r\n                Product_name: item?.productdata?.name || '',\r\n                Product_number: item?.pieces || '',\r\n                incomingprice:\r\n                    currency === 'UZS'\r\n                        ? (\r\n                              Math.round(item?.price?.incomingpriceuzs * 1) / 1\r\n                          ).toLocaleString('ru-RU')\r\n                        : (\r\n                              Math.round(item?.price?.incomingprice * 1000) /\r\n                              1000\r\n                          ).toLocaleString('ru-RU'),\r\n                allIncomingPrice:\r\n                    currency === 'UZS'\r\n                        ? Math.round(\r\n                              item?.price?.incomingpriceuzs +\r\n                                  item?.price?.sellingpriceuzs\r\n                          ).toLocaleString('ru-RU')\r\n                        : Math.round(\r\n                              item?.price?.incomingprice +\r\n                                  item?.price?.sellingprice\r\n                          ).toLocaleString('ru-RU'),\r\n            }))\r\n            exportExcel(BarcodeData, fileName, exportHeader)\r\n        } else {\r\n            universalToast(\"Jadvalda ma'lumot mavjud emas !\", 'warning')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage: 0,\r\n            countPage: showByTotal,\r\n            transfer: dataId,\r\n        }\r\n        dispatch(getFilialIdProducts(body))\r\n    }, [dispatch, dataId, currentPage, showByTotal])\r\n\r\n    useEffect(() => {\r\n        setData(idProducts)\r\n    }, [idProducts])\r\n\r\n    useEffect(() => {\r\n        setSearchedData(searchedExchanges)\r\n    }, [searchedExchanges])\r\n\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            <div className='pagination-supplier mainPadding'>\r\n                <div className='flex gap-[1rem] items-center'>\r\n                    <span className='linktoback' onClick={() => navigate(-1)}>\r\n                        <IoChevronBack />\r\n                    </span>\r\n                    <ExportBtn onClick={exportData} />\r\n                </div>\r\n                <p className='supplier-title'>Barcha tovarlar ro'yxati</p>\r\n                <div>\r\n                    {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                        <Pagination\r\n                            countPage={Number(showByTotal)}\r\n                            totalDatas={totalSearched || filteredDataTotal}\r\n                            setCurrentPage={setCurrentPage}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <SearchForm\r\n                filterBy={['total', 'category', 'code', 'name']}\r\n                filterByTotal={filterByTotal}\r\n                searchByCategory={searchByCategory}\r\n                filterByCategory={filterByCategory}\r\n                searchByCode={searchByCode}\r\n                filterByCode={filterByCode}\r\n                searchByName={searchByName}\r\n                filterByName={filterByName}\r\n                filterByCodeAndNameAndCategoryWhenPressEnter={\r\n                    filterWhenPressEnter\r\n                }\r\n            />\r\n            <div className='pl-[2.5rem] pr-[1.25rem] pb-[1.25rem]'>\r\n                {loading ? (\r\n                    <SmallLoader />\r\n                ) : data.length === 0 ? (\r\n                    <NotFind text={`${t(\"Tovarlar mavjud emas\")}`} />\r\n                ) : (\r\n                    <Table\r\n                        data={data}\r\n                        page={'filialShopDataId'}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        headers={headers}\r\n                        currency={currency}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default ProductIdExchanges\r\n"],"names":["Body","_ref","_product$productdata","product","currency","marketName","isShowPrice","inputRef","useBarcode","value","productdata","barcode","options","background","width","height","console","log","currencyEx","useSelector","state","_jsx","className","children","_jsxs","t","name","price","sellingpriceuzs","toLocaleString","sellingprice","ref","category","code","Date","toLocaleDateString","repeat","count","element","result","i","push","BarCode","countOfCheques","productForCheques","printedData","componentRef","map","productForCheque","range","uniqueId","item","numberOfChecks","type","onClick","active","propsType","icon","IoNewspaperOutline","bgColor","selling","IoCartOutline","payments","IoCubeOutline","income","IoEnterOutline","id","useTranslation","headers","title","filter","dispatch","useDispatch","products","total","loading","searchedProducts","totalSearched","loadingExcel","currencyType","market","login","data","setData","useState","searchedData","setSearchedData","filteredDataTotal","setFilteredDataTotal","showByTotal","setShowByTotal","currentPage","setCurrentPage","searchByCode","setSearchByCode","searchByName","setSearchByName","searchByCategory","setSearchByCategory","setProductForCheques","setCountOfCheques","sorItem","setSorItem","sort","dataLoaded","setDataLoaded","setPrintedData","setIsShowPrice","useRef","onBeforeGetContentResolve","handlePrint","useReactToPrint","content","current","onBeforeGetContent","handleOnBeforeGetContent","Promise","resolve","setTimeout","handlePrintToProduct","async","single","_id","useEffect","body","filialId","countPage","search","replace","trim","getProducts","motion","section","initial","animate","exit","variants","open","opacity","collapsed","transition","duration","ease","Spinner","ExportBtn","exportData","exportProductHead","getProductsAll","then","_ref3","error","payload","length","ReportData","index","_item$productdata","_item$productdata2","_item$unit","_item$price","_item$price2","_item$price3","_item$price4","_item$price5","_item$price6","_item$price7","_item$price8","nth","unit","incomingprice","incomingpriceuzs","incomingpricealluzs","incomingpriceallusd","sellingalluzs","sellingallusd","exportExcel","universalToast","SearchForm","filterBy","filterByCode","e","val","target","valForSearch","clearSearchedProducts","filteredProducts","includes","filterByName","toLowerCase","filterByCategory","filterByTotal","_ref2","filterByCodeAndNameAndCategoryWhenPressEnter","key","getProductsByFilter","clickPrintBtn","setNumberOfChecks","check","handleChangeCheck","checkboxLabel","NotFind","text","Table","page","Sort","filterKey","universalSort","sortItem","placeholder","changeHandler","handleChequeCount","prevIndex","findIndex","Number","splice","Print","Pagination","totalDatas","presenceId","getPresenceId","PresenceChild","_a","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","allComplete","forEach","isComplete","register","delete","undefined","_","React","size","PresenceContext","Provider","Map","getChildKey","child","AnimatePresence","_b","exitBeforeEnter","_c","forceRender","unloadingRef","__read","forcedRenderCount","setForcedRenderCount","useUnmountEffect","useCallback","useForceUpdate","layoutContext","useContext","SharedLayoutContext","isSharedLayout","forceUpdate","isInitialRender","filteredChildren","filtered","Children","isValidElement","onlyElements","presentChildren","allChildren","exiting","Set","updateChildLookup","childrenToRender","__spreadArray","presentKeys","targetKeys","numPresent","indexOf","add","get","insertionIndex","removeIndex","presentChild","has","cloneElement","shops","searchedExchanges","startDate","endDate","filialData","searchById","setSearchById","getFullYear","getMonth","getDate","toISOString","filial","getFilialShopData","fileName","headersExcel","ExchangesDatas","date","createdAt","product_id","product_type","product_number","pieces","all_get_product","Math","round","totalincomingpriceuzs","totalincomingprice","all_sell_product","totalsellingpriceuzs","totalsellingprice","filterById","clearSearchedExchanges","filteredExchanges","filterByIdWhenPressEnter","getExchangesFilterId","setStartDate","changeStartDate","start","setEndDate","changeEndDate","end","SmallLoader","styles","getIncomeProducts","tablename","useParams","location","useLocation","reportOpen","setReprotOpen","salesOpen","setSalesOpen","paymentOpen","setPaymentOpen","useParamsId","setUseParamsId","incomeProducts","setIncomeProducts","Avatar","border","director","typecount","productcount","totalPrice","totalPriceUSD","shopname","Link","to","handleReportOpen","preventDefault","FilialButtons","handleSalesOpen","handlePaymentOpen","pathname","handleIncomeProducts","Routes","Route","path","Labels","LabelsIncome","Sellings","FilialExchangesProduct","ProductIdExchanges","setLoading","socket","emit","on","filials","setFilialDatas","_filial$director","_filial$director2","_filial$director3","_filial$products","_filial$products2","firstname","lastname","image","productCategory","productCount","totalPriceuzs","err","message","Filial","_location$state","navigate","useNavigate","dataId","idProducts","exchangesIdData","transfer","getFilialIdProducts","IoChevronBack","exportHeader","BarcodeData","_item$category2","_item$productdata3","_item$productdata4","Category_code","Product_code","Product_name","Product_number","allIncomingPrice","_item$category","codeofproduct","nameofproduct","categoryofproduct","getExchangesFilter"],"sourceRoot":""}