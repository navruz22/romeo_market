{"version":3,"file":"static/js/6689.74a3dc97.chunk.js","mappings":"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","sources":["Pages/Units/Unit.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport Button from '../../Components/Buttons/BtnAddRemove.js'\r\nimport Table from '../../Components/Table/Table.js'\r\nimport TableMobile from '../../Components/Table/TableMobile.js'\r\nimport FieldContainer from '../../Components/FieldContainer/FieldContainer.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n    successAddUnitMessage,\r\n    successDeleteUnitMessage,\r\n    successUpdateUnitMessage,\r\n    universalToast,\r\n    warningEmptyInput\r\n} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport {\r\n    addUnit,\r\n    clearErrorUnits,\r\n    clearSuccessAddUnit,\r\n    clearSuccessDeleteUnit,\r\n    clearSuccessUpdateUnit,\r\n    deleteUnit,\r\n    getUnits,\r\n    updateUnit\r\n} from './unitsSlice.js'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal.js'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport {checkEmptyString} from '../../App/globalFunctions.js'\r\nimport {motion} from 'framer-motion'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nfunction Unit() {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const {\r\n        errorUnits,\r\n        units,\r\n        successAddUnit,\r\n        successUpdateUnit,\r\n        successDeleteUnit,\r\n        loading\r\n    } = useSelector((state) => state.units)\r\n    const headers = [\r\n        {styles: 'w-[10%] text-start', filter: '', title: t('â„–')},\r\n        {\r\n            styles: 'w-[80%] text-start',\r\n            filter: '',\r\n            title: t('O\\'lchov birliklari')\r\n        },\r\n        {styles: 'w-[10%]', filter: '', title: ' '}\r\n    ]\r\n\r\n    // states\r\n    const [data, setData] = useState(units)\r\n    const [unitName, setUnitName] = useState('')\r\n    const [currentUnit, setCurrentUnit] = useState('')\r\n    const [deletedUnit, setDeletedUnit] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [stickyForm, setStickyForm] = useState(false)\r\n\r\n    // modal toggle\r\n    const toggleModal = () => setModalVisible(!modalVisible)\r\n\r\n    // handle change of inputs\r\n    const handleChangeUnitName = (e) => {\r\n        setUnitName(e.target.value)\r\n    }\r\n\r\n    // table edit and delete\r\n    const handleEditUnit = (unit) => {\r\n        setCurrentUnit(unit)\r\n        setUnitName(unit.name)\r\n        setStickyForm(true)\r\n    }\r\n    const handleDeleteUnit = (unit) => {\r\n        setDeletedUnit(unit)\r\n        toggleModal()\r\n    }\r\n    const handleClickApproveToDelete = () => {\r\n        const body = {_id: deletedUnit._id}\r\n        dispatch(deleteUnit(body))\r\n        handleClickCancelToDelete()\r\n    }\r\n    const handleClickCancelToDelete = () => {\r\n        setModalVisible(false)\r\n        setDeletedUnit(null)\r\n    }\r\n\r\n    // handle submit of inputs\r\n    const addNewUnit = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString(\r\n            [{\r\n                value: unitName,\r\n                message: t('O`lchov birligi nomi')\r\n            }]\r\n        )\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {name: unitName}\r\n            dispatch(addUnit(body))\r\n        }\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString(\r\n            [{\r\n                value: unitName,\r\n                message: t('O`lchov birligi nomi')\r\n            }]\r\n        )\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: unitName,\r\n                _id: currentUnit._id\r\n            }\r\n            dispatch(updateUnit(body))\r\n        }\r\n    }\r\n\r\n    const clearForm = (e) => {\r\n        e && e.preventDefault()\r\n        setUnitName('')\r\n        setCurrentUnit(null)\r\n        setDeletedUnit(null)\r\n        setStickyForm(false)\r\n    }\r\n\r\n    // useEffects\r\n    useEffect(() => {\r\n        if (errorUnits) {\r\n            universalToast(errorUnits, 'error')\r\n            dispatch(clearErrorUnits())\r\n        }\r\n        if (successAddUnit) {\r\n            successAddUnitMessage()\r\n            dispatch(clearSuccessAddUnit())\r\n            clearForm()\r\n        }\r\n        if (successUpdateUnit) {\r\n            successUpdateUnitMessage()\r\n            dispatch(clearSuccessUpdateUnit())\r\n            setCurrentUnit('')\r\n            setStickyForm(false)\r\n            clearForm()\r\n        }\r\n        if (successDeleteUnit) {\r\n            successDeleteUnitMessage()\r\n            dispatch(clearSuccessDeleteUnit())\r\n            clearForm()\r\n        }\r\n    }, [\r\n        dispatch,\r\n        errorUnits,\r\n        successAddUnit,\r\n        successUpdateUnit,\r\n        successDeleteUnit\r\n    ])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUnits())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        setData(units)\r\n    }, [units])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0}\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}>\r\n            <UniversalModal\r\n                headerText={`${deletedUnit && deletedUnit.name\r\n                } ${t('o`lchov birligini o`chirishni tasdiqlaysizmi?')}`}\r\n                title={t('O`chirilgan o`lchov birligini tiklashning imkoni mavjud emas!')}\r\n                toggleModal={toggleModal}\r\n                body={'approve'}\r\n                approveFunction={handleClickApproveToDelete}\r\n                closeModal={handleClickCancelToDelete}\r\n                isOpen={modalVisible}\r\n            />\r\n            <form className={`unitFormStyle  flex lg:flex-nowrap flex-wrap mt-[40px] pl-[20px] ${stickyForm && 'stickyForm'}`}>\r\n                <FieldContainer\r\n                    onChange={handleChangeUnitName}\r\n                    value={unitName}\r\n                    label={t('O`lchov birligini kiriting')}\r\n                    placeholder={t('misol: kg')}\r\n                    maxWidth={'w-[43.75rem]'}\r\n                />\r\n\r\n                <div className={'flex gap-[1.25rem] grow items-end'}>\r\n                    <Button\r\n                        add={!stickyForm}\r\n                        edit={stickyForm}\r\n                        text={stickyForm ? t(`Saqlash`) : t('Yangi o`lchov qo`shish')}\r\n                        onClick={stickyForm ? handleEdit : addNewUnit}\r\n                    />\r\n                    <Button text={t('Tozalash')} onClick={clearForm} />\r\n                </div>\r\n            </form>\r\n\r\n            <div className='mainPadding text-[1.25rem] text-blue-900 '>\r\n                {t('O\\'lchov birliklari')}\r\n            </div>\r\n\r\n            <div className='lg:tableContainerPadding mb-4'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 ? (\r\n                    <NotFind text={t('O`lchov birliklari mavjud emas')} />\r\n                ) : (\r\n                    isMobile?<TableMobile\r\n                    page='unit'\r\n                    data={data}\r\n                    headers={headers}\r\n                    currentPage={0}\r\n                    countPage={0}\r\n                    Delete={handleDeleteUnit}\r\n                    Edit={handleEditUnit}\r\n                />:<Table\r\n                page='unit'\r\n                data={data}\r\n                headers={headers}\r\n                currentPage={0}\r\n                countPage={0}\r\n                Delete={handleDeleteUnit}\r\n                Edit={handleEditUnit}\r\n            />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Unit\r\n"],"names":["isMobile","setIsMobile","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","t","useTranslation","dispatch","useDispatch","errorUnits","units","successAddUnit","successUpdateUnit","successDeleteUnit","loading","useSelector","state","headers","styles","filter","title","data","setData","unitName","setUnitName","currentUnit","setCurrentUnit","deletedUnit","setDeletedUnit","modalVisible","setModalVisible","stickyForm","setStickyForm","toggleModal","handleEditUnit","unit","name","handleDeleteUnit","handleClickCancelToDelete","clearForm","e","preventDefault","universalToast","clearErrorUnits","successAddUnitMessage","clearSuccessAddUnit","successUpdateUnitMessage","clearSuccessUpdateUnit","successDeleteUnitMessage","clearSuccessDeleteUnit","getUnits","_jsxs","motion","section","initial","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","children","_jsx","UniversalModal","headerText","body","approveFunction","handleClickApproveToDelete","_id","deleteUnit","closeModal","isOpen","className","FieldContainer","onChange","target","value","label","placeholder","maxWidth","Button","add","edit","text","onClick","failed","message","checkEmptyString","warningEmptyInput","updateUnit","addUnit","Spinner","length","NotFind","TableMobile","page","currentPage","countPage","Delete","Edit","Table"],"sourceRoot":""}