{"version":3,"file":"static/js/5654.4a2d8a6c.chunk.js","mappings":"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","sources":["Components/Buttons/ImportBtn.js","Components/CreateProductForm/CreateProductForm.js","Pages/Products/Create/Products.js"],"sourcesContent":["import React from 'react'\r\nimport {IoDownloadOutline} from 'react-icons/io5'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nfunction ImportBtn({readExcel}) {\r\n    const {t} = useTranslation(['common'])\r\n    const handleChange = (e) => {\r\n        const file = e.target.files[0]\r\n        readExcel(file)\r\n    }\r\n    return (\r\n        <>\r\n            <button>\r\n                <label htmlFor='import-field' className='importButton'>\r\n                    {t('Import')}\r\n                    <span\r\n                        className={\r\n                            'btn-icon bg-white-900 p-[8px] text-primary-800'\r\n                        }\r\n                    >\r\n                        <IoDownloadOutline size={'1rem'} />\r\n                    </span>\r\n                </label>\r\n            </button>\r\n            <input\r\n                type='file'\r\n                className={'hidden '}\r\n                id={'import-field'}\r\n                onClick={(e) => (e.target.value = null)}\r\n                onChange={handleChange}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportBtn\r\n","import FieldContainer from '../FieldContainer/FieldContainer'\r\nimport Button from '../Buttons/BtnAddRemove'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nfunction CreateProductForm({\r\n    searchBarcode,\r\n    stickyForm,\r\n    handleChangeCodeOfProduct,\r\n    codeOfProduct,\r\n    handleChangeNameOfProduct,\r\n    nameOfProduct,\r\n    numberOfProduct,\r\n    handleChangeNumberOfProduct,\r\n    unitOfProduct,\r\n    handleChangeUnitOfProduct,\r\n    handleChangePriceOfProduct,\r\n    priceOfProduct,\r\n    sellingPriceOfProduct,\r\n    handleChangeSellingPriceOfProduct,\r\n    handleEdit,\r\n    addNewProduct,\r\n    clearForm,\r\n    pageName,\r\n    unitOptions,\r\n    categoryOfProduct,\r\n    categoryOptions,\r\n    handleChangeCategoryOfProduct,\r\n    checkOfProduct,\r\n    handleChangeCheckOfProduct,\r\n    tradePrice,\r\n    handleChangeTradePrice,\r\n    minimumCount,\r\n    handleChangeMinimumCount,\r\n    sellingPriceOfProcient,\r\n    handleChangeSellingPriceOfProcient,\r\n    handleChangeTradePriceProcient,\r\n    tradePriceProcient\r\n}) {\r\n    const { t } = useTranslation(['common'])\r\n    return (\r\n        <form\r\n            className={`bg-[white] flex pl-[20px] gap-[1.25rem] shadow-none  flex-col mainPadding   duration-200 ${stickyForm ? 'stickyForm' : ''\r\n                }`}\r\n        >\r\n            <div className={'flex flex-wrap gap-[2.5rem]'}>\r\n                {/* -- maxsulotlar checki -- */}\r\n                <FieldContainer\r\n                    label={t('Shtrix kodi')}\r\n                    placeholder={`${t('misol')}: 123456789`}\r\n                    onChange={handleChangeCheckOfProduct}\r\n                    value={checkOfProduct}\r\n                    maxWidth={'lg:w-[10rem] w-[90vw]'}\r\n                    onKeyUp={searchBarcode}\r\n                />\r\n\r\n                {/* -- maxsulot kategoriyasi -- */}\r\n                <FieldContainer\r\n                    value={categoryOfProduct}\r\n                    onChange={handleChangeCategoryOfProduct}\r\n                    label={t('Kategoriya nomi')}\r\n                    placeholder={t('tanlang...')}\r\n                    select={true}\r\n                    options={categoryOptions}\r\n                    maxWidth={'lg:w-[15rem] w-[90vw]'}\r\n                />\r\n\r\n                {/* -- maxulot kodi -- */}\r\n                <FieldContainer\r\n                    label={t('Maxsulot kodi')}\r\n                    placeholder={`${t('misol')}: 1234`}\r\n                    onChange={handleChangeCodeOfProduct}\r\n                    value={codeOfProduct}\r\n                    type={'text'}\r\n                    maxWidth={'lg:w-[8.5rem] w-[90vw]'}\r\n                />\r\n\r\n                {/* -- maxsulotlar nomi -- */}\r\n                <FieldContainer\r\n                    label={t('Maxsulot nomi')}\r\n                    placeholder={`${t('misol')}: Acer`}\r\n                    onChange={handleChangeNameOfProduct}\r\n                    value={nameOfProduct}\r\n\r\n                />\r\n            </div>\r\n            <div className={'flex flex-wrap gap-[2.5rem] items-end'}>\r\n                {/* -- o`lchov birligi -- */}\r\n                <FieldContainer\r\n                    value={unitOfProduct}\r\n                    onChange={handleChangeUnitOfProduct}\r\n                    label={t(\"O'lchov birligi\")}\r\n                    placeholder={t('tanlang...')}\r\n                    select={true}\r\n                    options={unitOptions}\r\n                />\r\n\r\n                {pageName !== 'accept' && (\r\n                    <>\r\n                        {/* -- maxsulotlar soni -- */}\r\n                        <FieldContainer\r\n                            value={numberOfProduct}\r\n                            onChange={handleChangeNumberOfProduct}\r\n                            label={t('Maxsulot soni')}\r\n                            placeholder={`${t('misol')}: 100`}\r\n                            type={'text'}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n                {pageName !== 'accept' && (\r\n                    <>\r\n                        {/* -- keltirilgan narxi -- */}\r\n                        <FieldContainer\r\n                            value={priceOfProduct}\r\n                            onChange={handleChangePriceOfProduct}\r\n                            label={t('Keltirilgan narxi')}\r\n                            placeholder={`${t('misol')}: 100`}\r\n                            type={'text'}\r\n                        />\r\n\r\n                        {/* -- sotish narxi -- */}\r\n                        <FieldContainer\r\n                            value={sellingPriceOfProduct}\r\n                            onChange={handleChangeSellingPriceOfProduct}\r\n                            label={t('Sotish narxi')}\r\n                            placeholder={`${t('misol')}: 200`}\r\n                            type={'text'}\r\n                        />\r\n\r\n                        {/* -- sotish foizi -- */}\r\n                        <FieldContainer\r\n                            value={sellingPriceOfProcient}\r\n                            onChange={handleChangeSellingPriceOfProcient}\r\n                            label={t('Sotish foizi')}\r\n                            placeholder={`${t('misol')}: 30 %`}\r\n                            type={'text'}\r\n                        />\r\n                    </>\r\n                )}\r\n            </div>\r\n            <div className='flex flex-wrap gap-[2.5rem] items-end'>\r\n                <FieldContainer\r\n                    value={tradePriceProcient}\r\n                    onChange={handleChangeTradePriceProcient}\r\n                    label={t('Optom foizi')}\r\n                    placeholder={`${t('misol')}: 30 %`}\r\n                    type={'text'}\r\n                />\r\n                <FieldContainer\r\n                    value={tradePrice}\r\n                    onChange={handleChangeTradePrice}\r\n                    label={t('Optom narxi')}\r\n                    placeholder={`${t('misol')}: 300`}\r\n                    type={'text'}\r\n                />\r\n                <FieldContainer\r\n                    value={minimumCount}\r\n                    onChange={handleChangeMinimumCount}\r\n                    label={t('Minimum qiymat')}\r\n                    placeholder={`${t('misol')}: 300`}\r\n                    type={'text'}\r\n                />\r\n                <div className={'flex gap-[1.25rem] min-w-[20rem]'}>\r\n                    <Button\r\n                        onClick={stickyForm ? handleEdit : addNewProduct}\r\n                        add={!stickyForm}\r\n                        edit={stickyForm}\r\n                        text={\r\n                            stickyForm\r\n                                ? t('Saqlash')\r\n                                : t('Yangi maxsulot qo\\'shish')\r\n                        }\r\n                    />\r\n                    <Button onClick={clearForm} text={t('Tozalash')} />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateProductForm\r\n","import React, {useEffect, useState} from 'react'\r\nimport ExportBtn from '../../../Components/Buttons/ExportBtn'\r\nimport ImportBtn from '../../../Components/Buttons/ImportBtn'\r\nimport * as XLSX from 'xlsx'\r\nimport Pagination from '../../../Components/Pagination/Pagination'\r\nimport Table from '../../../Components/Table/Table'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Spinner from '../../../Components/Spinner/SmallLoader'\r\nimport SmallLoader from '../../../Components/Spinner/SmallLoader'\r\nimport NotFind from '../../../Components/NotFind/NotFind'\r\nimport {motion} from 'framer-motion'\r\nimport {VscChromeClose} from 'react-icons/vsc'\r\n\r\nimport {\r\n    addProduct,\r\n    addProductsFromExcel,\r\n    clearSearchedProducts,\r\n    deleteProduct,\r\n    getCodeOfCategory,\r\n    getProducts,\r\n    getProductsAll,\r\n    getProductsByFilter,\r\n    updateProduct\r\n} from './productSlice'\r\nimport {getUnits} from '../../Units/unitsSlice'\r\nimport {universalToast, warningCurrencyRate, warningDeleteProduct, warningEmptyInput} from '../../../Components/ToastMessages/ToastMessages'\r\nimport {regexForTypeNumber} from '../../../Components/RegularExpressions/RegularExpressions'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal'\r\nimport CreateProductForm from '../../../Components/CreateProductForm/CreateProductForm'\r\nimport {getAllCategories} from '../../Category/categorySlice'\r\nimport {\r\n    checkEmptyString,\r\n    exportExcel,\r\n    roundUsd,\r\n    roundUzs,\r\n    universalSort,\r\n    UsdToUzs,\r\n    UzsToUsd\r\n} from '../../../App/globalFunctions'\r\nimport SearchForm from '../../../Components/SearchForm/SearchForm'\r\nimport BarcodeReader from 'react-barcode-reader'\r\nimport {getBarcode} from '../../Barcode/barcodeSlice.js'\r\nimport {getCurrency} from '../../Currency/currencySlice.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {filter, map} from 'lodash'\r\nimport {getAllProducts} from '../../Sale/Slices/registerSellingSlice.js'\r\nimport {FaFilter} from 'react-icons/fa'\r\nimport TableMobile from '../../../Components/Table/TableMobile.js'\r\nimport SelectForm from '../../../Components/Select/SelectForm.js'\r\n\r\nfunction Products() {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const {\r\n        market: {_id}\r\n    } = useSelector((state) => state.login)\r\n    const {units} = useSelector((state) => state.units)\r\n    const {allcategories} = useSelector((state) => state.category)\r\n    const {currency, currencyType} = useSelector((state) => state.currency)\r\n    const {\r\n        products,\r\n        total,\r\n        loading,\r\n        lastProductCode,\r\n        searchedProducts,\r\n        totalSearched,\r\n        loadingExcel\r\n    } = useSelector((state) => state.products)\r\n    const {barcode} = useSelector((state) => state.barcode)\r\n    const [data, setData] = useState(products)\r\n    const [searchedData, setSearchedData] = useState(searchedProducts)\r\n    const [checkOfProduct, setCheckOfProduct] = useState('')\r\n    const [codeOfProduct, setCodeOfProduct] = useState('')\r\n    const [nameOfProduct, setNameOfProduct] = useState('')\r\n    const [numberOfProduct, setNumberOfProduct] = useState('')\r\n    const [unitOfProduct, setUnitOfProduct] = useState('')\r\n    const [priceOfProduct, setPriceOfProduct] = useState('')\r\n    const [sellingPriceOfProduct, setSellingPriceOfProduct] = useState('')\r\n    const [sellingPriceOfProcient, setSellingPriceOfProcient] = useState('')\r\n    const [priceOfProductUsd, setPriceOfProductsUsd] = useState('')\r\n    const [sellingPriceOfProductUsd, setSellingPriceOfProductUsd] = useState('')\r\n    const [categoryOfProduct, setCategoryOfProduct] = useState('')\r\n    const [searchByCode, setSearchByCode] = useState('')\r\n    const [searchByName, setSearchByName] = useState('')\r\n    const [searchByCategory, setSearchByCategory] = useState('')\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [stickyForm, setStickyForm] = useState(false)\r\n    const [currentProduct, setCurrentProduct] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [deletedProduct, setDeletedProduct] = useState(null)\r\n    const [modalBody, setModalBody] = useState(null)\r\n    const [unitOptions, setUnitOptions] = useState([])\r\n    const [categoryOptions, setCategoryOptions] = useState([])\r\n    const [excelData, setExcelData] = useState([])\r\n    const [createdData, setCreatedData] = useState([])\r\n    const [barCode, setBarCode] = useState('')\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0\r\n    })\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    const [importLoading, setImportLoading] = useState(false)\r\n    const [minimumCount, setMinimumCount] = useState('')\r\n    const [tradePrice, setTradePrice] = useState('')\r\n    const [tradePriceUzs, setTradePriceUzs] = useState('')\r\n    const [tradePriceProcient, setTradePriceProcient] = useState('')\r\n\r\n    const [tableRowId, setTableRowId] = useState('')\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [filterModal, setFilterModal] = useState(false)\r\n\r\n    // modal toggle\r\n    const toggleModal = () => setModalVisible(!modalVisible)\r\n\r\n    // table headers\r\n    const headers = [\r\n        {title: t('№')},\r\n        {\r\n            filter: 'productdata.barcode',\r\n            title: t('Shtrix kodi')\r\n        },\r\n        {\r\n            title: t('Kategoriyasi'),\r\n            filter: t('category.code')\r\n        },\r\n        {title: t('Kodi'), filter: 'productdata.code'},\r\n        {title: t('Nomi'), filter: 'productdata.name'},\r\n        {\r\n            title: t('Soni'),\r\n            filter: 'total'\r\n        },\r\n        {\r\n            title: t('Olish'),\r\n            filter:\r\n                currencyType === 'UZS'\r\n                    ? 'price.incomingpriceuzs'\r\n                    : 'price.incomingprice'\r\n        },\r\n        {\r\n            title: t('Sotish'),\r\n            filter:\r\n                currencyType === 'UZS'\r\n                    ? 'price.sellingpriceuzs'\r\n                    : 'price.sellingprice'\r\n        },\r\n        {\r\n            title: t('Optom'),\r\n            filter:\r\n                currencyType === 'UZS'\r\n                    ? 'price.tradeprice'\r\n                    : 'price.tradepriceuzs'\r\n        },\r\n        {\r\n            title: t('Minimum qiymat'),\r\n            filter: 'minimumcount',\r\n            styles: 'w-[5%]'\r\n        },\r\n        {title: ''}\r\n    ]\r\n\r\n    const importHeaders = [\r\n        {name: 'Shtrix kodi', value: 'barcode'},\r\n        {name: 'Kategoriyasi', value: 'category'},\r\n        {name: 'Kodi', value: 'code'},\r\n        {name: 'Nomi', value: 'name'},\r\n        {name: 'Soni', value: 'total'},\r\n        {name: 'O\\'lchov birligi', value: 'unit'},\r\n        {name: 'Kelish narxi USD', value: 'incomingprice'},\r\n        {name: 'Kelish narxi UZS', value: 'incomingpriceuzs'},\r\n        {name: 'Sotish narxi USD', value: 'sellingprice'},\r\n        {name: 'Sotish narxi UZS', value: 'sellingpriceuzs'},\r\n        {name: 'Optom narxi USD', value: 'tradeprice'},\r\n        {name: 'Optom narxi UZS', value: 'tradepriceuzs'},\r\n        {name: 'Minimum qiymat', value: 'minimumcount'}\r\n    ]\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    // handle change of inputs\r\n    const handleChangeCheckOfProduct = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            setCheckOfProduct(e.target.value)\r\n        }\r\n    }\r\n    const handleChangeCodeOfProduct = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            setCodeOfProduct(val)\r\n        }\r\n    }\r\n    const handleChangeNameOfProduct = (e) => {\r\n        setNameOfProduct(e.target.value)\r\n    }\r\n    const handleChangeNumberOfProduct = (e) => {\r\n        let val = Number(e.target.value)\r\n        if (regexForTypeNumber.test(val)) {\r\n            setNumberOfProduct(val)\r\n        }\r\n    }\r\n    const setProcient = (datausd, datauzs, procient) => {\r\n        if (procient && data) {\r\n            setSellingPriceOfProduct(\r\n                roundUzs(datauzs + (datauzs * procient) / 100)\r\n            )\r\n            setSellingPriceOfProductUsd(\r\n                roundUsd(datausd + (datausd * procient) / 100)\r\n            )\r\n        } else {\r\n            setSellingPriceOfProduct('')\r\n            setSellingPriceOfProductUsd('')\r\n        }\r\n    }\r\n    const setProcientTradePrice = (datausd, datauzs, procient) => {\r\n        if (procient && data) {\r\n            setTradePriceUzs(\r\n                roundUzs(datauzs + (datauzs * procient) / 100)\r\n            )\r\n            setTradePrice(\r\n                roundUsd(datausd + (datausd * procient) / 100)\r\n            )\r\n        } else {\r\n            setTradePriceUzs('')\r\n            setTradePrice('')\r\n        }\r\n    }\r\n    const handleChangePriceOfProduct = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            if (currencyType === 'UZS') {\r\n                setPriceOfProduct(val)\r\n                setPriceOfProductsUsd(UzsToUsd(val, currency))\r\n                setProcient(\r\n                    UzsToUsd(val, currency),\r\n                    Number(val),\r\n                    Number(sellingPriceOfProcient)\r\n                )\r\n            } else {\r\n                setPriceOfProductsUsd(val)\r\n                setPriceOfProduct(UsdToUzs(val, currency))\r\n                setProcient(\r\n                    Number(val),\r\n                    UsdToUzs(val, currency),\r\n                    Number(sellingPriceOfProcient)\r\n                )\r\n            }\r\n        }\r\n    }\r\n    const handleChangeSellingPriceOfProduct = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            if (currencyType === 'UZS') {\r\n                setSellingPriceOfProduct(val)\r\n                setSellingPriceOfProductUsd(UzsToUsd(val, currency))\r\n            } else {\r\n                setSellingPriceOfProductUsd(val)\r\n                setSellingPriceOfProduct(UsdToUzs(val, currency))\r\n            }\r\n        }\r\n    }\r\n    const handleChangeSellingPriceOfProcient = (e) => {\r\n        let val = e.target.value\r\n        setSellingPriceOfProcient(val)\r\n        setProcient(\r\n            Number(priceOfProductUsd),\r\n            Number(priceOfProduct),\r\n            Number(val)\r\n        )\r\n    }\r\n    const handleChangeUnitOfProduct = (option) => {\r\n        setUnitOfProduct(option)\r\n    }\r\n    const handleChangeCategoryOfProduct = (option) => {\r\n        setCategoryOfProduct(option)\r\n        const body = {\r\n            categoryId: option.value\r\n        }\r\n        dispatch(getCodeOfCategory(body))\r\n    }\r\n    const handleChangeMinimumCount = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            setMinimumCount(val)\r\n        }\r\n    }\r\n    const handleChangeTradePrice = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            if (currencyType === 'UZS') {\r\n                setTradePriceUzs(val)\r\n                setTradePrice(UzsToUsd(val, currency))\r\n            } else {\r\n                setTradePrice(val)\r\n                setTradePriceUzs(UsdToUzs(val, currency))\r\n            }\r\n        }\r\n    }\r\n    const handleChangeTradePriceProcient = (e) => {\r\n        let val = e.target.value\r\n        setTradePriceProcient(val)\r\n        setProcientTradePrice(\r\n            Number(priceOfProductUsd),\r\n            Number(priceOfProduct),\r\n            Number(val)\r\n        )\r\n    }\r\n    // handle change of search inputs\r\n    const filterByCode = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCode(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n        dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata.code.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    const filterByBarcode = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setBarCode(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n        dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata?.barcode.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    const filterByCategory = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCategory(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n        dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.category.code.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n    const filterByName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n        dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata.name\r\n                    .toLowerCase()\r\n                    .includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n    const filterByCodeAndNameAndCategoryWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                currentPage: 0,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                    code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                    category: searchByCategory.replace(/\\s+/g, ' ').trim()\r\n                },\r\n                product: {\r\n                    code: codeOfProduct,\r\n                    name: nameOfProduct.replace(/\\s+/g, ' ').trim(),\r\n                    unit: unitOfProduct.value,\r\n                    market: _id\r\n                }\r\n            }\r\n            dispatch(getProductsByFilter(body))\r\n        }\r\n    }\r\n\r\n    const filterByBarcodeWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                currentPage: 0,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    barcode: barCode.replace(/\\s+/g, ' ').trim()\r\n                },\r\n                product: {\r\n                    code: codeOfProduct,\r\n                    name: nameOfProduct.replace(/\\s+/g, ' ').trim(),\r\n                    unit: unitOfProduct.value,\r\n                    market: _id\r\n                }\r\n            }\r\n            dispatch(getProductsByFilter(body))\r\n        }\r\n    }\r\n\r\n    // filter by total\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // handle submit of inputs\r\n    const searchBarcode = (e) => {\r\n        if (e.key === 'Enter') {\r\n            const body = {\r\n                code: e.target.value\r\n            }\r\n            dispatch(getBarcode(body))\r\n        }\r\n    }\r\n\r\n    const addNewProduct = (e) => {\r\n        e.preventDefault()\r\n        if (currency) {\r\n            const {failed, message} = checkEmptyString([\r\n                {\r\n                    value: checkOfProduct,\r\n                    message: t('Maxsulot shtrix kodi')\r\n                },\r\n                {\r\n                    value: codeOfProduct,\r\n                    message: t('Maxsulot kodi')\r\n                },\r\n                {\r\n                    value: nameOfProduct,\r\n                    message: t('Maxsulot nomi')\r\n                },\r\n                {\r\n                    value: unitOfProduct,\r\n                    message: t('Maxsulot o\\'lchov birligi')\r\n                },\r\n                {\r\n                    value: categoryOfProduct,\r\n                    message: t('Maxsulot kategoriyasi')\r\n                },\r\n                {\r\n                    value: priceOfProduct,\r\n                    message: t('Maxsulot kelish narxi')\r\n                },\r\n                {\r\n                    value: sellingPriceOfProduct,\r\n                    message: t('Maxsulot sotish narxi')\r\n                },\r\n                {\r\n                    value: tradePrice,\r\n                    message: t('Maxsulot optom narxi')\r\n                },\r\n                {\r\n                    value: minimumCount,\r\n                    message: t('Maxsulot minimal miqdori')\r\n                }\r\n            ])\r\n            if (failed) {\r\n                warningEmptyInput(message)\r\n            } else {\r\n                const body = {\r\n                    currentPage,\r\n                    countPage: showByTotal,\r\n                    category: categoryOfProduct.value,\r\n                    search: {\r\n                        name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                        code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                        category: searchByCategory.replace(/\\s+/g, ' ').trim()\r\n                    },\r\n                    product: {\r\n                        code: codeOfProduct,\r\n                        name: nameOfProduct.replace(/\\s+/g, ' ').trim(),\r\n                        total: numberOfProduct,\r\n                        unit: unitOfProduct.value,\r\n                        category: categoryOfProduct.value,\r\n                        market: _id,\r\n                        incomingprice: priceOfProductUsd,\r\n                        sellingprice: sellingPriceOfProductUsd,\r\n                        incomingpriceuzs: priceOfProduct,\r\n                        sellingpriceuzs: sellingPriceOfProduct,\r\n                        barcode: checkOfProduct,\r\n                        tradeprice: tradePrice,\r\n                        tradepriceuzs: tradePriceUzs,\r\n                        minimumcount: minimumCount\r\n                    }\r\n                }\r\n                dispatch(addProduct(body)).then(({error}) => {\r\n                    if (!error) {\r\n                        clearForm()\r\n                        handleClickCancelToImport()\r\n                        dispatch(getAllProducts())\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            warningCurrencyRate()\r\n        }\r\n    }\r\n    const clearForm = (e) => {\r\n        e && e.preventDefault()\r\n        setCodeOfProduct('')\r\n        setNameOfProduct('')\r\n        setCheckOfProduct('')\r\n        setNumberOfProduct('')\r\n        setPriceOfProduct('')\r\n        setSellingPriceOfProduct('')\r\n        setPriceOfProductsUsd('')\r\n        setSellingPriceOfProductUsd('')\r\n        setUnitOfProduct('')\r\n        setCategoryOfProduct('')\r\n        setTradePrice('')\r\n        setTradePriceUzs('')\r\n        setMinimumCount('')\r\n        setCurrentProduct(null)\r\n        setStickyForm(false)\r\n        setSellingPriceOfProcient('')\r\n        setTradePriceProcient('')\r\n    }\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([\r\n            {\r\n                value: checkOfProduct,\r\n                message: t('Maxsulot shtrix kodi')\r\n            },\r\n            {\r\n                value: codeOfProduct,\r\n                message: t('Maxsulot kodi')\r\n            },\r\n            {\r\n                value: nameOfProduct,\r\n                message: t('Maxsulot nomi')\r\n            },\r\n            {\r\n                value: unitOfProduct,\r\n                message: t('Maxsulot o\\'lchov birligi')\r\n            },\r\n            {\r\n                value: categoryOfProduct,\r\n                message: t('Maxsulot kategoriyasi')\r\n            },\r\n            {\r\n                value: priceOfProduct,\r\n                message: t('Maxsulot kelish narxi')\r\n            },\r\n            {\r\n                value: sellingPriceOfProduct,\r\n                message: t('Maxsulot sotish narxi')\r\n            },\r\n            {\r\n                value: tradePrice,\r\n                message: t('Maxsulot optom narxi')\r\n            },\r\n            {\r\n                value: minimumCount,\r\n                message: t('Maxsulot minimal miqdori')\r\n            }\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                product: {\r\n                    ...currentProduct,\r\n                    name: nameOfProduct.replace(/\\s+/g, ' ').trim(),\r\n                    code: codeOfProduct,\r\n                    category: categoryOfProduct.value,\r\n                    unit: unitOfProduct.value,\r\n                    priceid: currentProduct.price._id,\r\n                    productdata: currentProduct.productdata._id,\r\n                    incomingprice: priceOfProductUsd,\r\n                    sellingprice: sellingPriceOfProductUsd,\r\n                    incomingpriceuzs: priceOfProduct,\r\n                    sellingpriceuzs: sellingPriceOfProduct,\r\n                    total: numberOfProduct,\r\n                    barcode: checkOfProduct,\r\n                    tradeprice: tradePrice,\r\n                    tradepriceuzs: tradePriceUzs,\r\n                    minimumcount: minimumCount\r\n                },\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                    code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                    category: searchByCategory.replace(/\\s+/g, ' ').trim()\r\n                }\r\n            }\r\n            dispatch(updateProduct(body)).then(({error}) => {\r\n                if (!error) {\r\n                    clearForm()\r\n                    setStickyForm(false)\r\n                    const body = {\r\n                        currentPage,\r\n                        countPage: showByTotal,\r\n                        search: {\r\n                            name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                            code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                            category: searchByCategory\r\n                                .replace(/\\s+/g, ' ')\r\n                                .trim()\r\n                        }\r\n                    }\r\n                    dispatch(getProducts(body)).then(() => {\r\n                        document\r\n                            .querySelector(`#${tableRowId}`)\r\n                            .scrollIntoView({block: 'center'})\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // excel\r\n    const readExcel = (file) => {\r\n        const fileTypes = ['xls', 'xlsx']\r\n        if (fileTypes.includes(file.name.split('.').pop())) {\r\n            setImportLoading(true)\r\n            new Promise((resolve, reject) => {\r\n                const fileReader = new FileReader()\r\n                fileReader.readAsArrayBuffer(file)\r\n\r\n                fileReader.onload = (e) => {\r\n                    const bufferArray = e.target.result\r\n\r\n                    const wb = XLSX.read(bufferArray, {\r\n                        type: 'buffer'\r\n                    })\r\n\r\n                    const wsname = wb.SheetNames[0]\r\n\r\n                    const ws = wb.Sheets[wsname]\r\n\r\n                    const data = XLSX.utils.sheet_to_json(ws)\r\n\r\n                    resolve(data)\r\n                }\r\n\r\n                fileReader.onerror = (error) => {\r\n                    universalToast('Ошибка при загрузке файла', 'error')\r\n                    reject(error)\r\n                }\r\n            }).then((data) => {\r\n                if (data.length > 0) {\r\n                    setExcelData(data)\r\n                    setModalBody('import')\r\n                    toggleModal()\r\n                } else {\r\n                    universalToast('Jadvalda ma`lumot mavjud emas', 'error')\r\n                }\r\n                setImportLoading(false)\r\n            })\r\n        } else {\r\n            universalToast('Fayl formati noto\\'g\\'ri', 'error')\r\n        }\r\n    }\r\n\r\n    // table edit and delete\r\n    const handleEditProduct = (ident, product) => {\r\n        setTableRowId(ident)\r\n        setCurrentProduct(product)\r\n        setStickyForm(true)\r\n    }\r\n    const handleDeleteProduct = (product) => {\r\n        const body = {\r\n            ...product,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                category: searchByCategory.replace(/\\s+/g, ' ').trim()\r\n            },\r\n            name: nameOfProduct.replace(/\\s+/g, ' ').trim(),\r\n            productdata: product.productdata._id\r\n        }\r\n        // warningDeleteProduct() \r\n        setDeletedProduct(body)\r\n        setModalBody('approve')\r\n        toggleModal()\r\n    }\r\n    const handleClickApproveToDelete = () => {\r\n        dispatch(deleteProduct(deletedProduct)).then(({error}) => {\r\n            if (!error) {\r\n                handleClickCancelToDelete()\r\n                const body = {\r\n                    currentPage,\r\n                    countPage: showByTotal,\r\n                    search: {\r\n                        name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                        code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                        category: searchByCategory.replace(/\\s+/g, ' ').trim()\r\n                    }\r\n                }\r\n                dispatch(getProducts(body))\r\n            }\r\n        })\r\n    }\r\n    const handleClickCancelToDelete = () => {\r\n        setModalVisible(false)\r\n        setDeletedProduct(null)\r\n        setTimeout(() => {\r\n            setModalBody(null)\r\n        }, 500)\r\n    }\r\n    const handleClickApproveToImport = () => {\r\n        const oldKeys = Object.keys(excelData[0])\r\n        const newData = map(createdData, (item) => {\r\n            const newItem = {}\r\n            for (const key in item) {\r\n                newItem[key] = item[key]\r\n            }\r\n            return newItem\r\n        })\r\n        newData.forEach((item) =>\r\n            oldKeys.forEach(\r\n                (key) => item.hasOwnProperty(key) && delete item[key]\r\n            )\r\n        )\r\n        const body = {\r\n            products: [...newData],\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                category: searchByCategory.replace(/\\s+/g, ' ').trim()\r\n            }\r\n        }\r\n        dispatch(addProductsFromExcel(body)).then(({error}) => {\r\n            if (!error) {\r\n                handleClickCancelToImport()\r\n                dispatch(getAllProducts())\r\n            }\r\n        })\r\n    }\r\n    const handleClickCancelToImport = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody(null)\r\n        }, 500)\r\n    }\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        1,\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        '',\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        -1,\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1\r\n            })\r\n            universalSort(\r\n                searchedData.length > 0 ? searchedData : data,\r\n                searchedData.length > 0 ? setSearchedData : setData,\r\n                filterKey,\r\n                -1,\r\n                searchedData ? searchedProducts : products,\r\n                searchedData.length > 0\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleError = () => {\r\n        universalToast(`${t('Mahsulot kodi o\\'qilmadi!')}`, 'warning')\r\n    }\r\n    const handleScan = (data) => {\r\n        setCheckOfProduct(data.toString())\r\n        const body = {\r\n            code: data\r\n        }\r\n        dispatch(getBarcode(body)).then(({error}) => {\r\n            if (error) {\r\n                return setNameOfProduct('')\r\n            }\r\n        })\r\n    }\r\n\r\n    const exportData = () => {\r\n        let fileName = 'Maxsulotlar'\r\n        const exportHeader = [\r\n            t('№'),\r\n            t('Shtrix kodi'),\r\n            t('Mahsulot kategoriyasi'),\r\n            t('Mahsulot kodi'),\r\n            t('Mahsulot nomi'),\r\n            t('Soni'),\r\n            t('O\\'lchov birligi'),\r\n            t('Kelish narxi USD'),\r\n            t('Kelish narxi UZS'),\r\n            t('Sotish narxi USD'),\r\n            t('Sotish narxi UZS'),\r\n            t('Optom narxi USD'),\r\n            t('Optom narxi UZS'),\r\n            t('Minimum qiymat'),\r\n            t('ID')\r\n        ]\r\n        const body = {\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                category: searchByCategory.replace(/\\s+/g, ' ').trim()\r\n            }\r\n        }\r\n        dispatch(getProductsAll(body)).then(({error, payload}) => {\r\n            if (!error) {\r\n                if (payload?.length > 0) {\r\n                    const newData = map(payload, (item, index) => ({\r\n                        nth: index + 1,\r\n                        barcode: item?.productdata?.barcode || '',\r\n                        category: item?.category?.code || '',\r\n                        code: item?.productdata?.code || '',\r\n                        name: item?.productdata?.name || '',\r\n                        total: item?.total || '',\r\n                        unit: item?.unit?.name || '',\r\n                        incomingprice: item?.price?.incomingprice || '',\r\n                        incomingpriceuzs: item?.price?.incomingpriceuzs || '',\r\n                        sellingprice: item?.price?.sellingprice || '',\r\n                        sellingpriceuzs: item?.price?.sellingpriceuzs || '',\r\n                        tradeprice: item?.price?.tradeprice || '',\r\n                        tradepriceuzs: item?.price?.tradepriceuzs || '',\r\n                        minimumcount: item?.minimumcount || '',\r\n                        id: item?._id || ''\r\n                    }))\r\n                    exportExcel(newData, fileName, exportHeader)\r\n                } else {\r\n                    universalToast('Jadvalda ma\\'lumot mavjud emas !', 'warning')\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                category: searchByCategory.replace(/\\s+/g, ' ').trim()\r\n            }\r\n        }\r\n        dispatch(getProducts(body))\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, showByTotal, dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUnits())\r\n        dispatch(getAllCategories())\r\n        dispatch(getCurrency())\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        setData(products)\r\n    }, [products])\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n    useEffect(() => {\r\n        if (currentProduct) {\r\n            const {\r\n                productdata: {name, code, barcode},\r\n                unit,\r\n                total,\r\n                category,\r\n                minimumcount,\r\n                price: {\r\n                    sellingprice,\r\n                    incomingprice,\r\n                    sellingpriceuzs,\r\n                    incomingpriceuzs,\r\n                    tradeprice,\r\n                    tradepriceuzs\r\n                }\r\n            } = currentProduct\r\n            setCodeOfProduct(code)\r\n            setNameOfProduct(name)\r\n            setNumberOfProduct(total)\r\n            setUnitOfProduct({\r\n                value: unit._id,\r\n                label: unit.name\r\n            })\r\n            setCategoryOfProduct({\r\n                value: category._id,\r\n                label: `${category.code} - ${category.name}`\r\n            })\r\n            setPriceOfProduct(incomingpriceuzs)\r\n            setSellingPriceOfProduct(sellingpriceuzs)\r\n            setPriceOfProductsUsd(incomingprice)\r\n            setSellingPriceOfProductUsd(sellingprice)\r\n            setCheckOfProduct(barcode ? barcode : '')\r\n            setMinimumCount(minimumcount || 0)\r\n            setTradePrice(tradeprice || 0)\r\n            setTradePriceUzs(tradepriceuzs || 0)\r\n        }\r\n    }, [currentProduct])\r\n    useEffect(() => {\r\n        setUnitOptions(\r\n            map(units, (unit) => ({\r\n                value: unit._id,\r\n                label: unit.name\r\n            }))\r\n        )\r\n    }, [units])\r\n    useEffect(() => {\r\n        setCategoryOptions(\r\n            map(allcategories, (category) => ({\r\n                value: category._id,\r\n                label:\r\n                    category.code +\r\n                    `${category.name ? ` - ${category.name}` : ''}`\r\n            }))\r\n        )\r\n    }, [allcategories])\r\n    useEffect(() => {\r\n        if (lastProductCode) {\r\n            setCodeOfProduct(lastProductCode)\r\n            if (checkOfProduct.length === 0)\r\n                categoryOfProduct?.label &&\r\n                setCheckOfProduct(\r\n                    '47800' +\r\n                    categoryOfProduct.label.slice(0, 3) +\r\n                    lastProductCode\r\n                )\r\n        }\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [lastProductCode])\r\n    useEffect(() => {\r\n        setSearchedData(searchedProducts)\r\n    }, [searchedProducts])\r\n    useEffect(() => {\r\n        if (barcode) {\r\n            setNameOfProduct(barcode.name)\r\n        }\r\n    }, [barcode])\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0}\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            {importLoading && (\r\n                <div\r\n                    className='fixed backdrop-blur-[2px] z-[50] top-0 left-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            {loadingExcel && (\r\n                <div\r\n                    className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            {/* Modal */}\r\n            <UniversalModal\r\n                toggleModal={toggleModal}\r\n                body={modalBody}\r\n                headerText={\r\n                    modalBody === 'approve' &&\r\n                    t('Mahsulotni o`chirishni tasdiqlaysizmi?')\r\n                }\r\n                title={\r\n                    modalBody === 'approve' &&\r\n                    t('O`chirilgan mahsulotni tiklashning imkoni mavjud emas!')\r\n                }\r\n                approveFunction={\r\n                    modalBody === 'approve'\r\n                        ? handleClickApproveToDelete\r\n                        : handleClickApproveToImport\r\n                }\r\n                closeModal={\r\n                    modalBody === 'approve'\r\n                        ? handleClickCancelToDelete\r\n                        : handleClickCancelToImport\r\n                }\r\n                isOpen={modalVisible}\r\n                excelData={excelData}\r\n                headers={importHeaders}\r\n                createdData={createdData}\r\n                setCreatedData={setCreatedData}\r\n            />\r\n            {isMobile && <button onClick={() => setModalOpen(true)}\r\n                    className='hover:bg-green-200 lg:ms-[20px] lg:mt-[10px] lg:mb-[60px] mt-[60px] bg-green-300 focus-visible:outline-none w-[90%]  m-auto lg:w-[200px] lg:h-[33px] h=[40px] createElement'>{t('Yangi maxsulot qo\\'shish')}</button>}\r\n            {/* Form */}\r\n            {\r\n                !isMobile ? \r\n                    <CreateProductForm\r\n                        nameOfProduct={nameOfProduct}\r\n                        unitOfProduct={unitOfProduct}\r\n                        categoryOfProduct={categoryOfProduct}\r\n                        codeOfProduct={codeOfProduct}\r\n                        checkOfProduct={checkOfProduct}\r\n                        tradePriceProcient={tradePriceProcient}\r\n                        handleChangeTradePriceProcient={handleChangeTradePriceProcient}\r\n                        handleChangeCheckOfProduct={handleChangeCheckOfProduct}\r\n                        priceOfProduct={\r\n                            currencyType === 'UZS' ? priceOfProduct : priceOfProductUsd\r\n                        }\r\n                        sellingPriceOfProduct={\r\n                            currencyType === 'UZS'\r\n                                ? sellingPriceOfProduct\r\n                                : sellingPriceOfProductUsd\r\n                        }\r\n                        sellingPriceOfProcient={sellingPriceOfProcient}\r\n                        numberOfProduct={numberOfProduct}\r\n                        handleChangeSellingPriceOfProduct={\r\n                            handleChangeSellingPriceOfProduct\r\n                        }\r\n                        handleChangeSellingPriceOfProcient={\r\n                            handleChangeSellingPriceOfProcient\r\n                        }\r\n                        handleChangePriceOfProduct={handleChangePriceOfProduct}\r\n                        handleChangeNumberOfProduct={handleChangeNumberOfProduct}\r\n                        stickyForm={stickyForm}\r\n                        clearForm={clearForm}\r\n                        handleEdit={handleEdit}\r\n                        addNewProduct={addNewProduct}\r\n                        handleChangeCodeOfProduct={handleChangeCodeOfProduct}\r\n                        handleChangeNameOfProduct={handleChangeNameOfProduct}\r\n                        handleChangeUnitOfProduct={handleChangeUnitOfProduct}\r\n                        handleChangeCategoryOfProduct={handleChangeCategoryOfProduct}\r\n                        pageName={'products'}\r\n                        unitOptions={unitOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        searchBarcode={searchBarcode}\r\n                        minimumCount={minimumCount}\r\n                        handleChangeMinimumCount={handleChangeMinimumCount}\r\n                        tradePrice={currencyType === 'USD' ? tradePrice : tradePriceUzs}\r\n                        handleChangeTradePrice={handleChangeTradePrice}\r\n                    /> : modalOpen && <section className='absolute lg:h-[100vh]  w-[100%] bg-[white] z-50 top-0 left-0'>\r\n                    <div className='flex justify-end p-[25px]'><VscChromeClose onClick={() => setModalOpen(false)}\r\n                                                                               className='cursor-pointer text-3xl' />\r\n                    </div>\r\n                    <CreateProductForm\r\n                        nameOfProduct={nameOfProduct}\r\n                        unitOfProduct={unitOfProduct}\r\n                        categoryOfProduct={categoryOfProduct}\r\n                        codeOfProduct={codeOfProduct}\r\n                        checkOfProduct={checkOfProduct}\r\n                        tradePriceProcient={tradePriceProcient}\r\n                        handleChangeTradePriceProcient={handleChangeTradePriceProcient}\r\n                        handleChangeCheckOfProduct={handleChangeCheckOfProduct}\r\n                        priceOfProduct={\r\n                            currencyType === 'UZS' ? priceOfProduct : priceOfProductUsd\r\n                        }\r\n                        sellingPriceOfProduct={\r\n                            currencyType === 'UZS'\r\n                                ? sellingPriceOfProduct\r\n                                : sellingPriceOfProductUsd\r\n                        }\r\n                        sellingPriceOfProcient={sellingPriceOfProcient}\r\n                        numberOfProduct={numberOfProduct}\r\n                        handleChangeSellingPriceOfProduct={\r\n                            handleChangeSellingPriceOfProduct\r\n                        }\r\n                        handleChangeSellingPriceOfProcient={\r\n                            handleChangeSellingPriceOfProcient\r\n                        }\r\n                        handleChangePriceOfProduct={handleChangePriceOfProduct}\r\n                        handleChangeNumberOfProduct={handleChangeNumberOfProduct}\r\n                        stickyForm={stickyForm}\r\n                        clearForm={clearForm}\r\n                        handleEdit={handleEdit}\r\n                        addNewProduct={addNewProduct}\r\n                        handleChangeCodeOfProduct={handleChangeCodeOfProduct}\r\n                        handleChangeNameOfProduct={handleChangeNameOfProduct}\r\n                        handleChangeUnitOfProduct={handleChangeUnitOfProduct}\r\n                        handleChangeCategoryOfProduct={handleChangeCategoryOfProduct}\r\n                        pageName={'products'}\r\n                        unitOptions={unitOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        searchBarcode={searchBarcode}\r\n                        minimumCount={minimumCount}\r\n                        handleChangeMinimumCount={handleChangeMinimumCount}\r\n                        tradePrice={currencyType === 'USD' ? tradePrice : tradePriceUzs}\r\n                        handleChangeTradePrice={handleChangeTradePrice}\r\n                    />\r\n                </section> \r\n            }\r\n\r\n            {isMobile ? <div\r\n                className={'flex lg:mt-[-113px] pl-[20px] mt-0 flex-wrap lg:justify-start justify-center lg:ms-[200px] items-center mainPadding'}>\r\n\r\n                <div className={'flex gap-[1rem] ms-[1rem]  mb-[15px] '}>\r\n\r\n                    <ExportBtn onClick={exportData} />\r\n                    <ImportBtn readExcel={readExcel} />\r\n                    {\r\n                        isMobile ? <button onClick={() => setFilterModal(true)}\r\n                                           className='hover:bg-blue-200  bg-blue-400 focus-visible:outline-none w-[90px] h-[33px]  createElement'>\r\n                            <FaFilter /> {t('izlash')}</button> : null\r\n                    }\r\n\r\n                </div>\r\n\r\n\r\n            </div> : \r\n                <div className={'flex px-4 py-2 gap-2'}>\r\n\r\n                    <ExportBtn onClick={exportData} />\r\n                    <ImportBtn readExcel={readExcel} />\r\n                    {\r\n                        isMobile ? <button onClick={() => setFilterModal(true)}\r\n                                           className='hover:bg-blue-200  bg-blue-400 focus-visible:outline-none w-[90px] h-[33px]  createElement'>\r\n                            <FaFilter /> {t('izlash')}</button> : null\r\n                    }\r\n\r\n                </div>}\r\n            {\r\n                filterModal ? <div\r\n                    className='absolute lg:p-[50px] w-[100vw]  h-[100vh]  flex justify-evenly flex-wrap items-center  top-0\tleft-0 z-50 bg-[white]\t'>\r\n                    <VscChromeClose onClick={() => setFilterModal(false)}\r\n                                    className=' absolute right-[20px]  top-[20px]  text-4xl cursor-pointer' />\r\n                    <SearchForm\r\n                        filterBy={[\r\n                            'total',\r\n                            'barcode',\r\n                            'category',\r\n                            'code',\r\n                            'name',\r\n                            'doubleDate'\r\n                        ]}\r\n                        filterByCode={filterByCode}\r\n                        filterByCodeAndNameAndCategoryWhenPressEnter={\r\n                            filterByCodeAndNameAndCategoryWhenPressEnter\r\n                        }\r\n                        filterByName={filterByName}\r\n                        filterByTotal={filterByTotal}\r\n                        searchByCode={searchByCode}\r\n                        searchByName={searchByName}\r\n                        searchByCategory={searchByCategory}\r\n                        filterByCategory={filterByCategory}\r\n                        barCode={barCode}\r\n                        filterByBarcode={filterByBarcode}\r\n                        filterByBarcodeWhenPressEnter={filterByBarcodeWhenPressEnter}\r\n                    />\r\n                    <button onClick={() => {\r\n                        setFilterModal(false)\r\n\r\n                    }}\r\n                            className='d-block  hover:bg-green-200  bg-green-400 mt-[-200px] lg:mt-[25px] focus-visible:outline-none w-[150px] h-[40px] createElement '>\r\n                        <FaFilter /> {t('izlash')}</button>\r\n                </div> : null\r\n            }\r\n            <span className='flex items-center  mb-3 ml-2 '>\r\n            <div className='lg:mt-[30px]'>\r\n            <SelectForm label={'mas'} key={'total_1'} onSelect={filterByTotal} />\r\n            </div>\r\n                {\r\n                    !isMobile ? <SearchForm\r\n                        filterBy={[\r\n                            'total',\r\n                            'barcode',\r\n                            'category',\r\n                            'code',\r\n                            'name',\r\n                            'doubleDate'\r\n                        ]}\r\n                        filterByCode={filterByCode}\r\n                        filterByCodeAndNameAndCategoryWhenPressEnter={\r\n                            filterByCodeAndNameAndCategoryWhenPressEnter\r\n                        }\r\n                        filterByName={filterByName}\r\n                        filterByTotal={filterByTotal}\r\n                        searchByCode={searchByCode}\r\n                        searchByName={searchByName}\r\n                        searchByCategory={searchByCategory}\r\n                        filterByCategory={filterByCategory}\r\n                        barCode={barCode}\r\n                        filterByBarcode={filterByBarcode}\r\n                        filterByBarcodeWhenPressEnter={filterByBarcodeWhenPressEnter}\r\n                    /> : null\r\n                }\r\n            </span>\r\n\r\n            <div className='lg:p-[20px] p-0'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={'Maxsulot mavjud emas'} />\r\n                ) : (\r\n                    isMobile ? <TableMobile\r\n                        currencyType={currencyType}\r\n                        headers={headers}\r\n                        Edit={handleEditProduct}\r\n                        Delete={handleDeleteProduct}\r\n                        page={'product'}\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        Sort={filterData}\r\n                        sortItem={sorItem}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        currency={currencyType}\r\n                        modalOpen={setModalOpen}\r\n                    /> : <Table\r\n                        currencyType={currencyType}\r\n                        headers={headers}\r\n                        Edit={handleEditProduct}\r\n                        Delete={handleDeleteProduct}\r\n                        page={'product'}\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        Sort={filterData}\r\n                        sortItem={sorItem}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        currency={currencyType}\r\n                        modalOpen={setModalOpen}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div\r\n                className='flex justify-center mb-[10px] mt-[20px]'>{(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                <Pagination\r\n                    countPage={Number(showByTotal)}\r\n                    totalDatas={totalSearched || filteredDataTotal}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                />\r\n            )}</div>\r\n            <BarcodeReader onError={handleError} onScan={handleScan} />\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Products\r\n"],"names":["_ref","readExcel","t","useTranslation","_jsxs","_Fragment","children","_jsx","htmlFor","className","IoDownloadOutline","size","type","id","onClick","e","target","value","onChange","file","files","searchBarcode","stickyForm","handleChangeCodeOfProduct","codeOfProduct","handleChangeNameOfProduct","nameOfProduct","numberOfProduct","handleChangeNumberOfProduct","unitOfProduct","handleChangeUnitOfProduct","handleChangePriceOfProduct","priceOfProduct","sellingPriceOfProduct","handleChangeSellingPriceOfProduct","handleEdit","addNewProduct","clearForm","pageName","unitOptions","categoryOfProduct","categoryOptions","handleChangeCategoryOfProduct","checkOfProduct","handleChangeCheckOfProduct","tradePrice","handleChangeTradePrice","minimumCount","handleChangeMinimumCount","sellingPriceOfProcient","handleChangeSellingPriceOfProcient","handleChangeTradePriceProcient","tradePriceProcient","FieldContainer","label","placeholder","maxWidth","onKeyUp","select","options","Button","add","edit","text","dispatch","useDispatch","market","_id","useSelector","state","login","units","allcategories","category","currency","currencyType","products","total","loading","lastProductCode","searchedProducts","totalSearched","loadingExcel","barcode","data","setData","useState","searchedData","setSearchedData","setCheckOfProduct","setCodeOfProduct","setNameOfProduct","setNumberOfProduct","setUnitOfProduct","setPriceOfProduct","setSellingPriceOfProduct","setSellingPriceOfProcient","priceOfProductUsd","setPriceOfProductsUsd","sellingPriceOfProductUsd","setSellingPriceOfProductUsd","setCategoryOfProduct","searchByCode","setSearchByCode","searchByName","setSearchByName","searchByCategory","setSearchByCategory","showByTotal","setShowByTotal","currentPage","setCurrentPage","filteredDataTotal","setFilteredDataTotal","setStickyForm","currentProduct","setCurrentProduct","modalVisible","setModalVisible","deletedProduct","setDeletedProduct","modalBody","setModalBody","setUnitOptions","setCategoryOptions","excelData","setExcelData","createdData","setCreatedData","barCode","setBarCode","sorItem","setSorItem","filter","sort","count","isMobile","setIsMobile","window","innerWidth","importLoading","setImportLoading","setMinimumCount","setTradePrice","tradePriceUzs","setTradePriceUzs","setTradePriceProcient","tableRowId","setTableRowId","modalOpen","setModalOpen","filterModal","setFilterModal","toggleModal","headers","title","styles","useEffect","handleResize","addEventListener","removeEventListener","val","regexForTypeNumber","test","Number","setProcient","datausd","datauzs","procient","roundUzs","roundUsd","UzsToUsd","UsdToUzs","option","body","categoryId","getCodeOfCategory","setProcientTradePrice","filterByCode","valForSearch","replace","trim","length","clearSearchedProducts","filteredProducts","product","productdata","code","includes","filterByBarcode","_product$productdata","filterByCategory","filterByName","toLowerCase","name","filterByCodeAndNameAndCategoryWhenPressEnter","key","countPage","search","unit","getProductsByFilter","filterByBarcodeWhenPressEnter","filterByTotal","getBarcode","preventDefault","failed","message","checkEmptyString","warningEmptyInput","incomingprice","sellingprice","incomingpriceuzs","sellingpriceuzs","tradeprice","tradepriceuzs","minimumcount","addProduct","then","_ref2","error","handleClickCancelToImport","getAllProducts","warningCurrencyRate","priceid","price","updateProduct","_ref3","getProducts","document","querySelector","scrollIntoView","block","split","pop","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_json","onerror","universalToast","handleEditProduct","ident","handleDeleteProduct","handleClickCancelToDelete","setTimeout","filterData","filterKey","universalSort","exportData","exportHeader","getProductsAll","_ref7","payload","newData","map","item","index","_item$productdata","_item$category","_item$productdata2","_item$productdata3","_item$unit","_item$price","_item$price2","_item$price3","_item$price4","_item$price5","_item$price6","nth","exportExcel","getUnits","getAllCategories","getCurrency","slice","motion","section","initial","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","SmallLoader","UniversalModal","headerText","approveFunction","handleClickApproveToDelete","deleteProduct","_ref4","handleClickApproveToImport","oldKeys","Object","keys","newItem","forEach","hasOwnProperty","addProductsFromExcel","_ref5","closeModal","isOpen","VscChromeClose","CreateProductForm","ExportBtn","ImportBtn","FaFilter","SearchForm","filterBy","SelectForm","onSelect","Spinner","NotFind","TableMobile","Edit","Delete","page","Sort","sortItem","Table","Pagination","totalDatas","BarcodeReader","onError","handleError","onScan","toString","_ref6"],"sourceRoot":""}