{"version":3,"file":"static/js/2440.39707eef.chunk.js","mappings":"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","sources":["Components/Buttons/SaleBtns.js","Components/Payment/PaymentSelect/CustomStyle.js","Components/Payment/PaymentSelect/PaymentSelect.js","Components/Inputs/DiscountInputs.js","Components/Buttons/ExitBtn.js","Components/Payment/PaymentInput/PaymentInput.js","Components/Payment/CustomerPayment.js","Pages/PayDebts/PayDebts.js"],"sourcesContent":["import React from 'react'\r\nimport {\r\n    IoCardOutline,\r\n    IoCashOutline,\r\n    IoGitCompareOutline,\r\n    IoPricetagOutline,\r\n    IoSwapHorizontalOutline,\r\n    IoWalletOutline,\r\n} from 'react-icons/io5'\r\n\r\nexport const SaleBtn = ({ onClick, text, type, active }) => {\r\n    const icons = {\r\n        cash: <IoCashOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        card: <IoCardOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        transfer: (\r\n            <IoSwapHorizontalOutline\r\n                className='paymentsstyle'\r\n                size={'1.3125rem'}\r\n            />\r\n        ),\r\n        mixed: (\r\n            <IoGitCompareOutline className='paymentsstyle' size={'1.3125rem'} />\r\n        ),\r\n    }\r\n    return (\r\n        <button\r\n            onClick={() => onClick(type)}\r\n            className={`salestyle ${active ? 'bg-primary-700 text-white-900' : 'bg-[#E9ECEB]'\r\n                }`}\r\n        >\r\n            {icons[type]}\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const DiscountBtn = ({ onClick, text }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className='discountstyle w-full h-[3.25rem] bg-warning-500 text-white-900 duration-200 shadow-lg'\r\n        >\r\n            <IoPricetagOutline className='discstyle' size={'1.5rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const Payment = ({ onClick, text, onDoubleClick }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            onDoubleClick={onDoubleClick}\r\n            className={`paymentstyle grow`}\r\n        >\r\n            <IoWalletOutline className='paystyle' size={'1.3125rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n","//    {/*.discountselect {\r\n//         @apply py-[5px] px-[10px] text-sm outline-none bg-warning-500 text-white-900 rounded-r cursor-pointer;\r\n//     }*/}\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\nconst Container = (styles) => ({\r\n    ...styles,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    right: 0,\r\n    width: '3rem',\r\n    top: 0,\r\n    bottom: 0\r\n})\r\nconst DropdownIndicator = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    color: '#ffffff'\r\n})\r\nconst IndicatorsContainer = (styles) => ({\r\n    ...styles\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    overflow: 'hidden'\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer',\r\n    textAlign: 'center'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: '#ffffff',\r\n    margin: 0,\r\n    textAlign: 'center'\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\nconst Control = (styles) => ({\r\n    ...styles,\r\n    borderTopRightRadius: '.125rem',\r\n    borderBottomRightRadius: '.125rem',\r\n    borderTopLeftRadius: '0',\r\n    borderBottomLeftRadius: '0',\r\n    fontSize: '0.75rem',\r\n    fontWeight: '400',\r\n    padding: '0.375rem 0.3125rem',\r\n    color: '#071F45',\r\n    outline: 'none',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    height: '100%',\r\n    backgroundColor: '#F79009',\r\n    minHeight: '100%',\r\n    '&:hover': {\r\n        backgroundColor: '#DC6803'\r\n    }\r\n})\r\n\r\nconst CustomStyle = {\r\n    control: Control,\r\n    container: Container,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    indicatorsContainer: IndicatorsContainer,\r\n    dropdownIndicator: DropdownIndicator\r\n}\r\n\r\nexport default CustomStyle","import {useSelector} from 'react-redux'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentSelect({value, onChange, option, onSelect}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const options = [\r\n        {value: currencyType, label: currencyType},\r\n        {value: '%', label: '%'}\r\n    ]\r\n    return (\r\n        <div\r\n            className={`flex w-[11.75rem] border border-warning-500 rounded-[0.25rem] outline outline-transparent outline-0 focus-within:outline-2 focus-within:outline-warning-500 transition-all ease-in-out duration-100 relative`}\r\n        >\r\n            <input\r\n                className='w-[8.6875rem] placeholder-blue-200 py-[0.3125rem] px-[.3125rem] rounded-l-[0.25rem] outline-0 text-sm text-right transition-all ease-in-out duration-100'\r\n                placeholder={`${t('misol')}: 100 000 000`}\r\n                type={'number'}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    onChange(e.target.value)\r\n                }}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                value={option}\r\n                options={options}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSelect\r\n","import React from 'react'\r\nimport PaymentSelect from '../Payment/PaymentSelect/PaymentSelect.js'\r\nimport { t } from 'i18next'\r\n\r\nexport const DiscountInput = ({value, onChange, option, onSelect}) => {\r\n    return (\r\n        <div className='flex justify-between w-full items-center mb-[1rem]'>\r\n            <div className='text-black-700 text-[0.875rem]'>{t('Chegirma')} :</div>\r\n            <PaymentSelect onChange={onChange} onSelect={onSelect} value={value} option={option} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nexport const ExitBtn = ({onClick}) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className='exitbtn'>\r\n                <IoCloseSharp size={'0.75rem'} />\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {ExitBtn} from '../../Buttons/ExitBtn.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentInput({mix, value, onChange, label, onClose, keyInput, placeholder, type}) {\r\n    return (\r\n        <li className='custom-payment-ul-li'>\r\n            <span className='custom-payment-text-style'>{label} :</span>\r\n            <div className='flex items-center w-[11.75rem] gap-[0.625rem]'>\r\n                <TableInput\r\n                    placeholder={placeholder || `${t('misol')}: 100 000 000`}\r\n                    type={type || 'number'}\r\n                    value={value}\r\n                    onChange={(e) => {\r\n                        onChange(e.target.value, keyInput)\r\n                    }} />\r\n                {mix && <ExitBtn onClick={() => onClose(keyInput)} />}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PaymentInput\r\n","import { IoPerson } from 'react-icons/io5'\r\nimport { DiscountBtn, Payment, SaleBtn } from '../Buttons/SaleBtns.js'\r\nimport { DiscountInput } from '../Inputs/DiscountInputs.js'\r\nimport { useSelector } from 'react-redux'\r\nimport PaymentInput from './PaymentInput/PaymentInput.js'\r\nimport { t } from 'i18next'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nfunction CustomerPayment({\r\n    returned,\r\n    active,\r\n    togglePaymentModal,\r\n    type = 'cash',\r\n    cash = '',\r\n    card = '',\r\n    transfer = '',\r\n    discount,\r\n    hasDiscount,\r\n    debt,\r\n    allPayment,\r\n    paid = 0,\r\n    client = '',\r\n    onChange,\r\n    onClose,\r\n    changePaymentType,\r\n    discountSelectOption,\r\n    handleClickDiscountBtn,\r\n    handleChangeDiscountSelectOption,\r\n    handleChangeDiscount,\r\n    handleClickPay,\r\n    saleComment,\r\n    changeComment,\r\n    onDoubleClick,\r\n    clickdelay\r\n}) {\r\n    const location = useLocation()\r\n    const defineLabel = () => {\r\n        switch (type) {\r\n            case 'card':\r\n                return (\r\n                    <PaymentInput\r\n                        value={card}\r\n                        key={'sale-card1'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('Plastik')}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentInput\r\n                        value={transfer}\r\n                        key={'sale-transfer'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t('O`tkazma')}\r\n                    />\r\n                )\r\n            case 'mixed':\r\n                return [\r\n                    { label: t('Naqd'), key: 'cash', value: cash },\r\n                    { label: t('Plastik'), key: 'card', value: card },\r\n                    {\r\n                        label: t('O`tkazma'),\r\n                        key: 'transfer',\r\n                        value: transfer,\r\n                    },\r\n                ].map((obj) => (\r\n                    <PaymentInput\r\n                        value={obj.value}\r\n                        key={`sale-${obj.key}`}\r\n                        keyInput={obj.key}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t(obj.label)}\r\n                    />\r\n                ))\r\n            default:\r\n                return (\r\n                    <PaymentInput\r\n                        key={'sale-cash'}\r\n                        value={cash}\r\n                        onChange={onChange}\r\n                        keyInput={type}\r\n                        onClose={onClose}\r\n                        label={t('Naqd')}\r\n                    />\r\n                )\r\n        }\r\n    }\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    return (\r\n        <section\r\n            className={`fixed transition-all left-0 top-0 right-0 bottom-0 overflow-hidden duration-200 ease-out bg-black-300 backdrop-blur-[3px] z-20 ${active\r\n                ? 'opacity-100 pointer-events-auto'\r\n                : 'opacity-0 pointer-events-none'\r\n                }`}\r\n            onClick={togglePaymentModal}\r\n        >\r\n            <h3\r\n                className={\r\n                    'text-white-900 text-lg leading-[1.875rem absolute top-[50%] left-[35%] -translate-x-[50%]'\r\n                }\r\n            >\r\n                {t('')}\r\n            </h3>\r\n            <div\r\n                className={`customerPay-head-style transition-all duration-200 ease-linear h-full overflow-auto absolute top-0 bottom-0 right-0 ${active ? 'translate-x-0' : 'translate-x-full'\r\n                    }`}\r\n                onClick={(e) => e.stopPropagation()}\r\n                autoFocus\r\n            >\r\n                <div className='top-payment w-full'>\r\n                    {client && (\r\n                        <div className='customer-head-icon'>\r\n                            <div className='flex items-center custom-payment-text-style'>\r\n                                <IoPerson className='mr-[0.75rem]' />\r\n                                <span>{t('Mijoz')} : </span>\r\n                            </div>\r\n                            <h3 className='text-[0.875rem]'>{client}</h3>\r\n                        </div>\r\n                    )}\r\n                    <div className='mb-[1.25rem] font-medium text-[1.25rem] text-center leading-[23.44px]'>\r\n                        {allPayment.toLocaleString('ru-Ru')} {currencyType}\r\n                    </div>\r\n                    <ul className='w-full pb-[1.25rem]'>\r\n                        {!returned && defineLabel()}\r\n                        {(location.pathname.includes('/kassa/debts') || location.pathname.includes('/qarzdorlar') || location.pathname.includes('/maxsulotlar/qabul/qabulqilish') || location.pathname.includes('/maxsulotlar/qabul/qabullar')) && defineLabel()}\r\n                        <PaymentInput\r\n                            value={saleComment}\r\n                            key={'sale-card'}\r\n                            keyInput={type}\r\n                            onChange={changeComment}\r\n                            onClose={onClose}\r\n                            label={t('Izoh')}\r\n                            placeholder={t('misol: qarzga olindi')}\r\n                            type={'text'}\r\n                        />\r\n                        {hasDiscount && (\r\n                            <DiscountInput\r\n                                value={discount}\r\n                                onChange={handleChangeDiscount}\r\n                                option={discountSelectOption}\r\n                                onSelect={handleChangeDiscountSelectOption}\r\n                            />\r\n                        )}\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {t('Qarzlar')} :{' '}\r\n                            </span>\r\n                            <h3 className='text-error-500 text-[1rem]'>\r\n                                {debt.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {allPayment < 0\r\n                                    ? t('Qaytarilayotgan')\r\n                                    : t('To`lanayotgan')}{' '}\r\n                                :{' '}\r\n                            </span>\r\n                            <h3 className='text-[1rem] text-loginButton'>\r\n                                {paid.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='bottom-payment w-full flex flex-col gap-[1.25rem] border-t-[1px] border-black-200 pt-[1.25rem]'>\r\n                    <div className='custom-paymet-btn'>\r\n                        <SaleBtn\r\n                            text={t(`Naqd`)}\r\n                            type='cash'\r\n                            active={type === 'cash'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`Plastik`)}\r\n                            type='card'\r\n                            active={type === 'card'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`O'tkazma`)}\r\n                            type='transfer'\r\n                            active={type === 'transfer'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        {!returned && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />}\r\n                        {location.pathname.includes('/kassa/debts') && <SaleBtn\r\n                            text={t(`Aralash`)}\r\n                            type='mixed'\r\n                            active={type === 'mixed'}\r\n                            onClick={changePaymentType}\r\n                        />}\r\n                    </div>\r\n                    {!returned && (\r\n                        <DiscountBtn\r\n                            text={t(`Chegirma`)}\r\n                            onClick={handleClickDiscountBtn}\r\n                        />\r\n                    )}\r\n                    <Payment\r\n                        text={t(`To'lash`)}\r\n                        onClick={!clickdelay ? handleClickPay : () => console.log(\"wait\")}\r\n                    // onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomerPayment\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {UsdToUzs, UzsToUsd} from '../../App/globalFunctions'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal'\r\nimport CustomerPayment from '../../Components/Payment/CustomerPayment'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport Table from '../../Components/Table/Table'\r\nimport {warningMoreDiscount, warningMorePayment} from '../../Components/ToastMessages/ToastMessages'\r\nimport {getDebts, payDebt} from '../Reports/reportsSlice'\r\nimport {filter} from 'lodash'\r\n\r\nconst PayDebts = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { datas } = useSelector((state) => state.reports)\r\n    const { currencyType, currency } = useSelector((state) => state.currency)\r\n    const { user } = useSelector((state) => state.login)\r\n\r\n    const [storageData, setStorageData] = useState([])\r\n    const [currentData, setCurrentData] = useState([])\r\n\r\n    // Payments STATES\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [paymentModalVisible, setPaymentModalVisible] = useState(false)\r\n    const [paymentType, setPaymentType] = useState('cash')\r\n    const [paymentCash, setPaymentCash] = useState('')\r\n    const [paymentCashUzs, setPaymentCashUzs] = useState('')\r\n    const [paymentCard, setPaymentCard] = useState('')\r\n    const [paymentCardUzs, setPaymentCardUzs] = useState('')\r\n    const [paymentTransfer, setPaymentTransfer] = useState('')\r\n    const [paymentTransferUzs, setPaymentTransferUzs] = useState('')\r\n    const [paymentDiscount, setPaymentDiscount] = useState('')\r\n    const [paymentDiscountUzs, setPaymentDiscountUzs] = useState('')\r\n    const [paymentDiscountPercent, setPaymentDiscountPercent] = useState('')\r\n    const [hasDiscount, setHasDiscount] = useState(false)\r\n    const [saleConnectorId, setSaleConnectorId] = useState(null)\r\n    const [userValue, setUserValue] = useState('')\r\n    const [discountSelectOption, setDiscountSelectOption] = useState({\r\n        label: '%',\r\n        value: '%',\r\n    })\r\n    const [paymentDebt, setPaymentDebt] = useState(0)\r\n    const [paymentDebtUzs, setPaymentDebtUzs] = useState(0)\r\n    const [allPayment, setAllPayment] = useState(0)\r\n    const [allPaymentUzs, setAllPaymentUzs] = useState(0)\r\n    const [paid, setPaid] = useState(0)\r\n    const [paidUzs, setPaidUzs] = useState(0)\r\n    const [modalBody, setModalBody] = useState('')\r\n    const [modalData, setModalData] = useState(null)\r\n\r\n    const [printedSelling, setPrintedSelling] = useState(null)\r\n\r\n    const headers = [\r\n        { title: '№' },\r\n        { title: 'Kodi' },\r\n        { title: 'Nomi' },\r\n        { title: 'Soni' },\r\n        { title: 'Narxi' },\r\n        { title: 'Jami', styles: 'w-[10rem]' },\r\n        { title: '' },\r\n    ]\r\n\r\n    // payment\r\n    const togglePaymentModal = (bool) => {\r\n        bool\r\n            ? setPaymentModalVisible(!paymentModalVisible)\r\n            : setPaymentModalVisible(bool)\r\n        setPaymentType('cash')\r\n        setHasDiscount(false)\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n        setDiscountSelectOption({ label: '%', value: '%' })\r\n    }\r\n    const toggleCheckModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setModalBody('')\r\n        setModalData(null)\r\n    }\r\n    const convertToUsd = (value) => Math.round(value * 1000) / 1000\r\n    const convertToUzs = (value) => Math.round(value)\r\n    const handleClickPayment = (debt) => {\r\n        const all = debt.debt\r\n        const allUzs = debt.debtuzs\r\n        setAllPayment(all)\r\n        setAllPaymentUzs(allUzs)\r\n        setPaymentCash(all)\r\n        setPaymentCashUzs(allUzs)\r\n        setPaid(all)\r\n        setPaidUzs(allUzs)\r\n        setSaleConnectorId(debt._id)\r\n        setPaymentModalVisible(true)\r\n    }\r\n    const handleChangePaymentType = (type) => {\r\n        const all = allPayment - Number(paymentDiscount)\r\n        const allUzs = allPaymentUzs - Number(paymentDiscountUzs)\r\n        if (paymentType !== type) {\r\n            setPaymentType(type)\r\n            switch (type) {\r\n                case 'cash':\r\n                    setPaymentCash(all)\r\n                    setPaymentCashUzs(allUzs)\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'card':\r\n                    setPaymentCard(all)\r\n                    setPaymentCardUzs(allUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'transfer':\r\n                    setPaymentTransfer(all)\r\n                    setPaymentTransferUzs(allUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                default:\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(0)\r\n                    setPaidUzs(0)\r\n                    setPaymentDebt(allPayment - Number(paymentDiscount))\r\n                    setPaymentDebtUzs(\r\n                        allPaymentUzs - Number(paymentDiscountUzs)\r\n                    )\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    const writePayment = (value, type) => {\r\n        const maxSum = allPayment - Number(paymentDiscount)\r\n        const maxSumUzs = allPaymentUzs - Number(paymentDiscountUzs)\r\n        if (currencyType === 'USD') {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCash(value)\r\n                    setPaymentCashUzs(UsdToUzs(value, currency))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(UsdToUzs(maxSum - all, currency))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCard(value)\r\n                    setPaymentCardUzs(UsdToUzs(value, currency))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(UsdToUzs(maxSum - all, currency))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) + Number(paymentCash) + Number(paymentCard)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentTransfer(value)\r\n                    setPaymentTransferUzs(UsdToUzs(value, currency))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(UsdToUzs(maxSum - all, currency))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        } else {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCashUzs(value)\r\n                    setPaymentCash(UzsToUsd(value, currency))\r\n                    setPaymentDebt(UzsToUsd(maxSumUzs - all, currency))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCard(UzsToUsd(value, currency))\r\n                    setPaymentCardUzs(value)\r\n                    setPaymentDebt(UzsToUsd(maxSumUzs - all, currency))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(UzsToUsd(all, currency))\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentTransfer(UzsToUsd(value, currency))\r\n                    setPaymentTransferUzs(value)\r\n                    setPaymentDebt(UzsToUsd(maxSumUzs - all, currency))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const handleChangeDiscount = (value) => {\r\n        const allPaymentAfterDiscount =\r\n            Math.round(((allPayment * 5) / 100) * 10) / 10\r\n        const allPaymentUzsAfterDiscount =\r\n            Math.round(((allPaymentUzs * 5) / 100) * 10) / 10\r\n        if (discountSelectOption.value === 'USD') {\r\n            if (value > allPaymentAfterDiscount) {\r\n                warningMoreDiscount(`${allPaymentAfterDiscount} USD`)\r\n            } else {\r\n                setPaymentDiscount(value)\r\n                setPaymentDiscountUzs(UsdToUzs(value, currency))\r\n                setPaymentDiscountPercent(\r\n                    Math.round(((allPayment * value) / 100) * 10) / 10\r\n                )\r\n                setPaymentDebt(allPayment - value)\r\n                setPaymentDebtUzs(UsdToUzs(allPayment - value, currency))\r\n            }\r\n        } else if (discountSelectOption.value === 'UZS') {\r\n            if (value > allPaymentUzsAfterDiscount) {\r\n                warningMoreDiscount(`${allPaymentUzsAfterDiscount} UZS`)\r\n            } else {\r\n                setPaymentDiscountUzs(value)\r\n                setPaymentDiscount(UzsToUsd(value, currency))\r\n                setPaymentDiscountPercent(\r\n                    Math.round(((allPaymentUzs * value) / 100) * 10) / 10\r\n                )\r\n                setPaymentDebt(UzsToUsd(allPaymentUzs - value, currency))\r\n                setPaymentDebtUzs(allPaymentUzs - value)\r\n            }\r\n        } else {\r\n            if (value > 5) {\r\n                warningMoreDiscount('5%')\r\n            } else {\r\n                const discountUsd =\r\n                    Math.round(((allPayment * value) / 100) * 10) / 10\r\n                const discountUzs =\r\n                    Math.round(((allPaymentUzs * value) / 100) * 10) / 10\r\n                setPaymentDiscountPercent(value)\r\n                setPaymentDiscount(discountUsd)\r\n                setPaymentDiscountUzs(discountUzs)\r\n                setPaymentDebt(convertToUsd(allPayment - discountUsd))\r\n                setPaymentDebtUzs(convertToUzs(allPaymentUzs - discountUzs))\r\n                setPaid(allPayment - discountUsd)\r\n                setPaidUzs(allPaymentUzs - discountUzs)\r\n            }\r\n        }\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaid(0)\r\n        setPaidUzs(0)\r\n    }\r\n    const handleChangePaymentInput = (value, key) => {\r\n        writePayment(value, key)\r\n    }\r\n    const handleClickDiscountBtn = () => {\r\n        setHasDiscount(!hasDiscount)\r\n        if (paymentType === 'cash') {\r\n            setPaymentCash(allPayment)\r\n            setPaymentCashUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else if (paymentType === 'card') {\r\n            setPaymentCard(allPayment)\r\n            setPaymentCardUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else if (paymentType === 'transfer') {\r\n            setPaymentTransfer(allPayment)\r\n            setPaymentTransferUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else {\r\n            setPaymentCash('')\r\n            setPaymentCashUzs('')\r\n            setPaymentCard('')\r\n            setPaymentCardUzs('')\r\n            setPaymentTransfer('')\r\n            setPaymentTransferUzs('')\r\n            setPaid(0)\r\n            setPaidUzs(0)\r\n            setPaymentDebt(allPayment)\r\n            setPaymentDebtUzs(allPaymentUzs)\r\n        }\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n    }\r\n    const handleChangeDiscountSelectOption = (option) => {\r\n        if (discountSelectOption.value !== option.value) {\r\n            setDiscountSelectOption(option)\r\n            setPaymentDiscount('')\r\n            setPaymentDiscountUzs('')\r\n            setPaymentDiscountPercent('')\r\n            setPaymentCash('')\r\n            setPaymentCashUzs('')\r\n            setPaymentCard('')\r\n            setPaymentCardUzs('')\r\n            setPaymentTransfer('')\r\n            setPaymentTransferUzs('')\r\n            setPaymentDebt(allPayment)\r\n            setPaymentDebtUzs(allPaymentUzs)\r\n            setPaid(0)\r\n            setPaidUzs(0)\r\n        }\r\n    }\r\n    const clearAll = (bool) => {\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n        setPaid(0)\r\n        setPaidUzs(0)\r\n        setUserValue('')\r\n        setSaleConnectorId(null)\r\n        togglePaymentModal(bool)\r\n    }\r\n    const handleClickPay = () => {\r\n        setModalBody('complete')\r\n        setModalVisible(true)\r\n    }\r\n    const handleClosePay = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n    const handleApprovePay = () => {\r\n        handleClosePay()\r\n        const body = {\r\n            payment: {\r\n                totalprice: Number(allPayment),\r\n                totalpriceuzs: Number(allPaymentUzs),\r\n                type: paymentType,\r\n                cash: Number(paymentCash),\r\n                cashuzs: Number(paymentCashUzs),\r\n                card: Number(paymentCard),\r\n                carduzs: Number(paymentCardUzs),\r\n                transfer: Number(paymentTransfer),\r\n                transferuzs: Number(paymentTransferUzs),\r\n                discount: Number(paymentDiscount),\r\n                discountuzs: Number(paymentDiscountUzs),\r\n            },\r\n            user: user._id,\r\n            saleconnectorid: saleConnectorId,\r\n        }\r\n        dispatch(payDebt(body)).then(({ payload }) => {\r\n            const startDate = new Date(\r\n                new Date().setMonth(new Date().getMonth() - 3)\r\n            )\r\n            const endDate = new Date()\r\n            setModalData(payload)\r\n            dispatch(\r\n                getDebts({\r\n                    startDate,\r\n                    endDate,\r\n                })\r\n            )\r\n            setTimeout(() => {\r\n                setModalBody('checkPayment')\r\n                setModalVisible(true)\r\n                clearAll()\r\n            }, 500)\r\n        })\r\n    }\r\n    const toggleModal = () => {\r\n        setModalBody('')\r\n        setModalVisible(!modalVisible)\r\n        setTimeout(() => {\r\n            // setCurrentProduct(null)\r\n        }, 500)\r\n    }\r\n\r\n    const searchId = (e) => {\r\n        setCurrentData([\r\n            ...filter([...storageData], (debt) =>\r\n                debt.id.includes(e.target.value)\r\n            ),\r\n        ])\r\n    }\r\n\r\n    const searchClientName = (e) => {\r\n        setCurrentData([\r\n            ...filter(\r\n                [...storageData],\r\n                (debt) =>\r\n                    debt.client &&\r\n                    debt.client.name\r\n                        .toLowerCase()\r\n                        .includes(e.target.value.toLowerCase())\r\n            ),\r\n        ])\r\n    }\r\n\r\n    const handleClickPrint = (selling) => {\r\n        setModalBody('allChecks')\r\n        setPrintedSelling(selling)\r\n        setModalVisible(true)\r\n    }\r\n\r\n    //====================================================\r\n    //====================================================\r\n\r\n    const [startDate, setStartDate] = useState(new Date(\r\n        new Date().setMonth(new Date().getMonth() - 3)\r\n    ))\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const handleBeginDay = (e) => {\r\n        setStartDate(new Date(e.setHours(0, 0, 0)))\r\n    }\r\n    const handleEndDay = (e) => {\r\n        setEndDate(new Date(e.setHours(23, 59, 59)))\r\n    }\r\n\r\n    //====================================================\r\n    //====================================================\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getDebts({\r\n                startDate,\r\n                endDate,\r\n            })\r\n        )\r\n    }, [dispatch, startDate, endDate])\r\n\r\n    useEffect(() => {\r\n        setCurrentData(datas)\r\n        setStorageData(datas)\r\n    }, [datas])\r\n\r\n    const debtHeader = [\r\n        {\r\n            title: '№',\r\n        },\r\n        {\r\n            title: 'Sana',\r\n        },\r\n        {\r\n            title: 'ID',\r\n        },\r\n        {\r\n            title: 'Mijoz',\r\n        },\r\n        {\r\n            title: 'Izoh',\r\n        },\r\n        {\r\n            title: 'Jami',\r\n        },\r\n        {\r\n            title: 'Qarz',\r\n        },\r\n        {\r\n            title: '',\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className='relative overflow-auto h-full pt-[10px]'>\r\n            <div className='flex items-center justify-between'>\r\n                <SearchForm\r\n                    filterBy={['startDate', 'endDate', 'id', 'clientName']}\r\n                    filterById={searchId}\r\n                    filterByClientName={searchClientName}\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    setStartDate={handleBeginDay}\r\n                    setEndDate={handleEndDay}\r\n                />\r\n            </div>\r\n            <div className='tableContainerPadding'>\r\n                {currentData.length > 0 && (\r\n                    <Table\r\n                        page={'debts'}\r\n                        headers={debtHeader}\r\n                        data={currentData}\r\n                        currency={currencyType}\r\n                        Pay={handleClickPayment}\r\n                        Print={handleClickPrint}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div>\r\n                <CustomerPayment\r\n                    returned={true}\r\n                    type={paymentType}\r\n                    active={paymentModalVisible}\r\n                    togglePaymentModal={togglePaymentModal}\r\n                    changePaymentType={handleChangePaymentType}\r\n                    onChange={handleChangePaymentInput}\r\n                    client={userValue}\r\n                    allPayment={\r\n                        currencyType === 'USD' ? allPayment : allPaymentUzs\r\n                    }\r\n                    card={currencyType === 'USD' ? paymentCard : paymentCardUzs}\r\n                    cash={currencyType === 'USD' ? paymentCash : paymentCashUzs}\r\n                    debt={currencyType === 'USD' ? paymentDebt : paymentDebtUzs}\r\n                    discount={\r\n                        currencyType === 'USD'\r\n                            ? discountSelectOption.value === 'USD'\r\n                                ? paymentDiscount\r\n                                : paymentDiscountPercent\r\n                            : discountSelectOption.value === 'UZS'\r\n                                ? paymentDiscountUzs\r\n                                : paymentDiscountPercent\r\n                    }\r\n                    handleChangeDiscount={handleChangeDiscount}\r\n                    hasDiscount={hasDiscount}\r\n                    transfer={\r\n                        currencyType === 'USD'\r\n                            ? paymentTransfer\r\n                            : paymentTransferUzs\r\n                    }\r\n                    handleClickDiscountBtn={handleClickDiscountBtn}\r\n                    discountSelectOption={discountSelectOption}\r\n                    handleChangeDiscountSelectOption={\r\n                        handleChangeDiscountSelectOption\r\n                    }\r\n                    paid={currencyType === 'USD' ? paid : paidUzs}\r\n                    handleClickPay={handleClickPay}\r\n                />\r\n            </div>\r\n            <UniversalModal\r\n                body={modalBody}\r\n                toggleModal={\r\n                    modalBody === 'sell'\r\n                        ? toggleModal\r\n                        : modalBody === 'complete'\r\n                            ? handleClosePay\r\n                            : toggleCheckModal\r\n                }\r\n                approveFunction={handleApprovePay}\r\n                isOpen={modalVisible}\r\n                payment={modalData}\r\n                headers={headers}\r\n                printedSelling={printedSelling}\r\n                headerText={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirishni tasdiqlaysizmi ?\"\r\n                }\r\n                title={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirgach bu ma`lumotlarni o`zgaritirb bo`lmaydi !\"\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PayDebts\r\n"],"names":["SaleBtn","_ref","onClick","text","type","active","icons","cash","_jsx","IoCashOutline","className","size","card","IoCardOutline","transfer","IoSwapHorizontalOutline","mixed","IoGitCompareOutline","_jsxs","children","DiscountBtn","_ref2","IoPricetagOutline","Payment","_ref3","onDoubleClick","IoWalletOutline","DropdownIcon","props","components","DropdownIndicator","IoCaretDown","control","styles","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","fontSize","fontWeight","padding","color","outline","border","boxShadow","cursor","height","backgroundColor","minHeight","container","position","right","width","top","bottom","option","Option","isFocused","isSelected","transition","overflow","textAlign","menu","singleValue","margin","valueContainer","indicatorsContainer","dropdownIndicator","value","onChange","onSelect","currencyType","useSelector","state","currency","options","label","placeholder","t","e","target","onWheel","blur","min","Select","CustomStyle","isSearchable","IndicatorSeparator","DiscountInput","PaymentSelect","ExitBtn","_Fragment","IoCloseSharp","mix","onClose","keyInput","TableInput","returned","togglePaymentModal","discount","hasDiscount","debt","allPayment","paid","client","changePaymentType","discountSelectOption","handleClickDiscountBtn","handleChangeDiscountSelectOption","handleChangeDiscount","handleClickPay","saleComment","changeComment","clickdelay","location","useLocation","defineLabel","PaymentInput","key","map","obj","stopPropagation","autoFocus","IoPerson","toLocaleString","pathname","includes","console","log","PayDebts","dispatch","useDispatch","datas","reports","user","login","storageData","setStorageData","useState","currentData","setCurrentData","modalVisible","setModalVisible","paymentModalVisible","setPaymentModalVisible","paymentType","setPaymentType","paymentCash","setPaymentCash","paymentCashUzs","setPaymentCashUzs","paymentCard","setPaymentCard","paymentCardUzs","setPaymentCardUzs","paymentTransfer","setPaymentTransfer","paymentTransferUzs","setPaymentTransferUzs","paymentDiscount","setPaymentDiscount","paymentDiscountUzs","setPaymentDiscountUzs","paymentDiscountPercent","setPaymentDiscountPercent","setHasDiscount","saleConnectorId","setSaleConnectorId","userValue","setUserValue","setDiscountSelectOption","paymentDebt","setPaymentDebt","paymentDebtUzs","setPaymentDebtUzs","setAllPayment","allPaymentUzs","setAllPaymentUzs","setPaid","paidUzs","setPaidUzs","modalBody","setModalBody","modalData","setModalData","printedSelling","setPrintedSelling","bool","convertToUsd","Math","round","convertToUzs","handleClosePay","setTimeout","startDate","setStartDate","Date","setMonth","getMonth","endDate","setEndDate","useEffect","getDebts","SearchForm","filterBy","filterById","filter","id","filterByClientName","name","toLowerCase","setHours","length","Table","page","headers","title","data","Pay","all","allUzs","debtuzs","_id","Print","selling","CustomerPayment","Number","handleChangePaymentInput","writePayment","maxSum","maxSumUzs","UsdToUzs","warningMorePayment","allUsd","UzsToUsd","allPaymentAfterDiscount","allPaymentUzsAfterDiscount","warningMoreDiscount","discountUsd","discountUzs","UniversalModal","body","toggleModal","toggleCheckModal","approveFunction","handleApprovePay","payment","totalprice","totalpriceuzs","cashuzs","carduzs","transferuzs","discountuzs","saleconnectorid","payDebt","then","payload","isOpen","headerText"],"sourceRoot":""}