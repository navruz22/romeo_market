{"version":3,"file":"static/js/4246.15d5ccd7.chunk.js","mappings":"yVAuCA,MAwVA,EAxViBA,KACb,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAASC,OAAOC,YAAc,MAC9DC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAeA,KACjBL,EAAYE,OAAOC,YAAc,IAAI,EAKzC,OAFAD,OAAOI,iBAAiB,SAAUD,GAE3B,KACHH,OAAOK,oBAAoB,SAAUF,EAAa,CACrD,GACF,IACH,MAAM,EAACG,IAAKC,EAAAA,EAAAA,GAAe,CAAC,WACtBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,eACFC,EAAc,UACdC,EAAS,mBACTC,EAAkB,sBAClBC,EAAqB,sBACrBC,EAAqB,QACrBC,EAAO,kBACPC,EAAiB,MACjBC,EAAK,cACLC,IACAC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMT,YAE3BU,EAAU,CACZ,CAACC,MAAOlB,EAAE,UAAMmB,OAAQ,oBACxB,CAACD,MAAOlB,EAAE,eAAgBmB,OAAQ,qBAClC,CAACD,MAAO,GAAIC,OAAQ,sBAIjBC,EAAMC,IAAW5B,EAAAA,EAAAA,UAASc,IAC1Be,EAAcC,IAAmB9B,EAAAA,EAAAA,UAASmB,IAC1CY,EAAcC,IAAmBhC,EAAAA,EAAAA,UAAS,KAC1CiC,EAAiBC,IAAsBlC,EAAAA,EAAAA,UAAS,KAChDmC,EAAiBC,IAAsBpC,EAAAA,EAAAA,UAAS,OAChDqC,EAAcC,IAAmBtC,EAAAA,EAAAA,WAAS,IAC1CuC,EAAYC,IAAiBxC,EAAAA,EAAAA,WAAS,IACtCyC,EAAaC,IAAkB1C,EAAAA,EAAAA,UAAS,OACxC2C,EAAaC,IAAkB5C,EAAAA,EAAAA,UAAS,IACxC6C,GAAmBC,KAAwB9C,EAAAA,EAAAA,UAASoB,IACpD2B,GAAcC,KAAmBhD,EAAAA,EAAAA,UAAS,IAG3CiD,GAAcA,IAAMX,GAAiBD,GAQrCa,GAAsBC,IACxBjB,EAAmBiB,GACnBnB,EAAgBmB,EAASC,MACzBZ,GAAc,EAAK,EAEjBa,GAAwBF,IAC1Bf,EAAmBe,GACnBF,IAAa,EAcXK,GAA4BA,KAC9BhB,GAAgB,GAChBF,EAAmB,KAAK,EA+CtBmB,GAAaC,IACfA,GAAKA,EAAEC,iBACPzB,EAAgB,IAChBE,EAAmB,MACnBM,GAAc,GACdJ,EAAmB,KAAK,EAItBsB,GAAgBC,IAAc,IAAb,MAACC,GAAMD,EAC1BjB,EAAekB,GACfhB,EAAe,EAAE,EAmCfiB,GAAwBC,IAC1BnD,EAAS,6BAA6BmD,IAAK,EA4D/C,OAxDA3D,EAAAA,EAAAA,YAAU,KACFU,KACAkD,EAAAA,EAAAA,IAAelD,EAAgB,SAC/BJ,GAASuD,EAAAA,EAAAA,QAETjD,KACAkD,EAAAA,EAAAA,MACAxD,GAASyD,EAAAA,EAAAA,OACTzD,GAAS0D,EAAAA,EAAAA,OACTZ,MAEAvC,KACAoD,EAAAA,EAAAA,MACA3D,GAAS4D,EAAAA,EAAAA,OACT5D,GAAS0D,EAAAA,EAAAA,OACTjC,EAAmB,IACnBM,GAAc,GACde,MAEAtC,IACAR,GAAS0D,EAAAA,EAAAA,QACTG,EAAAA,EAAAA,MACA7D,GAAS8D,EAAAA,EAAAA,OACThB,KACJ,GACD,CACC9C,EACAI,EACAE,EACAC,EACAC,KAGJd,EAAAA,EAAAA,YAAU,KACN,MAAMqE,EAAO,CACT7B,cACA8B,UAAWhC,EACXiC,OAAQ,CACJtB,KAAML,GAAa4B,QAAQ,OAAQ,KAAKC,SAGhDnE,GAASoE,EAAAA,EAAAA,IAAaL,GAAM,GAE7B,CAAC/D,EAAUgC,EAAaE,KAE3BxC,EAAAA,EAAAA,YAAU,KACNyB,EAAQd,EAAU,GACnB,CAACA,KAEJX,EAAAA,EAAAA,YAAU,KACN2C,GAAqB1B,EAAM,GAC5B,CAACA,KAEJjB,EAAAA,EAAAA,YAAU,KACN2B,EAAgBX,EAAkB,GACnC,CAACA,KAEA2D,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,QAAO,CAEXC,QAAQ,YACRC,QAAQ,OACRC,KAAK,YACLC,SAAU,CACNC,KAAM,CAACC,QAAS,EAAGC,OAAQ,QAC3BC,UAAW,CAACF,QAAS,EAAGC,OAAQ,IAEpCE,WAAY,CAACC,SAAU,GAAKC,KAAM,CAAC,IAAM,IAAM,IAAM,MAAOC,SAAA,EAE5DC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CACXC,WAAY,GAAG5D,GAAmBA,EAAgBiB,QAAQ7C,EACtD,qDAEJkB,MAAOlB,EACH,mEAEJ0C,YAAaA,GACbuB,KAAM,UACNwB,gBA7LuBC,KAC/B,MAAMzB,EAAO,CACT0B,IAAK/D,EAAgB+D,IACrBvD,cACA8B,UAAWhC,EACXiC,OAAQ,CACJtB,KAAML,GAAa4B,QAAQ,OAAQ,KAAKC,SAGhDnE,GAAS0F,EAAAA,EAAAA,IAAe3B,IACxBlB,IAA2B,EAoLnB8C,WAAY9C,GACZ+C,OAAQhE,KAEZwD,EAAAA,EAAAA,KAAA,QACIS,UAAW,yHACP/D,GAAc,eACfqD,UAEHd,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,iBAAgBV,SAAA,EAC3BC,EAAAA,EAAAA,KAACU,EAAAA,EAAc,CACXC,MAAOjG,EAAE,oBACTkG,YAAa,GACbC,SAAU,YACVC,KAAM,SACN/C,MAAO7B,EACP6E,SA3NcpD,IAC9BxB,EAAgBwB,EAAEqD,OAAOjD,MAAM,KA4NnBkB,EAAAA,EAAAA,MAAA,OAAKwB,UAAW,yCAAyCV,SAAA,EACrDC,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACHC,KAAMxE,EACNyE,KAAMzE,EACN0E,KAEU1G,EADNgC,EACQ,UACA,8BAEZ2E,QAAS3E,EAjLbiB,IAChBA,EAAEC,iBACF,MAAM,OAAC0D,EAAM,QAAEC,IAAWC,EAAAA,EAAAA,IAAiB,CAAC,CACxCzD,MAAO7B,EACPqF,QAAS7G,EAAE,uBAEf,GAAI4G,GACAG,EAAAA,EAAAA,IAAkBF,OACf,CACH,MAAM5C,EAAO,CACTpB,KAAMrB,EACNmE,IAAKjE,EAAgBiE,IACrBvD,cACA8B,UAAWhC,EACXiC,OAAQ,CACJtB,KAAML,GAAa4B,QAAQ,OAAQ,KAAKC,SAGhDnE,GAAS8G,EAAAA,EAAAA,IAAe/C,GAC5B,GAxCoBhB,IACpBA,EAAEC,iBACF,MAAM,OAAC0D,EAAM,QAAEC,IAAWC,EAAAA,EAAAA,IAAiB,CAAC,CACxCzD,MAAO7B,EACPqF,QAAS7G,EAAE,uBAEf,GAAI4G,GACAG,EAAAA,EAAAA,IAAkBF,OACf,CACH,MAAM5C,EAAO,CACTpB,KAAMrB,EACNY,cACA8B,UAAWhC,EACXiC,OAAQ,CACJtB,KAAML,GAAa4B,QAAQ,OAAQ,KAAKC,SAGhDnE,GAAS+G,EAAAA,EAAAA,IAAYhD,GACzB,MAsLgBqB,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACI,QAAS3D,GAAW0D,KAAM1G,EAAE,uBAIhDuE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,+BAA8BV,SAAA,EAC7CC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAAmBC,SAAUhE,IAAtB,YAClBmC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CACPjE,cAAeA,GACfkE,SAAU,CAAC,QAAS,QACpBC,aAvJUrE,IAClB,IAAIsE,EAAMtE,EAAEqD,OAAOjD,MACfmE,EAAeD,EAAIE,cAAcrD,QAAQ,OAAQ,KAAKC,OAI1D,GAHA5B,GAAgB8E,IACdjG,EAAaoG,OAAS,GAAK5G,EAAgB,IAC7CZ,GAASyH,EAAAA,EAAAA,OACY,KAAjBH,EACAnG,EAAQd,GACRgC,GAAqB1B,OAClB,CACH,MAAM+G,GAAoBC,EAAAA,EAAAA,QAAOtH,GAAYqC,GAClCA,EAASC,KAAK4E,cAAcK,SAASN,KAEhDnG,EAAQuG,GACRrF,GAAqBqF,EAAkBF,OAC3C,GAyIQlF,aAAcA,GACduF,6CAxIwB9E,IAChC,GAAc,UAAVA,EAAE+E,IAAiB,CACnB,MAAM/D,EAAO,CACT7B,cACA8B,UAAWhC,EACXiC,OAAQ,CACJtB,KAAML,GAAa4B,QAAQ,OAAQ,KAAKC,SAGhDnE,GAAS+H,EAAAA,EAAAA,IAAqBhE,GAClC,SAoIIqB,EAAAA,EAAAA,KAAA,OAAKS,UAAU,2BAA0BV,SACpC1E,GACG2E,EAAAA,EAAAA,KAAC4C,EAAAA,EAAO,IACQ,IAAhB9G,EAAKsG,QAAwC,IAAxBpG,EAAaoG,QAClCpC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAO,CAACzB,KAAM1G,EAAE,sCAEhBT,GAWD+F,EAAAA,EAAAA,KAAC8C,EAAAA,EAAW,CACRhH,KAAME,EAAaoG,OAAS,EAAIpG,EAAeF,EAC/CiH,KAAM,WACNjG,YAAaA,EACb8B,UAAWhC,EACXjB,QAASA,EACTqH,KAAM3F,GACN4F,OAAQzF,GACRQ,qBAAsBA,MAlB1BgC,EAAAA,EAAAA,KAACkD,EAAAA,EAAK,CACFpH,KAAME,EAAaoG,OAAS,EAAIpG,EAAeF,EAC/CiH,KAAM,WACNjG,YAAaA,EACb8B,UAAWhC,EACXjB,QAASA,EACTqH,KAAM3F,GACN4F,OAAQzF,GACRQ,qBAAsBA,QAelCgC,EAAAA,EAAAA,KAAA,OAAKS,UAAU,8DAA6DV,UAChD,IAAtB/C,IAA6C,IAAlBxB,KACzBwE,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CACPvE,UAAWwE,OAAOxG,GAClByG,WAAY7H,GAAiBwB,GAC7BF,YAAaA,EACbC,eAAgBA,QArGxB,UAyGS,C","sources":["Pages/SupplierPage/SupplierPage.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport FieldContainer from '../../Components/FieldContainer/FieldContainer'\r\nimport Button from '../../Components/Buttons/BtnAddRemove'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport Table from '../../Components/Table/Table'\r\nimport TableMobile from '../../Components/Table/TableMobile'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport {motion} from 'framer-motion'\r\nimport {\r\n    addSupplier,\r\n    clearErrorSuppliers,\r\n    clearSearchedSuppliers,\r\n    clearSuccessAddSupplier,\r\n    clearSuccessDeleteSupplier,\r\n    clearSuccessUpdateSupplier,\r\n    deleteSupplier,\r\n    getSuppliers,\r\n    getSuppliersByFilter,\r\n    updateSupplier\r\n} from './suppliersSlice.js'\r\n\r\nimport {getAllSuppliers} from '../Incomings/incomingSlice.js'\r\nimport {\r\n    successAddSupplierMessage,\r\n    successDeleteSupplierMessage,\r\n    successUpdateSupplierMessage,\r\n    universalToast,\r\n    warningEmptyInput\r\n} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal.js'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm.js'\r\nimport {checkEmptyString} from '../../App/globalFunctions.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {filter} from 'lodash'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport SelectForm from '../../Components/Select/SelectForm.js'\r\n\r\nconst Supplier = () => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const {\r\n        errorSuppliers,\r\n        suppliers,\r\n        successAddSupplier,\r\n        successUpdateSupplier,\r\n        successDeleteSupplier,\r\n        loading,\r\n        searchedSuppliers,\r\n        total,\r\n        totalSearched\r\n    } = useSelector((state) => state.suppliers)\r\n\r\n    const headers = [\r\n        {title: t('â„–'), styles: 'w-[8%] text-left'},\r\n        {title: t('Yetkazuvchi'), styles: 'w-[84%] text-left'},\r\n        {title: '', styles: 'w-[8%] text-left'}\r\n    ]\r\n\r\n    // states\r\n    const [data, setData] = useState(suppliers)\r\n    const [searchedData, setSearchedData] = useState(searchedSuppliers)\r\n    const [supplierName, setSupplierName] = useState('')\r\n    const [currentSupplier, setCurrentSupplier] = useState('')\r\n    const [deletedSupplier, setDeletedSupplier] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [stickyForm, setStickyForm] = useState(false)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [searchByName, setSearchByName] = useState('')\r\n\r\n    // modal toggle\r\n    const toggleModal = () => setModalVisible(!modalVisible)\r\n\r\n    // handle change of inputs\r\n    const handleChangeSupplierName = (e) => {\r\n        setSupplierName(e.target.value)\r\n    }\r\n\r\n    // table edit and delete\r\n    const handleEditSupplier = (supplier) => {\r\n        setCurrentSupplier(supplier)\r\n        setSupplierName(supplier.name)\r\n        setStickyForm(true)\r\n    }\r\n    const handleDeleteSupplier = (supplier) => {\r\n        setDeletedSupplier(supplier)\r\n        toggleModal()\r\n    }\r\n    const handleClickApproveToDelete = () => {\r\n        const body = {\r\n            _id: deletedSupplier._id,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim()\r\n            }\r\n        }\r\n        dispatch(deleteSupplier(body))\r\n        handleClickCancelToDelete()\r\n    }\r\n    const handleClickCancelToDelete = () => {\r\n        setModalVisible(false)\r\n        setDeletedSupplier(null)\r\n    }\r\n\r\n    // handle submit of inputs\r\n    const addNewSupplier = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([{\r\n            value: supplierName,\r\n            message: t('Yetkazuvchi ismi')\r\n        }])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: supplierName,\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim()\r\n                }\r\n            }\r\n            dispatch(addSupplier(body))\r\n        }\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([{\r\n            value: supplierName,\r\n            message: t('Yetkazuvchi ismi')\r\n        }])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: supplierName,\r\n                _id: currentSupplier._id,\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim()\r\n                }\r\n            }\r\n            dispatch(updateSupplier(body))\r\n        }\r\n    }\r\n\r\n    const clearForm = (e) => {\r\n        e && e.preventDefault()\r\n        setSupplierName('')\r\n        setCurrentSupplier(null)\r\n        setStickyForm(false)\r\n        setDeletedSupplier(null)\r\n    }\r\n\r\n    // filter by total\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // handle change of search inputs\r\n    const filterByName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n        ;(searchedData.length > 0 || totalSearched > 0) &&\r\n        dispatch(clearSearchedSuppliers())\r\n        if (valForSearch === '') {\r\n            setData(suppliers)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredSuppliers = filter(suppliers, (supplier) => {\r\n                return supplier.name.toLowerCase().includes(valForSearch)\r\n            })\r\n            setData(filteredSuppliers)\r\n            setFilteredDataTotal(filteredSuppliers.length)\r\n        }\r\n    }\r\n    const filterByNameWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            const body = {\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim()\r\n                }\r\n            }\r\n            dispatch(getSuppliersByFilter(body))\r\n        }\r\n    }\r\n\r\n    // link to next page\r\n    const linkToSupplierReport = (id) => {\r\n        navigate(`/hamkorlar/yetkazuvchilar/${id}`)\r\n    }\r\n\r\n    // useEffects\r\n    useEffect(() => {\r\n        if (errorSuppliers) {\r\n            universalToast(errorSuppliers, 'error')\r\n            dispatch(clearErrorSuppliers())\r\n        }\r\n        if (successAddSupplier) {\r\n            successAddSupplierMessage()\r\n            dispatch(clearSuccessAddSupplier())\r\n            dispatch(getAllSuppliers())\r\n            clearForm()\r\n        }\r\n        if (successUpdateSupplier) {\r\n            successUpdateSupplierMessage()\r\n            dispatch(clearSuccessUpdateSupplier())\r\n            dispatch(getAllSuppliers())\r\n            setCurrentSupplier('')\r\n            setStickyForm(false)\r\n            clearForm()\r\n        }\r\n        if (successDeleteSupplier) {\r\n            dispatch(getAllSuppliers())\r\n            successDeleteSupplierMessage()\r\n            dispatch(clearSuccessDeleteSupplier())\r\n            clearForm()\r\n        }\r\n    }, [\r\n        dispatch,\r\n        errorSuppliers,\r\n        successAddSupplier,\r\n        successUpdateSupplier,\r\n        successDeleteSupplier\r\n    ])\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim()\r\n            }\r\n        }\r\n        dispatch(getSuppliers(body))\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, showByTotal, currentPage])\r\n\r\n    useEffect(() => {\r\n        setData(suppliers)\r\n    }, [suppliers])\r\n\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n\r\n    useEffect(() => {\r\n        setSearchedData(searchedSuppliers)\r\n    }, [searchedSuppliers])\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0}\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            <UniversalModal\r\n                headerText={`${deletedSupplier && deletedSupplier.name} ${t(\r\n                    'yetkazib beruvchini o`chirishni tasdiqlaysizmi?'\r\n                )}`}\r\n                title={t(\r\n                    'O`chirilgan yetkazib beruvchini tiklashning imkoni mavjud emas!'\r\n                )}\r\n                toggleModal={toggleModal}\r\n                body={'approve'}\r\n                approveFunction={handleClickApproveToDelete}\r\n                closeModal={handleClickCancelToDelete}\r\n                isOpen={modalVisible}\r\n            />\r\n            <form\r\n                className={`flex ps-[20px] gap-[1.25rem] lg:mt-0 mt-[40px] bg-background flex-col mainPadding transition ease-linear duration-200 ${\r\n                    stickyForm && 'stickyForm'\r\n                }`}\r\n            >\r\n                <div className='supplier-style'>\r\n                    <FieldContainer\r\n                        label={t('Yetkazuvchi ismi')}\r\n                        placeholder={''}\r\n                        maxWidth={'w-[41rem]'}\r\n                        type={'string'}\r\n                        value={supplierName}\r\n                        onChange={handleChangeSupplierName}\r\n                    />\r\n                    <div className={'flex gap-[1.25rem] grow w-[20.8125rem]'}>\r\n                        <Button\r\n                            add={!stickyForm}\r\n                            edit={stickyForm}\r\n                            text={\r\n                                stickyForm\r\n                                    ? t(`Saqlash`)\r\n                                    : t('Yangi yetkazuvchi qo`shish')\r\n                            }\r\n                            onClick={stickyForm ? handleEdit : addNewSupplier}\r\n                        />\r\n                        <Button onClick={clearForm} text={t('Tozalash')} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className='flex ps-[10px] items-center '>\r\n            <SelectForm  key={'total_1'}  onSelect={filterByTotal}/>\r\n            <SearchForm\r\n                filterByTotal={filterByTotal}\r\n                filterBy={['total', 'name']}\r\n                filterByName={filterByName}\r\n                searchByName={searchByName}\r\n                filterByCodeAndNameAndCategoryWhenPressEnter={\r\n                    filterByNameWhenPressEnter\r\n                }\r\n            />\r\n            </div>\r\n\r\n            <div className='lg:tableContainerPadding'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={t('Yetkazib beruvchilar mavjud emas')} />\r\n                ) : (\r\n                    !isMobile?\r\n                    <Table\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        page={'supplier'}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        headers={headers}\r\n                        Edit={handleEditSupplier}\r\n                        Delete={handleDeleteSupplier}\r\n                        linkToSupplierReport={linkToSupplierReport}\r\n                    />:\r\n                    <TableMobile\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        page={'supplier'}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        headers={headers}\r\n                        Edit={handleEditSupplier}\r\n                        Delete={handleDeleteSupplier}\r\n                        linkToSupplierReport={linkToSupplierReport}\r\n                    />\r\n                )}\r\n                \r\n            </div>\r\n            <div className='pagination-supplier flex justify-center [mb-30px] mt-[30px]'>\r\n                {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearched || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Supplier\r\n"],"names":["Supplier","isMobile","setIsMobile","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","t","useTranslation","dispatch","useDispatch","navigate","useNavigate","errorSuppliers","suppliers","successAddSupplier","successUpdateSupplier","successDeleteSupplier","loading","searchedSuppliers","total","totalSearched","useSelector","state","headers","title","styles","data","setData","searchedData","setSearchedData","supplierName","setSupplierName","currentSupplier","setCurrentSupplier","deletedSupplier","setDeletedSupplier","modalVisible","setModalVisible","stickyForm","setStickyForm","showByTotal","setShowByTotal","currentPage","setCurrentPage","filteredDataTotal","setFilteredDataTotal","searchByName","setSearchByName","toggleModal","handleEditSupplier","supplier","name","handleDeleteSupplier","handleClickCancelToDelete","clearForm","e","preventDefault","filterByTotal","_ref","value","linkToSupplierReport","id","universalToast","clearErrorSuppliers","successAddSupplierMessage","clearSuccessAddSupplier","getAllSuppliers","successUpdateSupplierMessage","clearSuccessUpdateSupplier","successDeleteSupplierMessage","clearSuccessDeleteSupplier","body","countPage","search","replace","trim","getSuppliers","_jsxs","motion","section","initial","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","children","_jsx","UniversalModal","headerText","approveFunction","handleClickApproveToDelete","_id","deleteSupplier","closeModal","isOpen","className","FieldContainer","label","placeholder","maxWidth","type","onChange","target","Button","add","edit","text","onClick","failed","message","checkEmptyString","warningEmptyInput","updateSupplier","addSupplier","SelectForm","onSelect","SearchForm","filterBy","filterByName","val","valForSearch","toLowerCase","length","clearSearchedSuppliers","filteredSuppliers","filter","includes","filterByCodeAndNameAndCategoryWhenPressEnter","key","getSuppliersByFilter","Spinner","NotFind","TableMobile","page","Edit","Delete","Table","Pagination","Number","totalDatas"],"sourceRoot":""}