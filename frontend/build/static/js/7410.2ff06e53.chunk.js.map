{"version":3,"file":"static/js/7410.2ff06e53.chunk.js","mappings":"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","sources":["Pages/Clients/Clients.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport FieldContainer from '../../Components/FieldContainer/FieldContainer'\r\nimport Button from '../../Components/Buttons/BtnAddRemove'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport Table from '../../Components/Table/Table'\r\nimport TableMobile from '../../Components/Table/TableMobile'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal.js'\r\nimport {motion} from 'framer-motion'\r\nimport {filter, map} from 'lodash'\r\nimport {\r\n    successAddClientMessage,\r\n    successDeleteClientMessage,\r\n    successUpdateClientMessage,\r\n    warningEmptyInput\r\n} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport {\r\n    addClients,\r\n    clearSearchedClients,\r\n    deleteClients,\r\n    getAllPackmans,\r\n    getClients,\r\n    getClientsByFilter,\r\n    updateClients\r\n} from './clientsSlice'\r\nimport {checkEmptyString} from '../../App/globalFunctions.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {VscChromeClose} from 'react-icons/vsc'\r\nimport {FaFilter} from 'react-icons/fa'\r\nimport SelectForm from '../../Components/Select/SelectForm.js'\r\n\r\nconst ClientsPage = () => {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n\r\n    const {packmans, clients, loading, searchedClients, total, totalSearched} =\r\n        useSelector((state) => state.clients)\r\n    \r\n    const { user } = useSelector((state) => state.login)\r\n\r\n    const headers =user.type === 'Director' ? [\r\n        {title: '№', styles: 'w-[8%] text-left'},\r\n        // {title: t('Agent'), styles: 'w-[41%] text-left'},\r\n        {title: t('Mijoz'), styles: 'w-[41%] text-left'},\r\n        {title: t('Savdo'), styles: 'w-[41%] text-left'},\r\n        {title: t('Sof foyda'), styles: 'w-[41%] text-left'},\r\n        {title: '', styles: 'w-[8%] text-left'}\r\n    ] : [\r\n        {title: '№', styles: 'w-[8%] text-left'},\r\n        // {title: t('Agent'), styles: 'w-[41%] text-left'},\r\n        {title: t('Mijoz'), styles: 'w-[41%] text-left'},\r\n        {title: t('Savdo'), styles: 'w-[41%] text-left'},\r\n        {title: '', styles: 'w-[8%] text-left'}\r\n    ]\r\n\r\n    const [startDate, setStartDate] = useState(\r\n        new Date(\r\n            new Date().getFullYear(),\r\n            new Date().getMonth(),\r\n            new Date().getDate()\r\n        )\r\n    )\r\n    const [endDate, setEndDate] = useState(\r\n        new Date(new Date().setHours(23, 59, 59, 0)).toISOString()\r\n    )\r\n\r\n    // states\r\n    const [packmanOptions, setPackmanOptions] = useState([])\r\n    const [data, setData] = useState([])\r\n    const [searchedData, setSearchedData] = useState([])\r\n    const [clientName, setClientName] = useState('')\r\n    const [packman, setPackman] = useState(null)\r\n    const [packmanId, setPackmanId] = useState(null)\r\n    const [currentClient, setCurrentClient] = useState('')\r\n    const [deletedCLients, setDeletedClients] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [stickyForm, setStickyForm] = useState(false)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [searchByName, setSearchByName] = useState('')\r\n    const [printedSelling, setPrintedSelling] = useState(null)\r\n    const [modalBody, setModalBody] = useState(null)\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    // modal toggle\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setTimeout(() => {\r\n            setDeletedClients(null)\r\n        }, 500)\r\n    }\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n\r\n    // handle change of input\r\n    const handleChangeClientName = (e) => {\r\n        setClientName(e.target.value)\r\n    }\r\n    // table edit and delete\r\n    const handleEditClients = (client) => {\r\n        setPackman(\r\n            client.packman\r\n                ? {label: client.packman.name, value: client.packman._id}\r\n                : ''\r\n        )\r\n        setClientName(client.name || '')\r\n        setCurrentClient(client)\r\n        setStickyForm(true)\r\n    }\r\n\r\n    const handleDeleteClient = (client) => {\r\n        setDeletedClients(client)\r\n        setModalBody('approve')\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const handlePrint = (sale) => {\r\n        setModalBody('allChecks')\r\n        setPrintedSelling(sale)\r\n        setModalVisible(true)\r\n    }\r\n    \r\n    const handleClickApproveToDelete = () => {\r\n        const body = {\r\n            name: deletedCLients.name,\r\n            _id: deletedCLients._id,\r\n            packman: deletedCLients.packman,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                client: searchByName.replace(/\\s+/g, ' ').trim()\r\n            }\r\n        }\r\n        dispatch(deleteClients(body)).then(({error}) => {\r\n            if (!error) {\r\n                clearForm()\r\n                successDeleteClientMessage()\r\n            }\r\n        })\r\n        toggleModal()\r\n    }\r\n    // handle submit of inputs\r\n    const addNewClients = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([\r\n            {\r\n                value: clientName,\r\n                message: t('Mijoz ismi')\r\n            }\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: clientName,\r\n                packman: (packman && packman.value) || null,\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    client: searchByName.replace(/\\s+/g, ' ').trim()\r\n                }\r\n            }\r\n            dispatch(addClients(body)).then(({error}) => {\r\n                if (!error) {\r\n                    clearForm()\r\n                    successAddClientMessage()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([\r\n            {\r\n                value: clientName,\r\n                message: t('Mijoz ismi')\r\n            }\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: clientName,\r\n                _id: currentClient._id,\r\n                packman: (packman && packman.value) || null,\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    client: searchByName.replace(/\\s+/g, ' ').trim()\r\n                }\r\n            }\r\n            dispatch(updateClients(body)).then(({error}) => {\r\n                if (!error) {\r\n                    clearForm()\r\n                    successUpdateClientMessage()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const clearForm = (e) => {\r\n        e && e.preventDefault()\r\n        setClientName('')\r\n        setPackman(null)\r\n        setStickyForm(false)\r\n    }\r\n\r\n    // filter by packman\r\n    const filterByPackman = ({value}) => {\r\n        setPackmanId(value)\r\n    }\r\n\r\n    // filter by total\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // handle change of search inputs\r\n    const filterByClientName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n        if (searchedData.length > 0 || totalSearched > 0)\r\n            dispatch(clearSearchedClients())\r\n        if (valForSearch === '') {\r\n            setData(clients)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredClients = filter(clients, (client) => {\r\n                return client.name.toLowerCase().includes(valForSearch)\r\n            })\r\n            setData(filteredClients)\r\n            setFilteredDataTotal(filteredClients.length)\r\n        }\r\n    }\r\n\r\n    const filterByNameWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            const body = {\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    client: searchByName.replace(/\\s+/g, ' ').trim()\r\n                }\r\n            }\r\n            dispatch(getClientsByFilter(body))\r\n        }\r\n    }\r\n\r\n    const handleChangeOptions = (e) => {\r\n        setPackman(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPackmans())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            // currentPage,\r\n            // countPage: showByTotal,\r\n            // startDate,\r\n            // endDate,\r\n            search: {\r\n                client: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                packman: packmanId\r\n            }\r\n        }\r\n        dispatch(getClients(body))\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, showByTotal, currentPage, startDate, endDate, packmanId])\r\n    useEffect(() => {\r\n        setData(clients)\r\n    }, [clients])\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n    useEffect(() => {\r\n        setSearchedData(searchedClients)\r\n    }, [searchedClients])\r\n    useEffect(() => {\r\n        const options = map(packmans, (packman) => {\r\n            return {label: packman.name, value: packman._id}\r\n        })\r\n        setPackmanOptions(options)\r\n    }, [packmans])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0}\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            <UniversalModal\r\n                headerText={`${deletedCLients && deletedCLients.name} ${t(\r\n                    'ismli mijozni o`chirishni tasdiqlaysizmi?'\r\n                )}`}\r\n                title={t('O`chirilgan mijozni tiklashning imkoni mavjud emas!')}\r\n                toggleModal={toggleModal}\r\n                body={modalBody}\r\n                approveFunction={handleClickApproveToDelete}\r\n                isOpen={modalVisible}\r\n                printedSelling={printedSelling}\r\n            />\r\n            <form\r\n                className={`flex ps-[20px] mt-[40px] gap-[1.25rem] bg-background flex-col mainPadding transition ease-linear duration-200 ${\r\n                    stickyForm && 'stickyForm'\r\n                }`}\r\n            >\r\n                <div className='supplier-style'>\r\n                    <FieldContainer\r\n                        value={packman}\r\n                        onChange={handleChangeOptions}\r\n                        label={t('Agentni tanlang')}\r\n                        placeholder={t('Dilso`z')}\r\n                        select={true}\r\n                        options={packmanOptions}\r\n                        maxWidth={'lg:w-[21rem] w-[90vw]'}\r\n                        border={true}\r\n                    />\r\n\r\n                    <FieldContainer\r\n                        value={clientName}\r\n                        label={t('Mijoz ismi')}\r\n                        placeholder={t('misol: Navro`z')}\r\n                        maxWidth={'lg:w-[21rem] w-[90vw]'}\r\n                        type={'string'}\r\n                        onChange={handleChangeClientName}\r\n                    />\r\n                    <div className={'flex gap-[1.25rem] grow w-[18.3125rem]'}>\r\n                        <Button\r\n                            add={!stickyForm}\r\n                            edit={stickyForm}\r\n                            text={\r\n                                stickyForm\r\n                                    ? t(`Saqlash`)\r\n                                    : t('Yangi agent qo`shish')\r\n                            }\r\n                            onClick={stickyForm ? handleEdit : addNewClients}\r\n                        />\r\n                        <Button onClick={clearForm} text={t('Tozalash')} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {isMobile && <div className='flex ps-[10px] pe-[20px] lg:justify-start gap-2 items-center justify-between mb-4'>\r\n                {/* <SelectForm key={'total_1'} onSelect={filterByTotal} /> */}\r\n                <button onClick={() => {\r\n                    setModalOpen(true)\r\n\r\n                }}\r\n                        className='d-block  hover:bg-blue-200  bg-blue-400   focus-visible:outline-none w-[150px] h-[40px] createElement '>\r\n                    <FaFilter /> {t('izlash')}</button>\r\n            </div>}\r\n            {\r\n                !isMobile ? \r\n                    <div className='mt-[10px] px-4 flex justify-center items-center'>\r\n                        <SearchForm\r\n                            filterBy={[\r\n                                // 'total',\r\n                                // 'startDate',\r\n                                // 'endDate',\r\n                                'clientName',\r\n                                'select'\r\n                            ]}\r\n                            filterByPackman={filterByPackman}\r\n                            // filterByTotal={filterByTotal}\r\n                            filterByClientNameWhenPressEnter={filterByNameWhenPressEnter}\r\n                            filterByDelivererNameWhenPressEnter={filterByNameWhenPressEnter}\r\n                            searchByClientName={searchByName}\r\n                            filterByClientName={filterByClientName}\r\n                            startDate={startDate}\r\n                            endDate={new Date(endDate)}\r\n                            setStartDate={setStartDate}\r\n                            setEndDate={setEndDate}\r\n                            searchByPackmans={[\r\n                                {\r\n                                    label: 'Barchasi',\r\n                                    value: null\r\n                                },\r\n                                ...packmanOptions\r\n                            ]}\r\n                        />\r\n                    </div> : modalOpen && <div\r\n                    className='absolute lg:p-[50px] w-[100vw]  h-[100vh]  flex justify-evenly flex-wrap    top-0\tleft-0 z-50 bg-[white]\t'>\r\n                    <VscChromeClose onClick={() => setModalOpen(false)}\r\n                                    className=' absolute right-[20px]  top-[20px]  text-4xl cursor-pointer' />\r\n                    <div className='mt-[10px] flex flex-wrap justify-center items-center'>\r\n                        <SearchForm\r\n                            filterBy={[\r\n                                // 'total',\r\n                                // 'startDate',\r\n                                // 'endDate',\r\n                                'clientName',\r\n                                'select'\r\n                            ]}\r\n                            filterByPackman={filterByPackman}\r\n                            // filterByTotal={filterByTotal}\r\n                            filterByClientNameWhenPressEnter={filterByNameWhenPressEnter}\r\n                            filterByDelivererNameWhenPressEnter={filterByNameWhenPressEnter}\r\n                            searchByClientName={searchByName}\r\n                            filterByClientName={filterByClientName}\r\n                            startDate={startDate}\r\n                            endDate={new Date(endDate)}\r\n                            setStartDate={setStartDate}\r\n                            setEndDate={setEndDate}\r\n                            searchByPackmans={[\r\n                                {\r\n                                    label: 'Barchasi',\r\n                                    value: null\r\n                                },\r\n                                ...packmanOptions\r\n                            ]}\r\n                        />\r\n                        <button onClick={() => {\r\n                            setModalOpen(false)\r\n\r\n                        }}\r\n                                className='d-block  hover:bg-blue-200  bg-blue-400   focus-visible:outline-none w-[150px] h-[40px] createElement '>\r\n                            <FaFilter /> {t('izlash')}</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n\r\n            <div className='lg:tableContainerPadding'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={t('Mijozlar mavjud emas')} />\r\n                ) : (\r\n                    !isMobile ?\r\n                        <Table\r\n                            data={searchedData.length > 0 ? searchedData : data}\r\n                            page={'client'}\r\n                            currentPage={currentPage}\r\n                            countPage={showByTotal}\r\n                            headers={headers}\r\n                            Edit={handleEditClients}\r\n                            Delete={handleDeleteClient}\r\n                            Print={handlePrint}\r\n                            type={user.type}\r\n                        /> :\r\n                        <TableMobile\r\n                            data={searchedData.length > 0 ? searchedData : data}\r\n                            page={'client'}\r\n                            currentPage={currentPage}\r\n                            countPage={showByTotal}\r\n                            headers={headers}\r\n                            Edit={handleEditClients}\r\n                            Delete={handleDeleteClient}\r\n                            Print={handlePrint}\r\n                            type={user.type}\r\n                        />\r\n                )}\r\n            </div>\r\n            {/* <div className='pagination-supplier flex justify-center mt-[30px] mb-[30px] '>\r\n                {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearched || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div> */}\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default ClientsPage\r\n"],"names":["ClientsPage","t","useTranslation","dispatch","useDispatch","packmans","clients","loading","searchedClients","total","totalSearched","useSelector","state","user","login","headers","type","title","styles","startDate","setStartDate","useState","Date","getFullYear","getMonth","getDate","endDate","setEndDate","setHours","toISOString","packmanOptions","setPackmanOptions","data","setData","searchedData","setSearchedData","clientName","setClientName","packman","setPackman","packmanId","setPackmanId","currentClient","setCurrentClient","deletedCLients","setDeletedClients","modalVisible","setModalVisible","stickyForm","setStickyForm","showByTotal","setShowByTotal","currentPage","setCurrentPage","filteredDataTotal","setFilteredDataTotal","searchByName","setSearchByName","printedSelling","setPrintedSelling","modalBody","setModalBody","modalOpen","setModalOpen","toggleModal","setTimeout","isMobile","setIsMobile","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","handleEditClients","client","label","name","value","_id","handleDeleteClient","handlePrint","sale","clearForm","e","preventDefault","filterByPackman","_ref4","filterByClientName","val","target","valForSearch","toLowerCase","replace","trim","length","clearSearchedClients","filteredClients","filter","includes","filterByNameWhenPressEnter","key","body","countPage","search","getClientsByFilter","getAllPackmans","getClients","options","map","_jsxs","motion","section","initial","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","children","_jsx","UniversalModal","headerText","approveFunction","handleClickApproveToDelete","deleteClients","then","_ref","error","successDeleteClientMessage","isOpen","className","FieldContainer","onChange","placeholder","select","maxWidth","border","Button","add","edit","text","onClick","failed","message","checkEmptyString","warningEmptyInput","updateClients","_ref3","successUpdateClientMessage","addClients","_ref2","successAddClientMessage","FaFilter","VscChromeClose","SearchForm","filterBy","filterByClientNameWhenPressEnter","filterByDelivererNameWhenPressEnter","searchByClientName","searchByPackmans","Spinner","NotFind","TableMobile","page","Edit","Delete","Print","Table"],"sourceRoot":""}