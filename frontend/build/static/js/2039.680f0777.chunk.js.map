{"version":3,"file":"static/js/2039.680f0777.chunk.js","mappings":"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","sources":["App/globalFunctions.js","Components/Buttons/TableBtn.js","Components/Checkbox/ProductCheckBox.js","Components/Inputs/TableInput.js","Components/RegularExpressions/RegularExpressions.js","Components/SelectTable/CustomStyle.js","Components/SelectTable/SelectTable.js","Components/Table/TableRows/ClientSaleTable.js","Components/Table/Table.js","Components/Table/TableFooters/RegisterSaleTableFooter.js","Components/Table/TableRows/AdminProductTableRow.js","Components/Table/TableRows/BarcodeTableRow.js","Components/Table/TableRows/CashierSaleTableRow.js","Components/Table/TableRows/CategoryReportTableRow.js","Components/Table/TableRows/CategoryTableRow.js","Components/Table/TableRows/ClientTableRow.js","Components/Table/TableRows/DailyReport.js","Components/Table/TableRows/DebtsTableRow.js","Components/Table/TableRows/DiscountTableRow.js","Components/Table/TableRows/ExchangenerateTableRow.js","Components/Table/TableRows/ExpensesTableRow.js","Components/Table/TableRows/FilialShopDataIdTablerow.js","Components/Table/TableRows/FilialShopTableRow.js","Components/Table/TableRows/GeneralReportTableRow.js","Components/Table/TableRows/IncomeTableRow.js","Components/Table/TableRows/IncomingOrderProductsTableRow.js","Components/Table/TableRows/IncomingsTableRow.js","Components/Table/TableIcons/StatusIcon.js","Components/Table/TableRows/InventoriesTableRow.js","Components/Table/TableRows/InventoryTableRow.js","Components/Table/TableRows/LabelsIncome.js","Components/Table/TableRows/MarketProductsTableRow.js","Components/Table/TableRows/OrderProductsTableRow.js","Components/Table/TableRows/PackmanTableRow.js","Components/Table/TableRows/PartnerProductsTableRow.js","Components/Table/TableRows/PaymentsTableRow.js","Components/Table/TableRows/ProductReportTableRow.js","Components/Table/TableRows/ProductTableRow.js","Components/Table/TableRows/ReceiveOrderProductsTableRow.js","Components/Table/TableRows/RegisterIncomingOrdersTableRow.js","Components/Table/TableRows/RegisterIncomingTableRow.js","Components/Table/TableRows/RegisterOrdersTableRow.js","Components/Table/TableRows/RegisterSaleTableRow.js","Components/Table/TableRows/ReturnProductsTableRow.js","Components/Table/TableRows/SaleReturnTableRow.js","Components/Table/TableRows/SalesListTableRow.js","Components/Table/TableRows/SavedOrdersTableRow.js","Components/Table/TableRows/SellerTableRow.js","Components/Table/TableRows/SupplierIncomingsTableRow.js","Components/Table/TableRows/SupplierTableRow.js","Components/Table/TableRows/TemporaryIncomingsTableRow.js","Components/Table/TableRows/TemporarySaleTableRow.js","Components/Table/TableRows/UnitTableRow.js","Components/Table/Thead.js"],"sourcesContent":["import {regexForEmptyString} from '../Components/RegularExpressions/RegularExpressions.js'\r\nimport {orderBy, reduce} from 'lodash'\r\nimport * as XLSX from 'xlsx'\r\n\r\nexport const universalSort = (data, setData, key, sort, prevData) => {\r\n    const keys = key.split('.')\r\n    const result = sort\r\n        ? orderBy(\r\n            [...data],\r\n            (item) => {\r\n                return keys.length === 3\r\n                    ? item[keys[0]][keys[1]][keys[2]]\r\n                    : keys.length === 2\r\n                        ? item[keys[0]][keys[1]]\r\n                        : item[key]\r\n            },\r\n            [sort === -1 ? 'desc' : 'asc']\r\n        )\r\n        : prevData\r\n    setData(result)\r\n}\r\nexport const UsdToUzs = (val, currency) => Math.round(val * currency)\r\n\r\nexport const UzsToUsd = (val, currency) =>\r\n    Math.round((val / currency) * 1000) / 1000\r\n\r\n// check empty string\r\nexport const checkEmptyString = (values) => {\r\n    let result = {failed: false, message: ''}\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (regexForEmptyString.test(values[i].value)) {\r\n            result = {\r\n                message: values[i].message,\r\n                failed: true\r\n            }\r\n            break\r\n        }\r\n    }\r\n    return result\r\n}\r\n// export excel\r\nexport const exportExcel = (data, fileName, headers) => {\r\n    const autoFillColumnWidth = (json) => {\r\n        const cols = Object.keys(json[0])\r\n        return cols.map((key, index) => {\r\n            let maxLength = Math.max(\r\n                ...json.map((x) => x[key].toString().length)\r\n            )\r\n            return {\r\n                wch:\r\n                    headers[index].length > maxLength\r\n                        ? headers[index].length + 1\r\n                        : maxLength + 4\r\n            }\r\n        })\r\n    }\r\n    const wscols = autoFillColumnWidth(data)\r\n    const wb = XLSX.utils.book_new()\r\n    const ws = XLSX.utils.json_to_sheet([])\r\n    ws['!cols'] = wscols\r\n    XLSX.utils.sheet_add_aoa(ws, [headers])\r\n    XLSX.utils.sheet_add_json(ws, data, {\r\n        origin: 'A2',\r\n        skipHeader: true\r\n    })\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Maxsulotlar')\r\n    XLSX.writeFile(wb, `${fileName}-${new Date().toLocaleDateString()}.xlsx`)\r\n}\r\n\r\n// round UZS||USD\r\nexport const roundUzs = (val) => Math.round(val * 1) / 1\r\n\r\nexport const roundUsd = (val) => Math.round(val * 1000) / 1000\r\n\r\n// reduce\r\nexport const reduceSumm = (arr, key) =>\r\n    reduce(arr, (prev, current) => prev + current[key], 0)\r\n\r\n// current Exchange\r\nexport const currentExchangerate = (uzs, usd) => roundUzs(uzs / usd)\r\n","import React from 'react'\r\nimport {\r\n    IoAdd,\r\n    IoCreateOutline,\r\n    IoDocument,\r\n    IoInformation,\r\n    IoPrint,\r\n    IoSave,\r\n    IoSwapHorizontal,\r\n    IoTrashOutline,\r\n} from 'react-icons/io5'\r\nimport {SiMicrosoftexcel} from 'react-icons/si'\r\nimport {FaMoneyBill} from 'react-icons/fa'\r\n\r\nconst TableBtn = ({type, onClick, bgcolor, isDisabled}) => {\r\n    const chooseIcon = () => {\r\n        switch (type) {\r\n            case 'delete':\r\n                return <IoTrashOutline color='white' size={14} />\r\n            case 'edit':\r\n                return <IoCreateOutline color='white' size={14} />\r\n            case 'print':\r\n                return <IoPrint color='white' size={14} />\r\n            case 'save':\r\n                return <IoSave color='white' size={14} />\r\n            case 'excel':\r\n                return <SiMicrosoftexcel color='white' size={14} />\r\n            case 'add':\r\n                return <IoAdd color='white' size={14} />\r\n            case 'return':\r\n                return <IoSwapHorizontal color='white' size={14} />\r\n            case 'pay':\r\n                return <FaMoneyBill color='white' size={14} />\r\n            case 'info':\r\n                return <IoInformation color='white' size={14} />\r\n            case 'report':\r\n                return <IoDocument color='white' size={14} />\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className={`lg:w-[24px] w-[50px] z- lg:h-[24px] h-[35px] flex justify-center items-center lg:rounded-full rounded-md ${bgcolor}`}\r\n            onClick={onClick}\r\n            disabled={isDisabled}\r\n        >\r\n            {chooseIcon()}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default TableBtn\r\n","import React from 'react'\r\n\r\nconst ProductCheckbox = ({value, onChange}) => {\r\n    return (\r\n        <div className={'checkbox-card sale-toggle-container'}>\r\n            <input\r\n                className={'cursor-pointer'}\r\n                type='checkbox'\r\n                checked={value}\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCheckbox\r\n","function TableInput({\r\n                        placeholder,\r\n                        type,\r\n                        value,\r\n                        onChange,\r\n                        label,\r\n                        disabled,\r\n                        onKeyUp\r\n                    }) {\r\n    return (\r\n        <div className={'w-full'}>\r\n            <label>\r\n                {label}\r\n                <input\r\n                    disabled={disabled}\r\n                    className='tableInput lg:h-[auto]  h-[30px]'\r\n                    placeholder={placeholder}\r\n                    type={type}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onKeyUp={onKeyUp}\r\n                    onWheel={(e) => e.target.blur()}\r\n                    min={0}\r\n                    \r\n                />\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableInput\r\n","export const regexForTypeNumber = /^\\d*\\.?\\d*$/\r\nexport const regexForEmptyString = /^\\s*$/","import React from 'react'\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} color={'#86A7E9'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\n\r\nconst DropdownIndicator = (styles, {isFocused}) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    paddingRight: '.625rem',\r\n    color: isFocused ? '#193F8A' : '#071F45',\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n})\r\nconst Option = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    padding: '5px 8px',\r\n    color: isDisabled ? '#DBDEDC' : '#071F45',\r\n    backgroundColor: '#fff',\r\n    '&:hover': {\r\n        backgroundColor: !isDisabled && '#EAEAEA',\r\n    },\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: !isDisabled && 'pointer',\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    color: '#1c1c1c',\r\n    fontSize: '.875rem',\r\n    lineHeight: '1.25rem',\r\n    fontWeight: '400',\r\n    margin: 0,\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n})\r\n\r\nconst Placeholder = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    margin: 0,\r\n    color: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#86A7E9',\r\n})\r\nconst Control = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    width: '100%',\r\n    height: '100%',\r\n    padding: '.3rem .58rem',\r\n    borderRadius: '.25rem',\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    color: '#86A7E9',\r\n    outline: 'none',\r\n    boxShadow: '0px 10px 10px rgba(0, 0, 0, 0.05)',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n        backgroundColor: '#EAEAEA',\r\n    },\r\n    '&:focus-within': {\r\n        outline: '4px solid #A9C0EF',\r\n        backgroundColor: '#ffffff',\r\n    },\r\n    backgroundColor: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#fff',\r\n    border: isDisabled ? 'none' : '1px solid #86A7E9',\r\n})\r\n\r\nconst inputStyles = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    display: 'flex',\r\n    lineHeight: '1.25rem',\r\n    margin: 0,\r\n})\r\n\r\nconst CustomStyle = {\r\n    container: (styles) => ({\r\n        ...styles,\r\n        width: '100%',\r\n    }),\r\n    control: Control,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    dropdownIndicator: DropdownIndicator,\r\n    placeholder: Placeholder,\r\n    input: inputStyles,\r\n}\r\n\r\nexport default CustomStyle\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from '../SelectTable/CustomStyle.js'\r\n\r\nconst SelectTable = ({\r\n    onSelect,\r\n    options,\r\n    isDisabled,\r\n    label,\r\n    placeholder,\r\n    value,\r\n    defaultValue,\r\n}) => {\r\n    return (\r\n        <div className='grow'>\r\n            {label && (\r\n                <label\r\n                    className={\r\n                        'text-blue-700 block leading-[1.125rem] mb-[.625rem]'\r\n                    }\r\n                >\r\n                    {label}\r\n                </label>\r\n            )}\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                value={value}\r\n                defaultValue={defaultValue}\r\n                options={options}\r\n                isDisabled={isDisabled}\r\n                placeholder={placeholder}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon,\r\n                }}\r\n                isSearchable={false}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectTable\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {useLocation, useNavigate} from 'react-router-dom'\r\nimport {t} from 'i18next'\r\n\r\nexport const ClientSaleTable = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    Print,\r\n    sellers,\r\n    addPlus,\r\n    editComment\r\n}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n\r\n    const result = (prev, usd, uzs) => {\r\n        return currency === 'USD' ? prev + usd : prev + uzs\r\n    }\r\n    const reduceEl = (arr, usd, uzs) => {\r\n        return arr.length > 0 && arr.reduce((prev, item) => {\r\n            return result(prev, item[usd], item[uzs])\r\n        }, 0) || 0\r\n    }\r\n    return (\r\n        <>\r\n            {map(data, (saleconnector, index) => (\r\n                !isMobile?<tr className='tr' key={uniqueId('sales')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td '>\r\n                        <div className='flex justify-between'>\r\n                            <span>\r\n                                {new Date(\r\n                                    saleconnector.createdAt\r\n                                ).toLocaleDateString()}\r\n                            </span>\r\n                            <span>\r\n                                {new Date(\r\n                                    saleconnector.createdAt\r\n                                ).toLocaleTimeString()}{' '}\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                    <td className='text-left td'>{saleconnector.id}</td>\r\n                    <td className='text-left td'>\r\n                            <div className='flex justify-between items-center'>\r\n                                <span> {saleconnector?.client?.name}</span>\r\n                            </div>\r\n                    </td>\r\n                    <td className='text-success-500 text-left td'>\r\n                        {reduceEl(\r\n                            saleconnector.products,\r\n                            'totalprice',\r\n                            'totalpriceuzs'\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-warning-500 text-left td'>\r\n                        {currency === 'UZS' ? saleconnector?.discount?.discountuzs : saleconnector?.discount?.discount}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-error-500 text-left td'>\r\n                    {currency === 'UZS' ? saleconnector?.debt?.debtuzs : saleconnector?.debt?.debt}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-[0.375rem] td border-r-0'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(saleconnector)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>:\r\n                <li onClick={() => Print(saleconnector)} className='text-sm w-[90vw] bg-[white] rounded-lg m-1 list-none'>\r\n                    <li className='border p-[10px] text-[black] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                        <p>{t('Mijoz')}:{' '}\r\n                        {saleconnector?.client?.name}\r\n                        </p>\r\n                        <p>\r\n                        <span >\r\n                                {new Date(\r\n                                    saleconnector.createdAt\r\n                                ).toLocaleDateString()}{' '}\r\n                            </span>\r\n                            <span>\r\n                                {new Date(\r\n                                    saleconnector.createdAt\r\n                                ).toLocaleTimeString()}{' '}\r\n                            </span>\r\n                        </p>\r\n                    </li>\r\n                    <li className='border p-[10px] text-[blue] text-sm flex items-center justify-between border-s-0 border-t-0 border-e-0'>\r\n                        \r\n                    <p className='text-[green]'>\r\n                    {t('Jami')}{' '}{reduceEl(\r\n                            saleconnector.products,\r\n                            'totalprice',\r\n                            'totalpriceuzs'\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </p>\r\n                    <p className='text-warning-500'>\r\n                    {t('Chegirma')}{`: `}\r\n                    {currency === 'UZS' ? saleconnector?.discount?.discountuzs : saleconnector?.discount?.discount}{' '}\r\n                        {currency}\r\n                    </p>\r\n                        \r\n                    </li>\r\n                    <li className=' p-[10px] text-[blue] text-sm flex items-center justify-between '>\r\n                        \r\n                    <p className='text-[red]'>\r\n                    {t('Qarz')}{' '}\r\n                    {currency === 'UZS' ? saleconnector?.debt?.debtuzs : saleconnector?.debt?.debt}{' '}\r\n                        {currency}\r\n                    </p>\r\n                    <p>\r\n                    </p>\r\n                        \r\n                    </li>\r\n                </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import { PackmanTableRow } from './TableRows/PackmanTableRow'\r\nimport { SellerTableRow } from './TableRows/SellerTableRow'\r\nimport { CategoryTableRow } from './TableRows/CategoryTableRow'\r\nimport { RegisterIncomingTableRow } from './TableRows/RegisterIncomingTableRow'\r\nimport { InventoriesTableRow } from './TableRows/InventoriesTableRow'\r\nimport { InventoryTableRow } from './TableRows/InventoryTableRow'\r\nimport { ProductReportTableRow } from './TableRows/ProductReportTableRow'\r\nimport { ProductTableRow } from './TableRows/ProductTableRow'\r\nimport { SupplierTableRow } from './TableRows/SupplierTableRow'\r\nimport { UnitTableRow } from './TableRows/UnitTableRow'\r\nimport Thead from './Thead'\r\nimport { IncomingsTableRow } from './TableRows/IncomingsTableRow'\r\nimport { RegisterSaleTableRow } from './TableRows/RegisterSaleTableRow'\r\nimport { TemporaryIncomingsTableRow } from './TableRows/TemporaryIncomingsTableRow'\r\nimport { TemporarySaleTableRow } from './TableRows/TemporarySaleTableRow'\r\nimport { SalesListTableRow } from './TableRows/SalesListTableRow'\r\nimport { ClientTableRow } from './TableRows/ClientTableRow'\r\nimport { ExchangenerateTableRow } from './TableRows/ExchangenerateTableRow'\r\nimport { SaleReturnTableRow } from './TableRows/SaleReturnTableRow'\r\nimport { CashierSaleTableRow } from './TableRows/CashierSaleTableRow'\r\nimport { PaymentsTableRow } from './TableRows/PaymentsTableRow'\r\nimport { IncomeTableRow } from './TableRows/IncomeTableRow'\r\nimport { DebtsTableRow } from './TableRows/DebtsTableRow'\r\nimport { DiscountTableRow } from './TableRows/DiscountTableRow'\r\nimport { ExpensesTableRow } from './TableRows/ExpensesTableRow'\r\nimport { BarcodeTableRow } from './TableRows/BarcodeTableRow.js'\r\nimport { AdminProductTableRow } from './TableRows/AdminProductTableRow'\r\nimport { ReturnProductsTableRow } from './TableRows/ReturnProductsTableRow.js'\r\nimport { GeneralReportTableRow } from './TableRows/GeneralReportTableRow.js'\r\nimport { RegisterSaleTableFooter } from './TableFooters/RegisterSaleTableFooter.js'\r\nimport { FilialShopTableRow } from './TableRows/FilialShopTableRow'\r\nimport DailyReport from './TableRows/DailyReport.js'\r\nimport SupplierIncomingsTableRow from './TableRows/SupplierIncomingsTableRow'\r\nimport { FilialShopDataIdTableRow } from './TableRows/FilialShopDataIdTablerow'\r\nimport { CategoryReportTableRow } from './TableRows/CategoryReportTableRow'\r\nimport { MarketProductsTableRow } from './TableRows/MarketProductsTableRow'\r\nimport { PartnerProductsTableRow } from './TableRows/PartnerProductsTableRow'\r\nimport { RegisterOrdersTableRow } from './TableRows/RegisterOrdersTableRow'\r\nimport { OrderProductsTableRow } from './TableRows/OrderProductsTableRow'\r\nimport { SavedOrdersTableRow } from './TableRows/SavedOrdersTableRow.js'\r\nimport { RegisterIncomingOrdersTableRow } from './TableRows/RegisterIncomingOrdersTableRow.js'\r\nimport { IncomingOrderProductsTableRow } from './TableRows/IncomingOrderProductsTableRow.js'\r\nimport { ReceiveOrderProductsTableRow } from './TableRows/ReceiveOrderProductsTableRow.js'\r\nimport { LabelsIncome } from './TableRows/LabelsIncome'\r\nimport { ClientSaleTable } from './TableRows/ClientSaleTable'\r\n\r\nfunction Table({\r\n    page,\r\n    data,\r\n    headers,\r\n    currentPage,\r\n    countPage,\r\n    Sort,\r\n    Edit,\r\n    Delete,\r\n    currency,\r\n    changeHandler,\r\n    Print,\r\n    inputValue,\r\n    inputDisabled,\r\n    Excel,\r\n    editedIncoming,\r\n    saveEditIncoming,\r\n    changeNumberHandler,\r\n    sortItem,\r\n    ReturnPayment,\r\n    Save,\r\n    onKeyUp,\r\n    currencyType,\r\n    type,\r\n    Pay,\r\n    isDisabled,\r\n    reports,\r\n    onClickTableRow,\r\n    linkToSellerReports,\r\n    sellers,\r\n    addPlus,\r\n    footer,\r\n    increment,\r\n    decrement,\r\n    lowUnitpriceProducts,\r\n    linkToSupplierReport,\r\n    printedData,\r\n    productminimumpage,\r\n    handleDelete,\r\n    wholeSale,\r\n    handleShowProduct,\r\n    updatePosition,\r\n    handleCountProduct,\r\n    handleUnitPrice,\r\n    selectedFilial,\r\n    editComment,\r\n    startDate,\r\n    endDate,\r\n    modalOpen,\r\n    totalDebt\r\n}) {\r\n    const checkRows = () => {\r\n        switch (page) {\r\n            case 'product':\r\n                return (\r\n                    <ProductTableRow\r\n                        currencyType={currencyType}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        currency={currency}\r\n                        productminimumpage={productminimumpage}\r\n                        modalOpen={modalOpen}\r\n                    />\r\n                )\r\n            case 'clientssales':\r\n                return (\r\n                    <ClientSaleTable\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Print={Print}\r\n                        ReturnPayment={ReturnPayment}\r\n                        sellers={sellers}\r\n                        addPlus={addPlus}\r\n                        editComment={editComment}\r\n                    />\r\n                )\r\n            case 'adminProduct':\r\n                return (\r\n                    <AdminProductTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        onClickTableRow={onClickTableRow}\r\n                        handleDelete={handleDelete}\r\n                    />\r\n                )\r\n            case 'category':\r\n                return (\r\n                    <CategoryTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        endDate={endDate}\r\n                        startDate={startDate}\r\n                    />\r\n                )\r\n            case 'unit':\r\n                return (\r\n                    <UnitTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                    />\r\n                )\r\n            case 'supplier':\r\n                return (\r\n                    <SupplierTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        linkToSupplierReport={linkToSupplierReport}\r\n                    />\r\n                )\r\n            case 'productreport':\r\n                return (\r\n                    <ProductReportTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        currency={currency}\r\n                        changeHandler={changeHandler}\r\n                        Print={Print}\r\n                        printedData={printedData}\r\n                    />\r\n                )\r\n            case 'labelsincome':\r\n                return (\r\n                    <LabelsIncome\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        currency={currency}\r\n                        changeHandler={changeHandler}\r\n                        Print={Print}\r\n                        printedData={printedData}\r\n                    />\r\n                )\r\n            case 'registerincoming':\r\n                return (\r\n                    <RegisterIncomingTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        changeHandler={changeHandler}\r\n                        Delete={Delete}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            case 'inventory':\r\n                return (\r\n                    <InventoryTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        changeHandler={changeHandler}\r\n                        inputDisabled={inputDisabled}\r\n                        Save={Save}\r\n                        onKeyUp={onKeyUp}\r\n                    />\r\n                )\r\n            case 'inventories':\r\n                return (\r\n                    <InventoriesTableRow\r\n                        isDisabled={isDisabled}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Excel={Excel}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'incomings':\r\n                return (\r\n                    <IncomingsTableRow\r\n                        Print={Print}\r\n                        printedData={printedData}\r\n                        changeNumberHandler={changeNumberHandler}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        changeHandler={changeHandler}\r\n                        editedIncoming={editedIncoming}\r\n                        saveEditIncoming={saveEditIncoming}\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        onKeyUp={onKeyUp}\r\n                    />\r\n                )\r\n            case 'registersale':\r\n                return (\r\n                    <RegisterSaleTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        Delete={Delete}\r\n                        changeHandler={changeHandler}\r\n                        decrement={decrement}\r\n                        increment={increment}\r\n                        lowUnitpriceProducts={lowUnitpriceProducts}\r\n                        wholeSale={wholeSale}\r\n                        selectedFilial={selectedFilial}\r\n                    />\r\n                )\r\n            case 'temporaryincoming':\r\n                return (\r\n                    <TemporaryIncomingsTableRow\r\n                        data={data}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        Print={Print}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            case 'temporarysale':\r\n                return (\r\n                    <TemporarySaleTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'saleslist':\r\n                return (\r\n                    <SalesListTableRow\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Print={Print}\r\n                        ReturnPayment={ReturnPayment}\r\n                        sellers={sellers}\r\n                        addPlus={addPlus}\r\n                        editComment={editComment}\r\n                    />\r\n                )\r\n            case 'client':\r\n                return (\r\n                    <ClientTableRow\r\n                        data={data}\r\n                        type={type}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'packman':\r\n                return (\r\n                    <PackmanTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                    />\r\n                )\r\n            case 'seller':\r\n                return (\r\n                    <SellerTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        linkToSellerReports={linkToSellerReports}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            case 'exchange':\r\n                return (\r\n                    <ExchangenerateTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                    />\r\n                )\r\n            case 'backproduct':\r\n                return (\r\n                    <SaleReturnTableRow\r\n                        onKeyUp={onKeyUp}\r\n                        changeHandler={changeHandler}\r\n                        inputValue={inputValue}\r\n                        currency={currency}\r\n                        data={data}\r\n                    />\r\n                )\r\n            case 'sale':\r\n                return (\r\n                    <CashierSaleTableRow\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        data={data}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'payments':\r\n                return (\r\n                    <PaymentsTableRow\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        data={data}\r\n                        type={type}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'card':\r\n                return (\r\n                    <PaymentsTableRow\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        data={data}\r\n                        type={type}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentsTableRow\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        data={data}\r\n                        type={type}\r\n                    />\r\n                )\r\n            case 'income':\r\n                return (\r\n                    <IncomeTableRow\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        data={data}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'debts':\r\n                return (\r\n                    <DebtsTableRow\r\n                        data={data}\r\n                        currency={currency}\r\n                        Pay={Pay}\r\n                        Print={Print}\r\n                        Edit={Edit}\r\n                        totalDebt={totalDebt}\r\n                    />\r\n                )\r\n            case 'discounts':\r\n                return (\r\n                    <DiscountTableRow\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                    />\r\n                )\r\n            case 'expenses':\r\n                return (\r\n                    <ExpensesTableRow\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Delete={Delete}\r\n                        reports={reports}\r\n                    />\r\n                )\r\n            case 'barcode':\r\n                return (\r\n                    <BarcodeTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                    />\r\n                )\r\n            case 'backproducts':\r\n                return (\r\n                    <ReturnProductsTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'filialShop':\r\n                return (\r\n                    <FilialShopTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            case 'filialShopDataId':\r\n                return (\r\n                    <FilialShopDataIdTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            case 'generalreport':\r\n                return <GeneralReportTableRow data={data} currency={currency} />\r\n            case 'dailyreport':\r\n                return <DailyReport data={data} />\r\n            case 'incomingsupplier':\r\n                return (\r\n                    <SupplierIncomingsTableRow\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Pay={Pay}\r\n                    />\r\n                )\r\n            case 'categoryreport':\r\n                return <CategoryReportTableRow data={data} />\r\n            case 'marketProducts':\r\n                return (\r\n                    <MarketProductsTableRow\r\n                        handleShowProduct={handleShowProduct}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                    />\r\n                )\r\n            case 'partnerProducts':\r\n                return (\r\n                    <PartnerProductsTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                    />\r\n                )\r\n            case 'registerOrder':\r\n                return (\r\n                    <RegisterOrdersTableRow\r\n                        currency={currency}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'registerIncomingOrder':\r\n                return (\r\n                    <RegisterIncomingOrdersTableRow\r\n                        currency={currency}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Print={Print}\r\n                        updatePosition={updatePosition}\r\n                    />\r\n                )\r\n            case 'orderProducts':\r\n                return (\r\n                    <OrderProductsTableRow\r\n                        increment={increment}\r\n                        decrement={decrement}\r\n                        currency={currency}\r\n                        data={data}\r\n                        handleDelete={handleDelete}\r\n                        handleCountProduct={handleCountProduct}\r\n                    />\r\n                )\r\n            case 'receiveOrderProducts':\r\n                return (\r\n                    <ReceiveOrderProductsTableRow\r\n                        increment={increment}\r\n                        decrement={decrement}\r\n                        currency={currency}\r\n                        data={data}\r\n                        handleCountProduct={handleCountProduct}\r\n                    />\r\n                )\r\n            case 'incomingOrderSendProduct':\r\n                return (\r\n                    <IncomingOrderProductsTableRow\r\n                        data={data}\r\n                        increment={increment}\r\n                        decrement={decrement}\r\n                        currency={currency}\r\n                        handleDelete={handleDelete}\r\n                        handleCountProduct={handleCountProduct}\r\n                        handleUnitPrice={handleUnitPrice}\r\n                    />\r\n                )\r\n            case 'savedOrders':\r\n                return (\r\n                    <SavedOrdersTableRow\r\n                        Delete={Delete}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        handlePrint={Print}\r\n                    />\r\n                )\r\n            default:\r\n                return (\r\n                    <tr>\r\n                        <td colSpan={7} className='text-black-500 py-2 pl-4'>\r\n                            Ushbu nomdagi javval mavjud emas\r\n                        </td>\r\n                    </tr>\r\n                )\r\n        }\r\n    }\r\n\r\n    const checkFooters = () => {\r\n        switch (footer) {\r\n            case 'registersale':\r\n                return (\r\n                    <RegisterSaleTableFooter\r\n                        saleproducts={data}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n    return (\r\n        <table id='excel-tabel' className='overflow-x-auto lg:w-full  ms-3 me-3 mt-2  pb-[1.25rem]  max-h-[35rem] mb-[1rem]'>\r\n            <thead className='rounded-t-lg sticky top-0'>\r\n                <Thead headers={headers} Sort={Sort} sortItem={sortItem} />\r\n            </thead>\r\n            <tbody>{checkRows()}</tbody>\r\n            {footer && <tfoot>{checkFooters()}</tfoot>}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport { reduce } from 'lodash'\r\nimport { t } from 'i18next'\r\n\r\nexport const RegisterSaleTableFooter = ({ saleproducts, currency }) => {\r\n\r\n    const totalprice = reduce(\r\n        saleproducts,\r\n        (summ, product) => summ + product.totalprice,\r\n        0\r\n    )\r\n\r\n    const totalpriceuzs = reduce(\r\n        saleproducts,\r\n        (summ, product) => summ + product.totalpriceuzs,\r\n        0\r\n    )\r\n    return (\r\n        <tr className='mb-100'>\r\n            <th colSpan={5} className='text-right py-2'>\r\n                {t('Jami')}:\r\n            </th>\r\n            <th colSpan={2}>\r\n                {currency === 'UZS'\r\n                    ? totalpriceuzs.toLocaleString('ru-RU')\r\n                    : totalprice.toLocaleString('ru-RU')}{' '}\r\n                {currency}\r\n            </th>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const AdminProductTableRow = ({\r\n    currentPage,\r\n    countPage,\r\n    data,\r\n    Edit,\r\n    onClickTableRow,\r\n    handleDelete,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (market, index) => (\r\n                <tr\r\n                    key={market._id}\r\n                    className='tr cursor-pointer'\r\n                    onClick={() => onClickTableRow(market)}\r\n                >\r\n                    <td className='td text-left'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center p-[0.625rem_0.875rem]'>\r\n                        <div\r\n                            className={\r\n                                'w-[2.5rem] h-[2.5rem] mx-auto rounded-full border-[2px] border-primary-700 flex items-center justify-center p-[2px]'\r\n                            }\r\n                        >\r\n                            {market?.image ? (\r\n                                <img\r\n                                    src={market.image}\r\n                                    alt={market.name}\r\n                                    className={'rounded-full'}\r\n                                />\r\n                            ) : (\r\n                                `${market?.name[0].toUpperCase()}`\r\n                            )}\r\n                        </div>\r\n                    </td>\r\n                    <td className='td text-left'>{market?.name}</td>\r\n                    <td className='td text-left'>\r\n                        {market?.director?.firstname}{' '}\r\n                        {market?.director?.lastname}\r\n                    </td>\r\n                    <td className='td text-right'>{market?.phone1}</td>\r\n                    <td className='td text-right'>{new Date(market?.createdAt).toLocaleDateString()}</td>\r\n                    <td className='td text-center'>\r\n                        {market?.mainmarket ? (\r\n                            <div className='w-[24px] h-[24px] mx-auto bg-[#F79009] rounded-[50%]'></div>\r\n                        ) : (\r\n                            <div className='w-[24px] h-[24px] mx-auto bg-[#12B76A] rounded-[50%]'></div>\r\n                        )}\r\n                    </td>\r\n                    <td className='td '>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    Edit(market)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                    <td className='td border-r-0'>\r\n                        <TableBtn\r\n                            type={'delete'}\r\n                            bgcolor='bg-error-500 ml-2.5'\r\n                            onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                handleDelete(market)\r\n                            }}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map, uniqueId} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn.js'\r\n\r\nexport const BarcodeTableRow = (\r\n    {\r\n        data,\r\n        currentPage,\r\n        countPage,\r\n        Edit,\r\n        Delete\r\n    }) => {\r\n    return (<>\r\n        {\r\n            map(data,(item, index) =>\r\n                <tr className='tr' key={uniqueId('sales')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td'>{item.barcode}</td>\r\n                    <td className='td'>{item.name}</td>\r\n                    <td className='td border-r-0 text-center max-w-[50px] py-[0.375rem]'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(item)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor='bg-error-500 ml-2.5'\r\n                                onClick={() => Delete(item)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n    </>)\r\n}","import {map, uniqueId} from 'lodash'\r\nimport React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\n\r\nexport const CashierSaleTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    Print,\r\n}) => {\r\n    const calculateTotalPrice = (datas, property) => {\r\n        return datas.reduce((summ, data) => summ + data[property], 0)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (saleconnector, index) => (\r\n                <tr className='tr' key={uniqueId('sales')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {new Date(saleconnector.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {saleconnector.saleconnector.id}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {saleconnector?.client?.name}\r\n                    </td>\r\n                    <td className='text-left td py-[0.625rem] font-medium'>\r\n                        {(currency === 'USD'\r\n                            ? calculateTotalPrice(\r\n                                  saleconnector.products,\r\n                                  'totalprice'\r\n                              )\r\n                            : calculateTotalPrice(\r\n                                  saleconnector.products,\r\n                                  'totalpriceuzs'\r\n                              )\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td font-medium'>\r\n                        {(currency === 'USD'\r\n                            ? Number(saleconnector?.payment?.cash || 0)\r\n                            : Number(saleconnector?.payment?.cashuzs || 0)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        <span className='text-primary-800'>{currency}</span>\r\n                    </td>\r\n                    <td className='text-left td font-medium'>\r\n                        {(currency === 'USD'\r\n                            ? Number(saleconnector?.payment?.card || 0)\r\n                            : Number(saleconnector?.payment?.carduzs || 0)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        <span className='text-success-500'>{currency}</span>\r\n                    </td>\r\n                    <td className='text-left td font-medium'>\r\n                        {(currency === 'USD'\r\n                            ? Number(saleconnector?.payment?.transfer || 0)\r\n                            : Number(saleconnector?.payment?.transferuzs || 0)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        <span className='text-warning-500'>{currency}</span>\r\n                    </td>\r\n                    <td className='td border-r-0'>\r\n                        <div className='flex justify-center'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(saleconnector)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport {useSelector} from 'react-redux'\r\n\r\nexport const CategoryReportTableRow = ({ data }) => {\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr key={product._id} className='tr'>\r\n                    <td className='td text-center p-2'>\r\n                        {index + 1}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product.productdata.code}\r\n                    </td>\r\n                    <td className='td text-left'>{product.productdata.name}</td>\r\n                    <td className='td text-right'>\r\n                        {product.total.toLocaleString('ru-RU')}{' '}\r\n                        {product.unit && product.unit.name}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product.price && currencyType === 'USD' ? product.price.incomingprice.toLocaleString(\r\n                            'ru-RU'\r\n                        ) : product.price.incomingpriceuzs.toLocaleString(\r\n                            'ru-RU'\r\n                        )} {currencyType}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product.price && currencyType === 'USD' ? product.price.sellingprice.toLocaleString(\r\n                            'ru-RU'\r\n                        ) : product.price.sellingpriceuzs.toLocaleString(\r\n                            'ru-RU'\r\n                        )} {currencyType}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product?.totalsaleproducts.toLocaleString(\r\n                            'ru-RU'\r\n                        )}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currencyType === 'USD' ? product?.totalsales.toLocaleString(\r\n                            'ru-RU'\r\n                        ) : product?.totalsalesuzs.toLocaleString(\r\n                            'ru-RU'\r\n                        )} {currencyType}\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport {roundUsd, roundUzs} from '../../../App/globalFunctions'\r\n\r\nexport const CategoryTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    Edit,\r\n    Delete,\r\n    startDate, \r\n    endDate\r\n}) => {\r\n    const navigate = useNavigate()\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    return (\r\n        <>\r\n            {map(data, (category, index) => (\r\n                <tr key={category._id} className='tr'>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td'>{category.code}</td>\r\n                    <td className='td'>{category.name}</td>\r\n                    <td className='td'>{category?.totalproducts}</td>\r\n                    <td className='td'>{currencyType === 'USD' ? roundUsd(category?.totalsales).toLocaleString('ru-RU') : roundUzs(category?.totalsalesuzs).toLocaleString('ru-RU')} {currencyType}</td>\r\n                    <td className='td'>{currencyType === 'USD' ? roundUsd(category?.profit).toLocaleString('ru-RU') : roundUzs(category?.profituzs).toLocaleString('ru-RU')} {currencyType}</td>\r\n                    <td className='td border-r-0 text-center max-w-[50px] py-[0.375rem]'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'report'}\r\n                                bgcolor='bg-primary-800 mr-2.5'\r\n                                onClick={() => navigate(category.code, {\r\n                                    state: {\r\n                                        id: category._id,\r\n                                        name: category.name,\r\n                                        startDate,\r\n                                        endDate\r\n                                    }\r\n                                })}\r\n                            />\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(category)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor='bg-error-500 ml-2.5'\r\n                                onClick={() => Delete(category)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport { map } from 'lodash'\r\nimport { universalToast } from '../../ToastMessages/ToastMessages'\r\nimport { roundUsd, roundUzs } from '../../../App/globalFunctions'\r\nimport { useSelector } from 'react-redux'\r\nimport { t } from 'i18next'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport const ClientTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    Edit,\r\n    Delete,\r\n    Print,\r\n    type\r\n}) => {\r\n \r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n\r\n    const navigate = useNavigate()\r\n    const linkToSale = (name) => {\r\n        navigate(`/hamkorlar/mijoz`, {\r\n            replace: true,\r\n            state: name,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (client, index) => (\r\n                !isMobile ? <tr className='tr' key={client._id}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + index + 1}\r\n                    </td>\r\n                    <td className='text-left td'>{client.name}</td>\r\n                    <td className='text-left td'>\r\n                        {currencyType === 'USD'\r\n                            ? (client?.saleconnector?.totalsales &&\r\n                                roundUsd(\r\n                                    client?.saleconnector?.totalsales\r\n                                ).toLocaleString('ru-RU')) ||\r\n                            0\r\n                            : (client?.saleconnector?.totalsalesuzs &&\r\n                                roundUzs(\r\n                                    client?.saleconnector?.totalsalesuzs\r\n                                ).toLocaleString('ru-RU')) ||\r\n                            0}{' '}\r\n                        {currencyType}\r\n                    </td>\r\n                    {type === 'Director' && <td className='text-left td'>\r\n                        {currencyType === 'USD'\r\n                            ? (client?.saleconnector?.profit &&\r\n                                roundUsd(\r\n                                    client?.saleconnector?.profit\r\n                                ).toLocaleString('ru-RU')) ||\r\n                            0\r\n                            : (client?.saleconnector?.profituzs &&\r\n                                roundUzs(\r\n                                    client?.saleconnector?.profituzs\r\n                                ).toLocaleString('ru-RU')) ||\r\n                            0}{' '}\r\n                        {currencyType}\r\n                    </td>}\r\n                    <td className='border-r-0 td py-[0.375rem]'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => {\r\n                                    if (client.saleconnector) {\r\n                                        Print(client?.saleconnector)\r\n                                    } else {\r\n                                        universalToast(\r\n                                            'Mijozda sotuv bulmagan!',\r\n                                            'warning'\r\n                                        )\r\n                                    }\r\n                                }}\r\n                            />\r\n                            <TableBtn\r\n                                type={'info'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => linkToSale(client._id)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500'}\r\n                                onClick={() => Edit(client)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(client)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr> :\r\n                    <li onClick={() => {\r\n                        if (client.saleconnector) {\r\n                            Print(client?.saleconnector)\r\n                        } else {\r\n                            universalToast(\r\n                                'Mijozda sotuv bulmagan!',\r\n                                'warning'\r\n                            )\r\n                        }\r\n                    }} className='text-sm w-[90vw]   bg-[white] rounded-lg m-2 list-none'>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-lg'>{client.name}</p>\r\n                        </li>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p >\r\n                                {t('Savdo')}{': '}\r\n                                {currencyType === 'USD'\r\n                                    ? (client?.saleconnector?.totalsales &&\r\n                                        roundUsd(\r\n                                            client?.saleconnector?.totalsales\r\n                                        ).toLocaleString('ru-RU')) ||\r\n                                    0\r\n                                    : (client?.saleconnector?.totalsalesuzs &&\r\n                                        roundUzs(\r\n                                            client?.saleconnector?.totalsalesuzs\r\n                                        ).toLocaleString('ru-RU')) ||\r\n                                    0}{' '}\r\n                                {currencyType}\r\n                            </p>\r\n                        </li>\r\n                        {type === 'Director' && <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p >\r\n                                {t('Sof foyda')}{': '}\r\n                                {currencyType === 'USD'\r\n                                    ? (client?.saleconnector?.profit &&\r\n                                        roundUsd(\r\n                                            client?.saleconnector?.profit\r\n                                        ).toLocaleString('ru-RU')) ||\r\n                                    0\r\n                                    : (client?.saleconnector?.profituzs &&\r\n                                        roundUzs(\r\n                                            client?.saleconnector?.profituzs\r\n                                        ).toLocaleString('ru-RU')) ||\r\n                                    0}{' '}\r\n                                {currencyType}\r\n                            </p>\r\n                        </li>}\r\n                        <li className='flex justify-center p-[10px] '>\r\n                            <p >\r\n                                <div className='flex items-center justify-center gap-[0.625rem]'>\r\n\r\n\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-warning-500 w-[35vw]'}\r\n                                        onClick={() => linkToSale(client.name)}\r\n                                    />\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-warning-500 w-[35vw]'}\r\n                                        onClick={() => Edit(client)}\r\n                                    />\r\n\r\n\r\n                                    <TableBtn\r\n                                        type={'delete'}\r\n                                        bgcolor={'bg-error-500 w-[35vw]'}\r\n                                        onClick={() => Delete(client)}\r\n                                    />\r\n\r\n                                </div>\r\n                            </p>\r\n                        </li>\r\n                    </li>\r\n            ))}\r\n            <tr className='tr'>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'></td>\r\n                <td className='text-left td font-bold'>\r\n                    {currencyType === 'USD'\r\n                        ? roundUsd([...data].reduce((prev, el) => prev + (el.saleconnector?.totalsales || 0), 0)).toLocaleString('ru-RU')\r\n                        : roundUzs([...data].reduce((prev, el) => prev + (el.saleconnector?.totalsalesuzs || 0), 0)).toLocaleString('ru-RU')}{' '}\r\n                    {currencyType}\r\n                </td>\r\n                {type === 'Director' && <td className=' td py-[0.375rem] font-bold'>\r\n                    {currencyType === 'USD'\r\n                        ? roundUsd([...data].reduce((prev, el) => prev + (el.saleconnector?.profit || 0), 0)).toLocaleString('ru-RU')\r\n                        : roundUzs([...data].reduce((prev, el) => prev + (el.saleconnector?.profituzs || 0), 0)).toLocaleString('ru-RU')}{' '}\r\n                    {currencyType}\r\n                </td>}\r\n                <td className='border-r-0 td py-[0.375rem]'>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {useSelector} from 'react-redux'\r\n\r\nfunction DailyReport({data}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    return (\r\n        <>\r\n            {map(data, (dailyReport, index) => {\r\n                const {\r\n                    product: {\r\n                        productdata: {name, code},\r\n                        unit,\r\n                    },\r\n                    pieces,\r\n                    createdAt,\r\n                    unitprice,\r\n                    unitpriceuzs,\r\n                    totalprice,\r\n                    totalpriceuzs,\r\n                    user: {firstname, lastname},\r\n                } = dailyReport\r\n                return (\r\n                    <tr className='tr' key={uniqueId('daily-report-row')}>\r\n                        <td className='text-left td py-[0.375rem]'>\r\n                            {index + 1}\r\n                        </td>\r\n                        <td className='td'>\r\n                            <span className={'flex justify-between w-full'}>\r\n                                <p>\r\n                                    {' '}\r\n                                    {new Date(createdAt).toLocaleDateString(\r\n                                        'ru-RU'\r\n                                    )}{' '}\r\n                                </p>\r\n                                <p>\r\n                                    {new Date(createdAt).toLocaleTimeString(\r\n                                        'ru-RU',\r\n                                        {\r\n                                            hour: '2-digit',\r\n                                            minute: '2-digit',\r\n                                            hourCycle: 'h24',\r\n                                        }\r\n                                    )}\r\n                                </p>\r\n                            </span>\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {dailyReport.saleconnector?.client?.name ||\r\n                                dailyReport.saleconnector?.id}\r\n                        </td>\r\n                        <td className='td text-right'>{code}</td>\r\n                        <td className='td'>{name}</td>\r\n                        <td className='text-left td'>\r\n                            {dailyReport?.previous || ''}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {pieces + ' ' + unit.name || ''}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {dailyReport?.next ? dailyReport.next : ''}\r\n                        </td>\r\n                        <td className='text-left td font-medium'>\r\n                            {currencyType === 'UZS'\r\n                                ? unitpriceuzs.toLocaleString('ru-RU')\r\n                                : unitprice.toLocaleString('ru-RU')}\r\n                        </td>\r\n                        <td className='text-left td font-medium'>\r\n                            {currencyType === 'UZS'\r\n                                ? totalpriceuzs.toLocaleString('ru-RU')\r\n                                : totalprice.toLocaleString('ru-RU')}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {lastname[0] + '. ' + firstname}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DailyReport\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {t} from 'i18next'\r\n\r\nexport const DebtsTableRow = ({data, currency, Pay, Print, Edit, totalDebt}) => {\r\n    const [isEditComment, setIsEditComment] = useState(null)\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            {map(data, (debt, index) => (\r\n                !isMobile ? <tr className='tr' key={uniqueId('debt')}>\r\n                        <td className='text-left td'>{1 + index}</td>\r\n                        <td className='text-left td'>\r\n                            {new Date(debt.createdAt).toLocaleDateString()}\r\n                        </td>\r\n                        <td className='text-left td'>{debt.id}</td>\r\n                        <td className='text-left td'>\r\n                            {debt.client && debt.client.name}\r\n                        </td>\r\n                        <td\r\n                            onMouseOver={() => setIsEditComment(debt._id)}\r\n                            onMouseOut={() => setIsEditComment(null)}\r\n                            className={`text-left td relative hover:bg-black-200 transition duration-300 ease-in-out`}\r\n                        >\r\n                            {debt.comment}\r\n                            {isEditComment === debt._id && (\r\n                                <span className='absolute top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%]'>\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() =>\r\n                                        Edit(debt.comment, debt.debtid)\r\n                                    }\r\n                                />\r\n                            </span>\r\n                            )}\r\n                        </td>\r\n                        <td className='text-left td font-medium'>\r\n                            {(currency === 'USD'\r\n                                    ? debt.totalprice\r\n                                    : debt.totalpriceuzs\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-warning-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-medium'>\r\n                            {currency === 'UZS'\r\n                                ? (Math.round(debt.debtuzs * 1) / 1).toLocaleString(\r\n                                    'ru-RU'\r\n                                )\r\n                                : (\r\n                                    Math.round(debt.debt * 1000) / 1000\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-error-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='td border-r-0 py-[6px]'>\r\n                            <div className='flex justify-center items-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-primary-800'}\r\n                                    onClick={() => Print(debt.saleconnector)}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'pay'}\r\n                                    bgcolor={'bg-success-500'}\r\n                                    onClick={() => Pay(debt)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr> :\r\n                    <li key={uniqueId('debt')} className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p>{1 + index}- {new Date(debt.createdAt).toLocaleDateString()}</p>\r\n                            <p className='text-[blue]'>{t('ID')}: {debt.id}</p>\r\n                        </li>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{t('Mijoz')}: </span> {debt.client && debt.client.name}</p>\r\n\r\n                        </li>\r\n                        <li className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'>\r\n                            <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n\r\n                                <p onMouseOver={() => setIsEditComment(debt._id)}\r\n                                   onMouseOut={() => setIsEditComment(null)}\r\n                                   className={`text-left  relative hover:bg-black-200  transition duration-300 ease-in-out`}>{t('Qarz izoh')}:\r\n                                    {debt.comment}\r\n                                    {isEditComment === debt._id && (\r\n                                        <span\r\n                                            className='absolute top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%]'>\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500 w-[50px]'}\r\n                                    onClick={() =>\r\n                                        Edit(debt.comment, debt.debtid)\r\n                                    }\r\n                                />\r\n                            </span>\r\n                                    )}\r\n                                </p>\r\n                            </li>\r\n\r\n                        </li>\r\n\r\n\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{t('Jami')}: </span>\r\n                                {(currency === 'USD'\r\n                                        ? debt.totalprice\r\n                                        : debt.totalpriceuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span className='text-warning-500'>{currency}</span></p>\r\n                            <p className='text-[blue]'>{t('Qarz')}: {currency === 'UZS'\r\n                                ? (Math.round(debt.debtuzs * 1) / 1).toLocaleString(\r\n                                    'ru-RU'\r\n                                )\r\n                                : (\r\n                                    Math.round(debt.debt * 1000) / 1000\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span className='text-error-500'>{currency}</span></p>\r\n                        </li>\r\n                        <li className='flex justify-end p-[10px] '>\r\n                            <div className='flex w-[100%] justify-end items-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-primary-800'}\r\n                                    onClick={() => Print(debt.saleconnector)}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'pay'}\r\n                                    bgcolor={'bg-success-500'}\r\n                                    onClick={() => Pay(debt)}\r\n                                />\r\n                            </div>\r\n                        </li>\r\n                    </li>\r\n            ))}\r\n            <tr className='tr bg-transparent'>\r\n                <td className='text-left td border-none bg-none' colSpan={6}></td>\r\n                <td className='text-left td py-[0.625rem] font-medium border-none bg-none' colSpan={2}>\r\n                    {currency === 'UZS'\r\n                        ? (Math.round(data.reduce((prev, debt) => prev + debt.debtuzs, 0) * 1) / 1).toLocaleString(\r\n                            'ru-RU'\r\n                        )\r\n                        : (\r\n                            Math.round(data.reduce((prev, debt) => prev + debt.debt, 0) * 1000) / 1000\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                    <span className='text-error-500'>{currency}</span>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {t} from 'i18next'\r\n\r\nexport const DiscountTableRow = ({data, currentPage, countPage, currency}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            {map(data, (discount, index) => (\r\n                !isMobile ? <tr className='tr' key={uniqueId('discount')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + 1 + index}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {new Date(discount.createdAt).toLocaleDateString()}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {discount.saleconnector.id}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {discount.client && discount.client.name}\r\n                        </td>\r\n                        <td className='text-left td font-medium'>\r\n                            {currency === 'UZS'\r\n                                ? (\r\n                                    Math.round(discount.totalpriceuzs * 1) / 1\r\n                                ).toLocaleString('ru-RU')\r\n                                : (\r\n                                    Math.round(discount.totalprice * 1000) / 1000\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-warning-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-medium'>\r\n                            {currency === 'UZS'\r\n                                ? (\r\n                                    Math.round(discount.discountuzs * 1) / 1\r\n                                ).toLocaleString('ru-RU')\r\n                                : (\r\n                                    Math.round(discount.discount * 1000) / 1000\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-success-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td border-r-0 py-[0.625rem] font-medium'>\r\n                            {discount?.procient?.toLocaleString()}{' '}\r\n                            <span className='text-primary-500'>%</span>\r\n                        </td>\r\n                    </tr> :\r\n                    <li className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p>{currentPage * countPage + 1 + index}- {new Date(discount.createdAt).toLocaleDateString()}</p>\r\n                            <p className='text-[blue]'>{t('ID')}: {discount.saleconnector.id}</p>\r\n                        </li>\r\n\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-warning-500'><span>{t('Chegirma')}</span>: {currency === 'UZS'\r\n                                ? (\r\n                                    Math.round(discount.discountuzs * 1) / 1\r\n                                ).toLocaleString('ru-RU')\r\n                                : (\r\n                                    Math.round(discount.discount * 1000) / 1000\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span className=''>{currency}</span></p>\r\n                            <p className='text-[blue]'>{t('Mijoz')}: {discount.client && discount.client.name}</p>\r\n                        </li>\r\n\r\n                        <li className='flex justify-between p-[10px] '>\r\n                            <p className='text-[blue]'>{t('Jami')}: {currency === 'UZS'\r\n                                ? (\r\n                                    Math.round(discount.totalpriceuzs * 1) / 1\r\n                                ).toLocaleString('ru-RU')\r\n                                : (\r\n                                    Math.round(discount.totalprice * 1000) / 1000\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span className=''>{currency}</span></p>\r\n                            <p className='text-primary-500'>\r\n                                <span>{t('Foiz')}</span>: {discount?.procient?.toLocaleString()}{' '}\r\n                                <span className='text-primary-500'>%</span></p>\r\n                        </li>\r\n                    </li>\r\n            ))}\r\n            {!isMobile && <tr className='tr'>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td font-medium'>\r\n                    {currency === 'UZS'\r\n                        ? data.reduce((prev, el) => prev + Math.round(el.totalpriceuzs * 1) / 1, 0).toLocaleString('ru-RU')\r\n                        : data.reduce((prev, el) => prev + Math.round(el.totalprice * 1000) / 1000, 0).toLocaleString('ru-RU')}{' '}\r\n                    <span className='text-warning-500'>{currency}</span>\r\n                </td>\r\n                <td className='text-left td py-[0.625rem] font-medium'>\r\n                    {currency === 'UZS'\r\n                        ? data.reduce((prev, el) => prev + Math.round(el.discountuzs * 1) / 1, 0).toLocaleString('ru-RU')\r\n                        : data.reduce((prev, el) => prev + Math.round(el.discount * 1000) / 1000, 0).toLocaleString('ru-RU')}{' '}\r\n                    <span className='text-success-500'>{currency}</span>\r\n                </td>\r\n                <td className='text-left td border-r-0 py-[0.625rem] font-medium'>\r\n                    {data.reduce((prev, el) => prev + el.procient, 0).toLocaleString()}{' '}\r\n                    <span className='text-primary-500'>%</span>\r\n                </td>\r\n            </tr>}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const ExchangenerateTableRow = ({\r\n                                           data,\r\n                                           currentPage,\r\n                                           countPage,\r\n                                           Edit,\r\n                                           Delete\r\n                                       }) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {map(data,(exchange, index) => (\r\n                !isMobile?<tr className='tr' key={exchange._id}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {new Date(exchange.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        1 USD - {exchange.exchangerate.toLocaleString('ru-Ru')} UZS\r\n                    </td>\r\n                    <td className='border-r-0 td py-[0.375rem]'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500'}\r\n                                onClick={() => Edit(exchange)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(exchange)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>:\r\n                <li className='w-[90vw]  bg-white list-none mb-[10px]  rounded-md'>\r\n                    <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                    <p className='text-[blue]'>\r\n                    {new Date(exchange.createdAt).toLocaleDateString()}\r\n                    </p>\r\n                    <p className='text-[green]'>\r\n                    1 USD - {exchange.exchangerate.toLocaleString('ru-Ru')} UZS\r\n                    </p>\r\n                    </li>\r\n\r\n                    <li className=' p-[10px] text-sm flex justify-end '>\r\n                    <p className='text-[blue]'>\r\n                    <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500'}\r\n                                onClick={() => Edit(exchange)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(exchange)}\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                    </li>\r\n                </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\nimport {t} from 'i18next'\r\n\r\nexport const ExpensesTableRow = ({\r\n\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    reports,\r\n    Delete,\r\n\r\n}) => {\r\n    const typeofexpense = (type) => {\r\n\r\n        switch (type) {\r\n            case 'cash':\r\n                return 'Naqt'\r\n            case 'card':\r\n                return 'Plastik'\r\n            case 'transfer':\r\n                return \"O'tkazma\"\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {map(data, (expense, index) => (\r\n                !isMobile ?\r\n                    <>\r\n                        <tr className='tr' key={expense._id}>\r\n                            <td className='text-left td'>\r\n                                {currentPage * countPage + 1 + index}\r\n                            </td>\r\n                            <td className='text-left td'>\r\n                                {new Date(expense.createdAt).toLocaleDateString()}\r\n                            </td>\r\n                            <td className='text-left td'>\r\n                                {expense?.user?.firstname} {expense?.user?.lastname}\r\n                            </td>\r\n                            <td className='text-left td font-medium'>\r\n                                {currency === 'USD' ? expense.sum : expense.sumuzs.toLocaleString('ru-Ru')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                            <td className='text-left td'>{expense.comment}</td>\r\n                            <td className='text-left py-[0.625rem] td'>\r\n                                {typeofexpense(expense.type)}\r\n                            </td>\r\n                            {!reports && (\r\n                                <td className='border-r-0 py-[0.625rem] td'>\r\n                                    <div className='flex items-center justify-center'>\r\n                                        <TableBtn\r\n                                            type={'delete'}\r\n                                            bgcolor={'bg-error-500'}\r\n                                            onClick={() => Delete(expense)}\r\n                                        />\r\n                                    </div>\r\n                                </td>\r\n                            )}\r\n                        </tr>\r\n\r\n                    </> :\r\n                    <li className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[red] text-lg'>\r\n                                {currency === 'USD' ? expense.sum : expense.sumuzs.toLocaleString('ru-Ru')}{' '}\r\n                                <span>{currency}</span>\r\n                            </p>\r\n                            <p >\r\n                                {new Date(expense.createdAt).toLocaleDateString()}\r\n                            </p>\r\n                        </li>\r\n                        <li className=' p-[10px] text-sm flex justify-between border border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[blue]' ><span >{t('Izoh')}: </span>\r\n                                {expense.comment}\r\n\r\n                            </p>\r\n\r\n                        </li>\r\n                        <li className=' p-[10px] text-sm flex justify-between border border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[green]'><spa>{t('Turi')}: </spa>\r\n                                {typeofexpense(expense.type)}\r\n                            </p>\r\n                        </li>\r\n                        <li className=' p-[10px] text-sm flex justify-between '>\r\n                            <p className='text-[black]'><spa>{t('Sotuvchi')}: </spa>\r\n                                {expense?.user?.firstname} {expense?.user?.lastname}\r\n                            </p>\r\n                        </li>\r\n\r\n\r\n                    </li>\r\n            ))}\r\n            <tr className='tr bg-transparent'>\r\n                <td className='text-right td font-medium bg-none border-none' colSpan={3}>\r\n                    {currency === 'USD' ? data.reduce((prev, el) => prev + el.sum, 0) : data.reduce((prev, el) => prev + el.sumuzs, 0).toLocaleString('ru-Ru')}{' '}\r\n                    <span>{currency}</span>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map, uniqueId} from 'lodash'\r\nexport const FilialShopDataIdTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n}) => {\r\n    return (\r\n        <>\r\n            {data && map(data, (item, index) => (\r\n                <tr className='tr' key={uniqueId('item')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {item?.category?.code}\r\n                    </td>\r\n                    <td className='text-left td py-[0.75rem]'>{item?.productdata?.code}</td>\r\n                    <td className='text-left td'>{item?.productdata?.name}</td>\r\n                    <td className='text-left td'>{item?.pieces}</td>\r\n                    <td className='text-left td font-medium'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  Math.round(item?.price?.incomingpriceuzs * 1) / 1\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  Math.round(item?.price?.incomingprice * 1000) /\r\n                                  1000\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        <span className='text-warning-500'>{currency}</span>\r\n                    </td>\r\n                    <td className='text-left td font-medium'>\r\n                        {currency === 'UZS'\r\n                             ? (\r\n                                Math.round(item?.price?.incomingpriceuzs + item?.price?.sellingpriceuzs)\r\n                            ).toLocaleString('ru-RU')\r\n                          : (\r\n                                Math.round(item?.price?.incomingprice + item?.price?.sellingprice) \r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                      <span className='text-warning-500'>{currency}</span>\r\n                    </td>\r\n\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoArrowRedoCircleSharp} from 'react-icons/io5'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const FilialShopTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n}) => {\r\n    return (\r\n        <>\r\n          {data && map(data, (item, index) => (\r\n                <tr className='tr' key={uniqueId('item')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {new Date(item?.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='text-left td'>{item?.id}</td>\r\n                    <td className='text-left td'>{item?.products.length}</td>\r\n                    <td className='text-left td'>{item?.pieces}</td>\r\n                    <td className='text-left td font-medium'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  Math.round(item.totalincomingpriceuzs * 1) / 1\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  Math.round(item.totalincomingprice * 1000) /\r\n                                  1000\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        <span className='text-warning-500'>{currency}</span>\r\n                    </td>\r\n                    <td className='text-left td font-medium'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  Math.round(item?.totalsellingpriceuzs * 1) / 1\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  Math.round(item?.totalsellingprice * 1000) /\r\n                                  1000\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        <span className='text-warning-500'>{currency}</span>\r\n                    </td>\r\n                    <td className='py-[0.375rem] td text-center'>\r\n                        <div className='flex items justify-center'>\r\n                            <Link to='exchangesId' state={{id : item?._id}}>\r\n                                <IoArrowRedoCircleSharp\r\n                                    size={'1.75rem'}\r\n                                    className='cursor-pointer text-black-800'\r\n                                />\r\n                            </Link>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {uniqueId} from 'lodash'\r\nimport {t} from 'i18next'\r\n\r\nexport const GeneralReportTableRow = ({data, currency}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>  \r\n            {\r\n                !isMobile?<tr className='tr' key={uniqueId('sales')}>\r\n                <td className='text-center td py-2'>\r\n                    {data?.salesCount?.toLocaleString()}\r\n                </td>\r\n                <td className='td text-center'>\r\n                    {data?.saleProducts?.toLocaleString()}\r\n                </td>\r\n                <td className='td text-right font-bold'>\r\n                    {currency === 'UZS'\r\n                        ? data?.totalpriceuzs?.toLocaleString()\r\n                        : data?.totalprice?.toLocaleString()}{' '}\r\n                    {currency}\r\n                </td>\r\n            </tr>:\r\n                <li className='text-sm w-[90vw]   bg-[white] rounded-lg m-2 list-none'>\r\n                <li className='flex justify-between p-[10px] '>\r\n                <p>{t('Sotuvlar soni')}</p>\r\n                <p className='text-[green]'>\r\n                    {data?.salesCount?.toLocaleString()}\r\n                </p>\r\n                </li><li className='flex justify-between p-[10px] '>\r\n                <p>{t('Sotilgan maxsulotlar')}</p>\r\n                <p className='text-[green]'>\r\n                {data?.saleProducts?.toLocaleString()}\r\n                </p>\r\n                </li>\r\n                <li className='flex justify-between p-[10px] '>\r\n                <p>{t('Jami tushum')}</p>\r\n                <p className='text-[green]'>\r\n                {currency === 'UZS'\r\n                        ? data?.totalpriceuzs?.toLocaleString()\r\n                        : data?.totalprice?.toLocaleString()}{' '}\r\n                    {currency}\r\n                </p>\r\n                </li>\r\n                </li>\r\n                \r\n            }\r\n        </>\r\n    )\r\n}\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {t} from 'i18next'\r\n\r\nexport const IncomeTableRow = ({data, currentPage, countPage, currency, Print}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            {map(data, (income, index) => (\r\n                !isMobile ?\r\n                    <>\r\n                        <tr className='tr' key={uniqueId('income')}>\r\n                            <td className='text-left td'>\r\n                                {currentPage * countPage + 1 + index}\r\n                            </td>\r\n                            <td className='text-left td'>\r\n                                {new Date(income.createdAt).toLocaleDateString()}\r\n                            </td>\r\n                            <td className='text-left td'>{income.saleconnector.id}</td>\r\n                            <td className='text-left td font-bold text-error-500'>\r\n                                {(currency === 'USD'\r\n                                        ? income.totalincomingprice\r\n                                        : income.totalincomingpriceuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                            <td className='text-left td font-bold text-primary-800'>\r\n                                {(currency === 'USD'\r\n                                        ? income.totalprice\r\n                                        : income.totalpriceuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                            <td className='text-left td py-[0.625rem] font-bold text-warning-500'>\r\n                                {(currency === 'USD'\r\n                                        ? income.discount\r\n                                        : income.discountuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                            <td className='text-left td font-bold text-success-500'>\r\n                                {(currency === 'USD'\r\n                                        ? income.profit\r\n                                        : income.profituzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                            <td className='text-right border-r-0 td font-bold text-success-500'>\r\n                                <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                    <TableBtn\r\n                                        type={'print'}\r\n                                        bgcolor={'bg-primary-800'}\r\n                                        onClick={() => Print(income.dailyconnector)}\r\n                                    />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </>\r\n                    :\r\n                    <li className='text-sm w-[90vw] h-[150px] bg-[white] rounded-lg m-1 list-none'>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{currentPage * countPage + 1 + index}- </span>\r\n                                {new Date(income.createdAt).toLocaleDateString()}\r\n                            </p>\r\n                            <p className='text-[green]'>\r\n                                <spa>{t('ID:')} </spa>\r\n                                Id: {income.saleconnector.id}\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[red]'><span>{t('Kelgan')}: </span>\r\n                                {(currency === 'USD'\r\n                                        ? income.totalincomingprice\r\n                                        : income.totalincomingpriceuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n\r\n                            </p>\r\n                            <p className='text-[green]'>\r\n                                <spa>{t('Sotilgan')}:</spa>\r\n                                {(currency === 'USD'\r\n                                        ? income.totalprice\r\n                                        : income.totalpriceuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[#FFC300]'><span>{t('Chegirma')}: </span>\r\n                                {(currency === 'USD'\r\n                                        ? income.discount\r\n                                        : income.discountuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n\r\n                            </p>\r\n                            <p className='text-[green]'>\r\n                                <spa>{t('Foyda')}:</spa>\r\n                                {(currency === 'USD'\r\n                                        ? income.profit\r\n                                        : income.profituzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </p>\r\n                        </li>\r\n                        <div className='flex items-center justify-end p-[3px]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(income.dailyconnector)}\r\n                            />\r\n                        </div>\r\n                    </li>\r\n\r\n            ))}\r\n            {\r\n                isMobile ? <>\r\n                        <tr className='tr' key={uniqueId('income')}>\r\n                            <td className='text-left td font-bold text-error-500 border-none'>\r\n                                {t('Kelgan')}\r\n                            </td>\r\n                            <td className='text-left td font-bold text-error-500 border-none'>\r\n                                {(currency === 'USD'\r\n                                        ? data.reduce((prev, el) => prev + el.totalincomingprice, 0)\r\n                                        : data.reduce((prev, el) => prev + el.totalincomingpriceuzs, 0)\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className='tr' key={uniqueId('income')}>\r\n                            <td className='text-left td font-bold text-primary-800 border-none'>\r\n                                {t('Sotilgan')}\r\n                            </td>\r\n                            <td className='text-left td py-[0.625rem] font-bold text-primary-800 border-none'>\r\n                                {(currency === 'USD'\r\n                                        ? data.reduce((prev, el) => prev + el.totalprice, 0)\r\n                                        : data.reduce((prev, el) => prev + el.totalpriceuzs, 0)\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className='tr' key={uniqueId('income')}>\r\n                            <td className='text-left td font-bold text-warning-500 border-none'>\r\n                                {t('Chegirma')}\r\n                            </td>\r\n                            <td className='text-left td font-bold text-warning-500 border-none'>\r\n                                {(currency === 'USD'\r\n                                        ? data.reduce((prev, el) => prev + el.discount, 0)\r\n                                        : data.reduce((prev, el) => prev + el.discountuzs, 0)\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className='tr' key={uniqueId('income')}>\r\n                            <td className='text-left td font-bold text-success-500 border-none'>\r\n                                {t('Foyda')}\r\n                            </td>\r\n                            <td className='text-left td py-[0.625rem] font-bold text-success-500 border-none'>\r\n                                {(currency === 'USD'\r\n                                        ? data.reduce((prev, el) => prev + el.profit, 0)\r\n                                        : data.reduce((prev, el) => prev + el.profituzs, 0)\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                        </tr>\r\n                    </> :\r\n                    <tr className='tr' key={uniqueId('income')}>\r\n                        <td className='text-left td'>\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                        </td>\r\n                        <td className='text-left td'></td>\r\n                        <td className='text-left td font-bold text-error-500'>\r\n                            {(currency === 'USD'\r\n                                    ? data.reduce((prev, el) => prev + el.totalincomingprice, 0)\r\n                                    : data.reduce((prev, el) => prev + el.totalincomingpriceuzs, 0)\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                            <span>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td font-bold text-primary-800'>\r\n                            {(currency === 'USD'\r\n                                    ? data.reduce((prev, el) => prev + el.totalprice, 0)\r\n                                    : data.reduce((prev, el) => prev + el.totalpriceuzs, 0)\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                            <span>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-bold text-warning-500'>\r\n                            {(currency === 'USD'\r\n                                    ? data.reduce((prev, el) => prev + el.discount, 0)\r\n                                    : data.reduce((prev, el) => prev + el.discountuzs, 0)\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                            <span>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td font-bold text-success-500'>\r\n                            {(currency === 'USD'\r\n                                    ? data.reduce((prev, el) => prev + el.profit, 0)\r\n                                    : data.reduce((prev, el) => prev + el.profituzs, 0)\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                            <span>{currency}</span>\r\n                        </td>\r\n                    </tr>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {IoAdd, IoEye, IoEyeOff, IoRemove} from 'react-icons/io5'\r\nexport const IncomingOrderProductsTableRow = ({\r\n    data,\r\n    currency,\r\n    increment,\r\n    decrement,\r\n    handleDelete,\r\n    handleCountProduct,\r\n    handleUnitPrice,\r\n}) => {\r\n    const [showIncomingPrice, setShowIncomingPrice] = useState([])\r\n    const changeShow = (i) => {\r\n        const price = [...showIncomingPrice]\r\n        price[i] = !price[i]\r\n        setShowIncomingPrice([...price])\r\n    }\r\n    useEffect(() => {\r\n        setShowIncomingPrice(map(data, () => false))\r\n    }, [data])\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>{1 + index}</td>\r\n                    <td className='td text-center'> {item?.product?.code}</td>\r\n                    <td className='td text-left'>{item?.product?.name}</td>\r\n                    <td className='td text-end'>\r\n                        {item?.total?.toLocaleString('ru-Ru')}{' '}\r\n                        {item?.unit?.name}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {item?.pieces?.recived} {item?.unit?.name}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        <span className={'flex gap-[0.6rem] items-center'}>\r\n                            <button\r\n                                onClick={() => decrement(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-error-500 hover:bg-error-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoRemove size={'0.875rem'} />\r\n                            </button>\r\n                            <TableInput\r\n                                value={item?.pieces?.send}\r\n                                onChange={(e) => {\r\n                                    handleCountProduct(e, item.product._id)\r\n                                }}\r\n                                type={'number'}\r\n                            />\r\n                            <button\r\n                                onClick={() => increment(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-success-500 hover:bg-success-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoAdd size={'0.875rem'} />\r\n                            </button>\r\n                        </span>\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        <TableInput\r\n                            value={\r\n                                currency === 'UZS'\r\n                                    ? item?.unitpriceuzs\r\n                                    : item?.unitprice\r\n                            }\r\n                            onChange={(e) =>\r\n                                handleUnitPrice(e, item.product._id)\r\n                            }\r\n                            type={'number'}\r\n                        />\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {currency === 'UZS'\r\n                            ? item?.totalpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.totalprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td'>\r\n                        <div className='flex items-center justify-center gap-[5px]'>\r\n                            <TableBtn\r\n                                onClick={() => handleDelete(index)}\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                    <td className='td border-r-0 text-success-500'>\r\n                        <div className='flex justify-between'>\r\n                            <button onClick={() => changeShow(index)}>\r\n                                {showIncomingPrice[index] ? (\r\n                                    <IoEye />\r\n                                ) : (\r\n                                    <IoEyeOff />\r\n                                )}\r\n                            </button>\r\n                            <span className='min-w-fit'>\r\n                                {showIncomingPrice[index]\r\n                                    ? currency === 'UZS'\r\n                                        ? item?.incomingpriceuzs?.toLocaleString(\r\n                                              'ru-Ru'\r\n                                          ) + ' UZS'\r\n                                        : item?.incomingprice?.toLocaleString(\r\n                                              'ru-Ru'\r\n                                          ) + ' USD'\r\n                                    : ''}\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport { map } from 'lodash'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport const IncomingsTableRow = ({\r\n    editedIncoming,\r\n    currency,\r\n    saveEditIncoming,\r\n    changeHandler,\r\n    changeNumberHandler,\r\n    Delete,\r\n    Print,\r\n    Edit,\r\n    currentPage,\r\n    countPage,\r\n    printedData,\r\n    data,\r\n    onKeyUp,\r\n}) => {\r\n    const current = (usd, uzs) => (currency === 'USD' ? usd : uzs || 0)\r\n    const location = useLocation()\r\n    const inputVal = (id, printedData) => {\r\n        let hasData = printedData.filter((p) => p.product._id === id)\r\n        return hasData.length > 0 ? hasData[0].numberOfChecks : ''\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (incoming, index) => (\r\n                <tr className='tr' key={incoming._id}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-left'>{incoming.supplier.name}</td>\r\n                    <td className='td text-right'>\r\n                        {incoming.product.productdata.code}\r\n                    </td>\r\n                    <td className='td text-left'>\r\n                        {incoming.product.productdata.name}\r\n                    </td>\r\n                    <td className='td text-right font-bold'>\r\n                        {(editedIncoming._id === incoming._id && (\r\n                            <TableInput\r\n                                value={editedIncoming.pieces}\r\n                                onChange={(e) => changeHandler(e, 'pieces')}\r\n                                onKeyUp={onKeyUp}\r\n                            />\r\n                        )) || (\r\n                                <span>\r\n                                    {incoming?.pieces?.toLocaleString('ru-RU')}{' '}\r\n                                    <span className='text-warning-500 font-medium'>\r\n                                        {incoming?.unit?.name}\r\n                                    </span>\r\n                                </span>\r\n                            )}\r\n                    </td>\r\n                    <td className='td text-right font-bold'>\r\n                        {(editedIncoming._id === incoming._id && (\r\n                            <TableInput\r\n                                value={current(\r\n                                    editedIncoming.unitprice,\r\n                                    editedIncoming.unitpriceuzs\r\n                                )}\r\n                                onChange={(e) => changeHandler(e, 'unitprice')}\r\n                                type={'number'}\r\n                                onKeyUp={onKeyUp}\r\n                            />\r\n                        )) || (\r\n                                <span>\r\n                                    {current(\r\n                                        incoming.unitprice,\r\n                                        incoming.unitpriceuzs\r\n                                    ).toLocaleString('ru-RU')}{' '}\r\n                                    <span className='text-primary-800 font-medium'>\r\n                                        {currency}\r\n                                    </span>\r\n                                </span>\r\n                            )}\r\n                    </td>\r\n                    <td className='td text-right font-bold'>\r\n                        {editedIncoming._id === incoming._id\r\n                            ? current(\r\n                                editedIncoming.totalprice,\r\n                                editedIncoming.totalpriceuzs\r\n                            ).toLocaleString('ru-RU')\r\n                            : current(\r\n                                incoming.totalprice,\r\n                                incoming.totalpriceuzs\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                        <span className='text-success-500 font-medium'>\r\n                            {currency}\r\n                        </span>\r\n                    </td>\r\n                    <td className='td text-right font-bold'>\r\n                        {(editedIncoming._id === incoming._id && (\r\n                            <TableInput\r\n                                value={current(\r\n                                    editedIncoming.sellingprice,\r\n                                    editedIncoming.sellingpriceuzs\r\n                                )}\r\n                                onChange={(e) =>\r\n                                    changeHandler(e, 'sellingprice')\r\n                                }\r\n                                type={'number'}\r\n                                onKeyUp={onKeyUp}\r\n                            />\r\n                        )) || (\r\n                                <span>\r\n                                    {current(\r\n                                        incoming.sellingprice,\r\n                                        incoming.sellingpriceuzs\r\n                                    ).toLocaleString('ru-RU')}{' '}\r\n                                    <span className='text-primary-800 font-medium'>\r\n                                        {currency}\r\n                                    </span>\r\n                                </span>\r\n                            )}\r\n                    </td>\r\n                    {!location.pathname.includes('/qabul/qabullar/') && <td className='py-[0.25rem] td'>\r\n                        <TableInput\r\n                            onChange={(e) => changeNumberHandler(e, incoming)}\r\n                            type={'number'}\r\n                            value={inputVal(incoming._id, printedData)}\r\n                        />\r\n                    </td>}\r\n                    <td className='td border-r-0 py-[6px]'>\r\n                        <div className='flex justify-center items-center gap-[0.625rem]'>\r\n                            {editedIncoming._id === incoming._id ? (\r\n                                <>\r\n                                    <TableBtn\r\n                                        type={'save'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() =>\r\n                                            saveEditIncoming(incoming)\r\n                                        }\r\n                                    />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-warning-500'}\r\n                                        onClick={() => Edit(incoming)}\r\n                                    />\r\n                                </>\r\n                            )}\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(incoming)}\r\n                            />\r\n                            {!location.pathname.includes('/qabul/qabullar/') && <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(incoming, 'single')}\r\n                            />}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCheckmark, IoHourglass} from 'react-icons/io5'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const StatusIcon = ({status}) => {\r\n    if (status) {\r\n        return (\r\n            <div className='w-[38px] h-[24px] flex items-center justify-center bg-success-500 rounded-lg'>\r\n                <IoCheckmark color='white' />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Link\r\n            to={'/maxsulotlar/inventarizatsiya/inventarizatsiya'}\r\n            className='w-[38px] h-[24px] flex items-center justify-center bg-warning-500 rounded-lg'\r\n        >\r\n            <IoHourglass color='white' />\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {StatusIcon} from '../TableIcons/StatusIcon'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const InventoriesTableRow = ({\r\n                                        data,\r\n                                        currentPage,\r\n                                        countPage,\r\n                                        Print,\r\n                                        Excel,\r\n                                        isDisabled\r\n                                    }) => {\r\n    return (\r\n        <>\r\n            {map(data, (inventory, index) => (\r\n                <tr key={inventory._id} className='tr'>\r\n                    <td className='td text-left'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {new Date(inventory.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='td text-right'>{inventory.id}</td>\r\n                    <td className='td text-left'>\r\n                        {inventory.inventories.length}\r\n                    </td>\r\n                    <td className='py-[0.375rem] td text-center'>\r\n                        <div className='flex items justify-center'>\r\n                            <StatusIcon status={inventory.completed} />\r\n                        </div>\r\n                    </td>\r\n                    <td className='td border-r-0 text-center max-w-[50px]'>\r\n                        <div className='flex items-center justify-center gap-[5px]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(inventory)}\r\n                            />\r\n                            <TableBtn\r\n                                isDisabled={isDisabled}\r\n                                type={'excel'}\r\n                                bgcolor={'bg-success-500'}\r\n                                onClick={() => Excel(inventory)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {map} from 'lodash'\r\n\r\nexport const InventoryTableRow = ({\r\n                                      data,\r\n                                      currentPage,\r\n                                      countPage,\r\n                                      changeHandler,\r\n                                      inputDisabled,\r\n                                      Save,\r\n                                      onKeyUp\r\n                                  }) => {\r\n    return (\r\n        <>\r\n            {map(data,(product, index) => (\r\n                <tr key={product._id} className='tr'>\r\n                    <td className='td text-left'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>{product.category.code}</td>\r\n                    <td className='td text-center'>\r\n                        {product.productdata.code}\r\n                    </td>\r\n                    <td className='td text-left'>{product.productdata.name}</td>\r\n                    <td className='td text-right'>{product.total.toLocaleString('ru-Ru')}</td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            disabled={inputDisabled}\r\n                            onChange={(e) =>\r\n                                changeHandler(e, index, product, 'count')\r\n                            }\r\n                            type={'number'}\r\n                            value={\r\n                                product.inventory.inventorycount &&\r\n                                product.inventory.inventorycount\r\n                            }\r\n                            onKeyUp={(e) => onKeyUp(e, index)}\r\n                        />\r\n                    </td>\r\n                    <td className='td text-error-500 text-right'>\r\n                        {product.inventory && product.inventory.inventorycount\r\n                            ? product.inventory.inventorycount -\r\n                            product.inventory.productcount >\r\n                            0\r\n                                ? '+' +\r\n                                (\r\n                                    Math.round(\r\n                                        (product.inventory.inventorycount -\r\n                                            product.inventory.productcount) *\r\n                                        100\r\n                                    ) / 100\r\n                                ).toLocaleString('ru-RU')\r\n                                : (\r\n                                    Math.round(\r\n                                        (product.inventory.inventorycount -\r\n                                            product.inventory.productcount) *\r\n                                        100\r\n                                    ) / 100\r\n                                ).toLocaleString('ru-RU')\r\n                            : ''}{' '}\r\n                        <span className='text-error-500'>\r\n                            {product.unit.name}\r\n                        </span>\r\n                    </td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            disabled={inputDisabled}\r\n                            onChange={(e) =>\r\n                                changeHandler(e, index, product, 'comment')\r\n                            }\r\n                            type={'text'}\r\n                            value={\r\n                                product.inventory.comment &&\r\n                                product.inventory.comment\r\n                            }\r\n                            onKeyUp={(e) => onKeyUp(e, index)}\r\n                        />\r\n                    </td>\r\n                    <td className='py-0 td'>\r\n                        <div className='flex justify-center items-center'>\r\n                            <TableBtn\r\n                                type={'save'}\r\n                                bgcolor={'bg-success-500'}\r\n                                onClick={() => Save(index)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {map} from 'lodash'\r\n\r\nconst inputVal = (id, printedData) => {\r\n    let hasData = printedData.filter((p) => p.product._id === id)\r\n    return hasData.length > 0 ? hasData[0].numberOfChecks : ''\r\n}\r\n\r\nexport const LabelsIncome = ({\r\n    data,\r\n    Print,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    changeHandler,\r\n    printedData,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr className='tr' key={product._id}>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>{product.category.code}</td>\r\n                    <td className={`td`}>{product.productdata.code}</td>\r\n                    <td className={`td`}>{product.productdata.name}</td>\r\n                    <td className={`td text-right`}>\r\n                        <span className='pointer-events-none'>\r\n                            {product?.pieces.toLocaleString('ru-Ru')}{' '}\r\n                            {product?.unit?.name}\r\n                        </span>\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? product.price.incomingpriceuzs.toLocaleString(\r\n                                  'ru-RU'\r\n                              )\r\n                            : product.price.incomingprice.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  product.price.incomingpriceuzs * product.pieces\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  product.price.incomingprice * product.pieces\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className={`td text-right`}>\r\n                        {currency === 'UZS'\r\n                            ? product.price.sellingpriceuzs.toLocaleString(\r\n                                  'ru-RU'\r\n                              )\r\n                            : product.price.sellingprice.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  product.price.sellingpriceuzs * product.pieces\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  product.price.sellingprice * product.pieces\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-[0.25rem] td'>\r\n                        <TableInput\r\n                            onChange={(e) => changeHandler(e, product)}\r\n                            type={'number'}\r\n                            value={inputVal(product._id, printedData)}\r\n                        />\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(product, 'single')}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport {useParams} from 'react-router-dom'\r\nimport ProductCheckbox from '../../Checkbox/ProductCheckBox.js'\r\nexport const MarketProductsTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    handleShowProduct,\r\n}) => {\r\n    const partner = useParams().id\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr key={product._id} className='tr'>\r\n                    <td className='td py-2'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product?.productdata?.barcode}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product?.category?.code}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product?.productdata?.code}\r\n                    </td>\r\n                    <td className='td text-left'>\r\n                        {product?.productdata?.name}\r\n                    </td>\r\n                    <td className='td'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <ProductCheckbox\r\n                                onChange={(e) =>\r\n                                    handleShowProduct(\r\n                                        e,\r\n                                        product._id,\r\n                                        partner,\r\n                                        index\r\n                                    )\r\n                                }\r\n                                value={product?.connections?.some(\r\n                                    (connection) => connection === partner\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {IoAdd, IoRemove} from 'react-icons/io5'\r\n\r\nexport const OrderProductsTableRow = ({\r\n    data,\r\n    currency,\r\n    increment,\r\n    decrement,\r\n    handleDelete,\r\n    handleCountProduct,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>{1 + index}</td>\r\n                    <td className='td text-center'>{item?.product?.code}</td>\r\n                    <td className='td text-left'>{item?.product?.name}</td>\r\n                    <td className='td text-end'>\r\n                        {item?.total?.toLocaleString('ru-Ru')}{' '}\r\n                        {item?.unit?.name}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {currency === 'UZS'\r\n                            ? item?.unitpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.unitprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        <span className={'flex gap-[0.6rem] items-center'}>\r\n                            <button\r\n                                onClick={() => decrement(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-error-500 hover:bg-error-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoRemove size={'0.875rem'} />\r\n                            </button>\r\n                            <TableInput\r\n                                value={item?.pieces.recived}\r\n                                onChange={(e) =>\r\n                                    handleCountProduct(e, item?.product?._id)\r\n                                }\r\n                                type={'number'}\r\n                            />\r\n                            <button\r\n                                onClick={() => increment(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-success-500 hover:bg-success-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoAdd size={'0.875rem'} />\r\n                            </button>\r\n                        </span>\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {currency === 'UZS'\r\n                            ? item?.totalpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.totalprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td'>\r\n                        <div className='flex items-center justify-center gap-[5px]'>\r\n                            <TableBtn\r\n                                onClick={() => handleDelete(index)}\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map, uniqueId} from 'lodash'\r\n\r\nexport const PackmanTableRow = ({\r\n                                    data,\r\n                                    currentPage,\r\n                                    countPage,\r\n                                    Edit,\r\n                                    Delete\r\n                                }) => {\r\n                                    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {map(data,(packman, index) => (\r\n                !isMobile?<tr className='tr' key={uniqueId('card')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='text-left td'>{packman.name}</td>\r\n                    <td className='py-[0.375rem] td border-r-0'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500'}\r\n                                onClick={() => Edit(packman)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(packman)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>:\r\n                <li className='text-sm w-[90vw]  bg-[white] rounded-lg m-2 list-none'>\r\n                <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                    <p>{currentPage * countPage + 1 + index}</p> \r\n                    <p className='text-[green]'>{packman.name}</p>\r\n                </li>\r\n                <li className='flex justify-end p-[10px] '>\r\n                <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                       \r\n                        <TableBtn\r\n                            type={'edit'}\r\n                            bgcolor='bg-warning-500'\r\n                            onClick={() => Edit(packman)}\r\n                        />\r\n                        <TableBtn\r\n                            type={'delete'}\r\n                            bgcolor='bg-error-500'\r\n                            onClick={() => Delete(packman)}\r\n                        />\r\n                    </div>\r\n                </li>\r\n            </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\n\r\nexport const PartnerProductsTableRow = ({data, currentPage, countPage}) => {\r\n\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr key={product._id} className='tr'>\r\n                    <td className='td py-2'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>{product?.productdata?.barcode}</td>\r\n                    <td className='td text-center'>{product?.category?.code}</td>\r\n                    <td className='td text-center'>{product?.productdata?.code}</td>\r\n                    <td className='td text-left'>{product?.productdata?.name}</td>\r\n                    <td className='td text-end'>{product?.total} {product?.unit?.name}</td>\r\n                    <td className='td text-end'>{product?.price?.sellingpriceuzs}</td>\r\n                    <td className='td text-end'>{product?.price?.sellingprice}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {roundUsd} from '../../../App/globalFunctions'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {t} from 'i18next'\r\n\r\nexport const PaymentsTableRow = ({\r\n                                     data,\r\n                                     currentPage,\r\n                                     countPage,\r\n                                     currency,\r\n                                     Print,\r\n                                     type\r\n                                 }) => {\r\n\r\n    const payDebt = data.reduce((prev, el) => {\r\n        if (!el.totalprice) {\r\n            prev += el.cash + el.card + el.transfer\r\n        }\r\n        return prev\r\n    }, 0)\r\n    const payDebtUzs = data.reduce((prev, el) => {\r\n        if (!el.totalprice) {\r\n            prev += el.cashuzs + el.carduzs + el.transferuzs\r\n        }\r\n        return prev\r\n    }, 0)\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            {map(data, (sale, index) => (\r\n                !isMobile ? <tr className='tr' key={uniqueId('sale')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + 1 + index}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {new Date(sale.createdAt).toLocaleDateString()}\r\n                        </td>\r\n                        <td className='text-left td'>{sale.id}</td>\r\n                        <td className='text-left td'>{sale?.client?.name}</td>\r\n                        <td className='text-left td py-[0.625rem] font-bold'>\r\n                            {currency === 'USD'\r\n                                ? sale?.cash?.toLocaleString('ru-RU')\r\n                                : sale?.cashuzs?.toLocaleString('ru-RU')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-bold'>\r\n                            {currency === 'USD'\r\n                                ? sale?.card?.toLocaleString('ru-RU')\r\n                                : sale?.carduzs?.toLocaleString('ru-RU')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-bold'>\r\n                            {currency === 'USD'\r\n                                ? sale?.transfer?.toLocaleString('ru-RU')\r\n                                : sale?.transferuzs?.toLocaleString('ru-RU')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-success-500 text-left td py-[0.625rem] font-bold'>\r\n                            {!sale.totalprice ? (<>\r\n                                {currency === 'USD' ? (sale.cash + sale.card + sale.transfer).toLocaleString('ru-RU') : (sale.cashuzs + sale.carduzs + sale.transferuzs).toLocaleString('ru-RU')}\r\n                            </>) : 0} {' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-bold'>\r\n                            {sale.cash < 0 || sale.carrd < 0 || sale.transfer < 0 ? (<>\r\n                                {currency === 'USD' ? (sale.cash + sale.card + sale.transfer).toLocaleString('ru-RU') : (sale.cashuzs + sale.carduzs + sale.transferuzs).toLocaleString('ru-RU')}\r\n                            </>) : 0} {' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='py-[0.375rem] td border-r-0'>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-primary-800'}\r\n                                    onClick={() => Print(sale.saleconnector)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr> :\r\n                    <li className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{currentPage * countPage + 1 + index}- </span>\r\n                                {new Date(sale.createdAt).toLocaleDateString()}\r\n                            </p>\r\n                            <p className='text-[green]'><span>{t('Mijoz')}: </span>\r\n                                {sale?.client?.name}\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{t('Naqt')}: </span>{currency === 'USD'\r\n                                ? sale?.cash?.toLocaleString('ru-RU')\r\n                                : sale?.cashuzs?.toLocaleString('ru-RU')}{' '}\r\n                                {currency}\r\n                            </p>\r\n                            <p className='text-[black]'><span>{t('Plastik')}: </span>\r\n                                {currency === 'USD'\r\n                                    ? sale?.card?.toLocaleString('ru-RU')\r\n                                    : sale?.carduzs?.toLocaleString('ru-RU')}{' '}\r\n                                {currency}\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{t('O\\'tkazma')}: </span>\r\n                                {currency === 'USD'\r\n                                    ? sale?.transfer?.toLocaleString('ru-RU')\r\n                                    : sale?.transferuzs?.toLocaleString('ru-RU')}{' '}\r\n                                {currency}\r\n                            </p>\r\n                            <p className='text-[green]'><span>{t('Qarzdan To\\'lov')}: </span>\r\n                                {!sale.totalprice ? (<>\r\n                                    {currency === 'USD' ? (sale.cash + sale.card + sale.transfer).toLocaleString('ru-RU') : (sale.cashuzs + sale.carduzs + sale.transferuzs).toLocaleString('ru-RU')}\r\n                                </>) : 0} {' '}\r\n                                {currency}\r\n                            </p>\r\n                        </li>\r\n                        <li className=' p-[10px] text-sm flex justify-between items-center '>\r\n                            <p><span>{t('Qaytarilgan')}: </span>\r\n                                {sale.cash < 0 || sale.carrd < 0 || sale.transfer < 0 ? (<>\r\n                                    {currency === 'USD' ? (sale.cash + sale.card + sale.transfer).toLocaleString('ru-RU') : (sale.cashuzs + sale.carduzs + sale.transferuzs).toLocaleString('ru-RU')}\r\n                                </>) : 0} {' '}\r\n                                {currency}\r\n                            </p>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(sale.saleconnector)}\r\n                            />\r\n                        </li>\r\n                    </li>\r\n            ))}\r\n            {\r\n                !isMobile && <tr className='tr'>\r\n                    <td className='text-left td'>\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                    </td>\r\n                    <td className='text-left td'></td>\r\n                    <td className='text-left td'></td>\r\n                    <td className='text-left td py-[0.625rem] font-bold'>\r\n                        {currency === 'USD'\r\n                            ? data.reduce((prev, el) => prev + el.cash, 0).toLocaleString('ru-RU')\r\n                            : data.reduce((prev, el) => prev + el.cashuzs, 0).toLocaleString('ru-RU')} {' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td py-[0.625rem] font-bold'>\r\n                        {currency === 'USD'\r\n                            ? data.reduce((prev, el) => prev + el.card, 0).toLocaleString('ru-RU')\r\n                            : data.reduce((prev, el) => prev + el.carduzs, 0).toLocaleString('ru-RU')\r\n                        }{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td py-[0.625rem] font-bold'>\r\n                        {currency === 'USD'\r\n                            ? data.reduce((prev, el) => prev + el.transfer, 0).toLocaleString('ru-RU')\r\n                            : data.reduce((prev, el) => prev + el.transferuzs, 0).toLocaleString('ru-RU')\r\n                        }{' '}\r\n                        {currency}\r\n                    </td>\r\n\r\n                    <td className='p-2 td font-bold text-success-500'>{currency === 'USD' ?\r\n                        roundUsd(payDebt).toLocaleString('ru-RU')\r\n                        : roundUsd(payDebtUzs).toLocaleString('ru-RU')}{' '} {currency} </td>\r\n                    <td className='text-left td py-[0.625rem] font-bold'>\r\n                        {currency === 'USD'\r\n                            ? data.reduce((prev, el) => prev + (el.cash < 0 || el.carrd < 0 || el.transfer < 0 ? (el.cash + el.card + el.transfer) : 0), 0).toLocaleString('ru-RU')\r\n                            : data.reduce((prev, el) => prev + (el.cash < 0 || el.carrd < 0 || el.transfer < 0 ? (el.cashuzs + el.carduzs + el.transferuzs) : 0), 0).toLocaleString('ru-RU')\r\n                        }{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-[0.375rem] td border-r-0'>\r\n                    </td>\r\n                </tr>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {map} from 'lodash'\r\n\r\nconst inputVal = (id, printedData) => {\r\n    let hasData = printedData.filter((p) => p.product._id === id)\r\n    return hasData.length > 0 ? hasData[0].numberOfChecks : ''\r\n}\r\n\r\nexport const ProductReportTableRow = ({\r\n    data,\r\n    Print,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    changeHandler,\r\n    printedData,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr className='tr' key={product._id}>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>{product.category.code}</td>\r\n                    <td className={`td`}>{product.productdata.code}</td>\r\n                    <td className={`td`}>{product.productdata.name}</td>\r\n                    <td className={`td text-right`}>\r\n                        <span className='pointer-events-none'>\r\n                            {product?.total.toLocaleString('ru-Ru')}{' '}\r\n                            {product?.unit?.name}\r\n                        </span>\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? product.price.incomingpriceuzs.toLocaleString(\r\n                                  'ru-RU'\r\n                              )\r\n                            : product.price.incomingprice.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  product.price.incomingpriceuzs * product.total\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  product.price.incomingprice * product.total\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className={`td text-right`}>\r\n                        {currency === 'UZS'\r\n                            ? product.price.sellingpriceuzs.toLocaleString(\r\n                                  'ru-RU'\r\n                              )\r\n                            : product.price.sellingprice.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  product.price.sellingpriceuzs * product.total\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  product.price.sellingprice * product.total\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-[0.25rem] td'>\r\n                        <TableInput\r\n                            onChange={(e) => changeHandler(e, product)}\r\n                            type={'number'}\r\n                            value={inputVal(product._id, printedData)}\r\n                        />\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(product, 'single')}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const ProductTableRow = ({\r\n    currentPage,\r\n    countPage,\r\n    data,\r\n    Edit,\r\n    Delete,\r\n    currency,\r\n    currencyType,\r\n    productminimumpage,\r\n    modalOpen\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr\r\n                    key={product._id}\r\n                    className='tr'\r\n                    id={'producttablerow' + index}\r\n                >\r\n                    <td className='td text-center '>\r\n                        {productminimumpage\r\n                            ? index + 1\r\n                            : currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product.productdata?.barcode}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product?.category?.code}{' '}\r\n                        {product?.category?.name && `- ${product?.category?.name}`}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product.productdata.code}\r\n                    </td>\r\n                    <td className='td text-left'>{product.productdata.name}</td>\r\n                    <td className='td text-right'>\r\n                        {product.total.toLocaleString('ru-RU')}{' '}\r\n                        {product.unit && product.unit.name}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product.price &&\r\n                            (currency === 'UZS'\r\n                                ? product?.price?.incomingpriceuzs && product?.price?.incomingpriceuzs.toLocaleString(\r\n                                    'ru-RU'\r\n                                )\r\n                                : product?.price?.incomingprice && product?.price?.incomingprice.toLocaleString(\r\n                                    'ru-RU'\r\n                                ))}{' '}\r\n                        {currencyType}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product.price &&\r\n                            (currency === 'UZS'\r\n                                ? product?.price?.sellingpriceuzs && product?.price?.sellingpriceuzs.toLocaleString(\r\n                                    'ru-RU'\r\n                                )\r\n                                : product?.price?.sellingprice && product?.price?.sellingprice.toLocaleString(\r\n                                    'ru-RU'\r\n                                ))}{' '}\r\n                        {currencyType}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product.price?.tradepriceuzs ? (\r\n                            <>\r\n                                {currency === 'UZS'\r\n                                    ? product?.price?.tradepriceuzs && product?.price?.tradepriceuzs.toLocaleString(\r\n                                        'ru-RU'\r\n                                    )\r\n                                    : product?.price?.tradeprice && product?.price?.tradeprice.toLocaleString(\r\n                                        'ru-RU'\r\n                                    )}{' '}\r\n                                {currencyType}\r\n                            </>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </td>\r\n                    <td\r\n                        className={`td text-right ${(productminimumpage &&\r\n                                'py-[0.625rem] border-r-0') ||\r\n                            ''\r\n                            }`}\r\n                    >\r\n                        {product?.minimumcount || ''}\r\n                    </td>\r\n                    {!productminimumpage && (\r\n                        <td className='td py-[0.375rem] border-r-0'>\r\n                            <div className='flex items-center justify-center'>\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor='bg-warning-500'\r\n                                    onClick={() =>{\r\n                                        Edit('producttablerow' + index, product)\r\n                                        modalOpen(true)\r\n                                        \r\n                                    }}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'delete'}\r\n                                    bgcolor='bg-error-500 ml-2.5'\r\n                                    onClick={() => Delete(product)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    )}\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {IoAdd, IoRemove} from 'react-icons/io5'\r\nexport const ReceiveOrderProductsTableRow = ({\r\n    data,\r\n    currency,\r\n    increment,\r\n    decrement,\r\n    handleCountProduct,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>{1 + index}</td>\r\n                    <td className='td text-center'>{item?.product?.code}</td>\r\n                    <td className='td text-left'>{item?.product?.name}</td>\r\n                    <td className='td text-end'>\r\n                        {item?.pieces?.recived?.toLocaleString('ru-Ru')}{' '}\r\n                        {item?.unit?.name}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {item?.pieces?.send?.toLocaleString('ru-Ru')}{' '}\r\n                        {item?.unit?.name}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        <span className={'flex gap-[0.6rem] items-center'}>\r\n                            <button\r\n                                onClick={() => decrement(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-error-500 hover:bg-error-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoRemove size={'0.875rem'} />\r\n                            </button>\r\n                            <TableInput\r\n                                value={item?.pieces?.delivered}\r\n                                onChange={(e) =>\r\n                                    handleCountProduct(e, item?.product?._id)\r\n                                }\r\n                                type={'number'}\r\n                            />\r\n                            <button\r\n                                onClick={() => increment(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-success-500 hover:bg-success-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoAdd size={'0.875rem'} />\r\n                            </button>\r\n                        </span>\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {currency === 'UZS'\r\n                            ? item?.unitpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.unitprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {currency === 'UZS'\r\n                            ? item?.totalpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.totalprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn.js'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {\r\n    IoCheckmarkCircleSharp,\r\n    IoCloseCircleSharp,\r\n    IoHourglass,\r\n} from 'react-icons/io5'\r\nimport SelectTable from '../../SelectTable/SelectTable.js'\r\n\r\nexport const RegisterIncomingOrdersTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    Print,\r\n    updatePosition,\r\n}) => {\r\n    const navigate = useNavigate()\r\n    const linkToSale = (order, position) => {\r\n        navigate('/dukonlar/buyurtma_olish/buyurtmalar', {\r\n            state: {order: {...order}, position},\r\n        })\r\n    }\r\n    const positions = [\r\n        {name: \"so'ralgan\", position: 'requested'},\r\n        {name: 'tasdiqlash', position: 'accepted'},\r\n        {name: 'rad etish', position: 'rejected'},\r\n        {name: \"jo'natish\", position: 'send'},\r\n        {name: 'yetkazilgan', position: 'delivered'},\r\n        {name: 'yakunlash', position: 'completed'},\r\n    ]\r\n\r\n    const createOptions = (currentPosition) => {\r\n        let hasEqual = false\r\n        const check = (position, index) => {\r\n            if (currentPosition === 'delivered' && index === 5) return false\r\n            if (currentPosition === 'send' && index === 3) return false\r\n            if (\r\n                currentPosition === 'accepted' &&\r\n                (index === 3 || index === 2 || index === 1)\r\n            )\r\n                return false\r\n            if (\r\n                (currentPosition === 'requested' ||\r\n                    currentPosition === 'rejected') &&\r\n                (index === 1 || index === 2)\r\n            ) {\r\n                return false\r\n            }\r\n            return true\r\n        }\r\n        const checkPosition = ({position, index}) => {\r\n            if (position.position === currentPosition) {\r\n                hasEqual = true\r\n            }\r\n            return {\r\n                label: (\r\n                    <span className='flex'>\r\n                        {position.position === 'rejected' ? (\r\n                            <IoCloseCircleSharp size={17} color={'red'} />\r\n                        ) : position.position === currentPosition ||\r\n                          !hasEqual ? (\r\n                            <IoCheckmarkCircleSharp size={17} color={'green'} />\r\n                        ) : (\r\n                            <IoHourglass size={17} color='#F89009' />\r\n                        )}\r\n                        <span className='pl-2'>\r\n                            {currentPosition === 'completed' && index === 5\r\n                                ? 'yakunlangan'\r\n                                : position.name}\r\n                        </span>\r\n                    </span>\r\n                ),\r\n                value: position.position,\r\n                isDisabled: check(position.position, index),\r\n            }\r\n        }\r\n        return map(positions, (position, index) =>\r\n            checkPosition({position, index})\r\n        )\r\n    }\r\n    const createValue = (currentPosition) => {\r\n        const check = currentPosition === 'rejected'\r\n        const val = positions.find((pos) => pos.position === currentPosition)\r\n        return {\r\n            value: val?.position,\r\n            label: (\r\n                <span className='flex'>\r\n                    {check ? (\r\n                        <IoCloseCircleSharp size={17} color={'red'} />\r\n                    ) : (\r\n                        <IoCheckmarkCircleSharp size={17} color='green' />\r\n                    )}{' '}\r\n                    <span className='pl-2'>\r\n                        {check\r\n                            ? 'red etilgan'\r\n                            : currentPosition === 'completed'\r\n                            ? 'yakunlangan'\r\n                            : val?.name}\r\n                    </span>\r\n                </span>\r\n            ),\r\n            isDisabled: true,\r\n        }\r\n    }\r\n    const handleChange = (e, order, index) => {\r\n        const val = e.value\r\n        if (val === 'rejected' || val === 'accepted' || val === 'completed') {\r\n            updatePosition(e.value, order._id, index)\r\n        }\r\n        if (val === 'send') {\r\n            linkToSale(order, val)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-end '>\r\n                        <div className='flex justify-between'>\r\n                            <span>\r\n                                {new Date(item?.createdAt).toLocaleTimeString()}\r\n                            </span>\r\n                            <span>\r\n                                {new Date(item?.createdAt).toLocaleDateString()}\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                    <td className='td text-end'>{item?.market?.name}</td>\r\n                    <td className='td text-start'>{item?.market?.inn}</td>\r\n                    <td className='td text-end'>{item?.id}</td>\r\n                    <td className='td text-end'>{item?.products?.length}</td>\r\n                    <td className='td text-end font-bold'>\r\n                        {currency === 'UZS'\r\n                            ? item?.totalpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.totalprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(item)}\r\n                            />\r\n                            {\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() => linkToSale(item)}\r\n                                    isDisabled={item?.position !== 'delivered'}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </td>\r\n                    <td className='td border-r-0'>\r\n                        <SelectTable\r\n                            options={createOptions(item.position)}\r\n                            value={createValue(item.position)}\r\n                            onSelect={(e) => handleChange(e, item, index)}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {map} from 'lodash'\r\nexport const RegisterIncomingTableRow = ({\r\n    changeHandler,\r\n    data,\r\n    Delete,\r\n    currency,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr key={product._id} className='tr'>\r\n                    <td className='py-0 td text-left'>{index + 1}</td>\r\n                    <td className='py-0 td text-right'>\r\n                        {product?.product?.code}\r\n                    </td>\r\n                    <td className='py-0 td text-left'>\r\n                        {product?.product?.name}\r\n                    </td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            onChange={(e) =>\r\n                                changeHandler(e, 'pieces', product._id)\r\n                            }\r\n                            type={'number'}\r\n                            value={product?.pieces}\r\n                        />\r\n                    </td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            onChange={(e) =>\r\n                                changeHandler(e, 'unitprice', product._id)\r\n                            }\r\n                            type={'number'}\r\n                            value={\r\n                                currency === 'USD'\r\n                                    ? product.unitprice\r\n                                    : product.unitpriceuzs\r\n                            }\r\n                        />\r\n                    </td>\r\n                    <td className='py-0 td text-error-500 text-right'>\r\n                        {currency === 'USD'\r\n                            ? product.oldprice.toLocaleString('ru-Ru')\r\n                            : product.oldpriceuzs.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-0 td text-right'>\r\n                        {currency === 'USD'\r\n                            ? product.totalprice.toLocaleString('ru-Ru')\r\n                            : product.totalpriceuzs.toLocaleString(\r\n                                  'ru-Ru'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            onChange={(e) =>\r\n                                changeHandler(e, 'sellingprice', product._id)\r\n                            }\r\n                            type={'number'}\r\n                            value={\r\n                                currency === 'USD'\r\n                                    ? product.sellingprice\r\n                                    : product.sellingpriceuzs\r\n                            }\r\n                        />\r\n                    </td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            onChange={(e) =>\r\n                                changeHandler(e, 'tradeprice', product._id)\r\n                            }\r\n                            type={'number'}\r\n                            value={\r\n                                currency === 'USD'\r\n                                    ? product.tradeprice\r\n                                    : product.tradepriceuzs\r\n                            }\r\n                        />\r\n                    </td>\r\n                    <td className='py-0 td border-r-0'>\r\n                        <div className='flex justify-center items-center'>\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(product)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn.js'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {\r\n    IoCheckmarkCircleSharp,\r\n    IoCloseCircleSharp,\r\n    IoHourglass,\r\n} from 'react-icons/io5'\r\nimport SelectTable from '../../SelectTable/SelectTable.js'\r\n\r\nexport const RegisterOrdersTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    Print,\r\n}) => {\r\n    const navigate = useNavigate()\r\n    const linkToSale = (position, order) => {\r\n        navigate('/dukonlar/buyurtma_berish/buyurtmalar', {\r\n            state: {order: {...order}, position},\r\n        })\r\n    }\r\n    const positions = [\r\n        {name: \"so'ralgan\", position: 'requested'},\r\n        {name: 'tasdiqlangan', position: 'accepted'},\r\n        {name: \"jo'natilgan\", position: 'send'},\r\n        {name: 'qabul qilish', position: 'delivered'},\r\n        {name: 'yakunlangan', position: 'completed'},\r\n    ]\r\n\r\n    const createOptions = (currentPosition) => {\r\n        let hasEqual = false\r\n        const check = (position, index) => {\r\n            if (currentPosition === 'requested' && index === 0) return false\r\n            if (\r\n                (currentPosition === 'send' ||\r\n                    currentPosition === 'delivered') &&\r\n                index === 3\r\n            )\r\n                return false\r\n            if (currentPosition === 'send' && index === 3) return false\r\n            return true\r\n        }\r\n        const checkPosition = ({position, currentPosition, index}) => {\r\n            if (position.position === currentPosition) {\r\n                hasEqual = true\r\n            }\r\n            return {\r\n                label: (\r\n                    <span className='flex'>\r\n                        {position.position === currentPosition || !hasEqual ? (\r\n                            <IoCheckmarkCircleSharp size={17} color={'green'} />\r\n                        ) : (\r\n                            <IoHourglass size={17} color='#F89009' />\r\n                        )}\r\n                        <span className='pl-2'>{position.name}</span>\r\n                    </span>\r\n                ),\r\n                value: position.position,\r\n                isDisabled: check(position.position, index),\r\n            }\r\n        }\r\n        return map(positions, (position, index) =>\r\n            checkPosition({position, currentPosition, index})\r\n        )\r\n    }\r\n    const createValue = (currentPosition) => {\r\n        const check = currentPosition === 'rejected'\r\n        const val = positions.find((pos) => pos.position === currentPosition)\r\n        return {\r\n            value: val?.position,\r\n            label: (\r\n                <span className='flex'>\r\n                    {check ? (\r\n                        <IoCloseCircleSharp size={17} color={'red'} />\r\n                    ) : (\r\n                        <IoCheckmarkCircleSharp size={17} color='green' />\r\n                    )}{' '}\r\n                    <span className='pl-2'>\r\n                        {check ? 'red etilgan' : val?.name}\r\n                    </span>\r\n                </span>\r\n            ),\r\n            isDisabled: true,\r\n        }\r\n    }\r\n    const handleChange = (e, order) => {\r\n        ;(e.value === 'requested' || e.value === 'delivered') &&\r\n            linkToSale(e.value, order)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-end '>\r\n                        <div className='flex justify-between'>\r\n                            <span>\r\n                                {new Date(item?.createdAt).toLocaleTimeString()}\r\n                            </span>\r\n                            <span>\r\n                                {new Date(item?.createdAt).toLocaleDateString()}\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                    <td className='td text-end'>{item?.sender?.name}</td>\r\n                    <td className='td text-start'>{item?.sender?.inn}</td>\r\n                    <td className='td text-end'>{item?.id}</td>\r\n                    <td className='td text-end'>{item?.products?.length}</td>\r\n                    <td className='td text-end font-bold'>\r\n                        {currency === 'UZS'\r\n                            ? item?.totalpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.totalprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(item)}\r\n                            />\r\n                            {\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() => linkToSale(item)}\r\n                                    isDisabled={item?.position !== 'requested'}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </td>\r\n                    <td className='td border-r-0'>\r\n                        <SelectTable\r\n                            options={\r\n                                item?.position !== 'rejected'\r\n                                    ? createOptions(item.position)\r\n                                    : []\r\n                            }\r\n                            defaultValue={createValue(item.position)}\r\n                            onSelect={(e) => handleChange(e, item)}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport { filter, map } from 'lodash'\r\nimport { IoAdd, IoEye, IoEyeOff, IoRemove } from 'react-icons/io5'\r\nimport { useSelector } from 'react-redux'\r\nimport { t } from 'i18next'\r\n\r\nexport const RegisterSaleTableRow = (\r\n    {\r\n        data,\r\n        Delete,\r\n        changeHandler,\r\n        currency,\r\n        increment,\r\n        decrement,\r\n        lowUnitpriceProducts,\r\n        wholeSale,\r\n        productId,\r\n        productModal\r\n    }) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    const { filials } = useSelector((state) => state.registerSelling)\r\n    const { market } = useSelector((state) => state.login)\r\n    const [showIncomingPrice, setShowIncomingPrice] = useState([])\r\n    const changeShow = (i) => {\r\n        const price = [...showIncomingPrice]\r\n        price[i] = !price[i]\r\n        setShowIncomingPrice([...price])\r\n    }\r\n    useEffect(() => {\r\n        setShowIncomingPrice(map(data, () => false))\r\n    }, [data])\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                !isMobile ? <tr className={`tr ${filter(lowUnitpriceProducts, id => id === product.product._id).length > 0 ? 'bg-warning-200' : ''}`}\r\n                    key={'salerow-' + index + 1}>\r\n                    <td className='text-left td'>{index + 1}</td>\r\n                    {filials.length > 1 && <td className='td w-[100px]'>\r\n                        <select onChange={(e) => changeHandler(\r\n                            product.product._id,\r\n                            {\r\n                                filial: e.target.value,\r\n                                productcode: product.product.code,\r\n                                categorycode: product.categorycode\r\n                            },\r\n                            'select'\r\n                        )} value={product.filial} className='w-full outline-none border-[1px] rounded h-[30px]'>\r\n                            {filials.length > 0 && filials.map((filial, ind) =>\r\n                                <option key={ind} value={filial.value}>{filial.label}</option>\r\n                            )}\r\n                        </select>\r\n                    </td>}\r\n                    <td className='text-left td font-bold'><span style={{ color: product?.filialProductsTotal > 0 ? \"green\" : 'red' }} >{product?.filialProductsTotal}</span></td>\r\n                    <td className='text-left td'>{product.product.name}</td>\r\n                    <td className='text-left td'>\r\n                        <span className={'flex gap-[0.6rem] items-center'}>\r\n                            <button\r\n                                className={'rounded-[4px] duration-100 bg-error-500 hover:bg-error-600 p-[0.2rem] text-base text-white-900 active:scale-95'}\r\n                                onClick={() => decrement(product.product._id)}><IoRemove\r\n                                    size={'0.875rem'} /></button>\r\n                            <TableInput\r\n                                value={product.pieces === 0 ? '' : product.pieces}\r\n                                onChange={(e) =>\r\n                                    changeHandler(\r\n                                        product.product._id,\r\n                                        e.target.value,\r\n                                        'pieces'\r\n                                    )\r\n                                }\r\n                                type={'number'}\r\n                            />\r\n                            <button\r\n                                className={'rounded-[4px] duration-100 bg-success-500 hover:bg-success-600 p-[0.2rem] text-base text-white-900 active:scale-95'}\r\n                                onClick={() => increment(product.product._id)}><IoAdd\r\n                                    size={'0.875rem'} /></button>\r\n                        </span>\r\n                    </td>\r\n                    <td className='text-left td'>{product.unitname}</td>\r\n                    {filials.length > 1 && <td className='text-left td'>\r\n                        <TableInput\r\n                            value={product.fromFilial}\r\n                            onChange={(e) =>\r\n                                changeHandler(\r\n                                    product.product._id,\r\n                                    e.target.value,\r\n                                    'fromFilial'\r\n                                )\r\n                            }\r\n                            type={'number'}\r\n                            disabled={product.filial === market._id && true}\r\n                        />\r\n                    </td>}\r\n                    <td className='text-left td'>\r\n                        <TableInput\r\n                            value={\r\n                                currency !== 'UZS'\r\n                                    ? wholeSale ? product.tradeprice || product.unitprice : product.unitprice\r\n                                    : wholeSale ? product.tradepriceuzs || product.unitpriceuzs : product.unitpriceuzs\r\n                            }\r\n                            onChange={(e) =>\r\n                                changeHandler(\r\n                                    product.product._id,\r\n                                    e.target.value,\r\n                                    'unitprice'\r\n                                )\r\n                            }\r\n                            type={'number'}\r\n                        />\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {currency !== 'UZS'\r\n                            ? product.totalprice.toLocaleString('ru-Ru')\r\n                            : product.totalpriceuzs.toLocaleString(\r\n                                'ru-Ru'\r\n                            )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(index)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                    <td className='td border-r-0 text-success-500'>\r\n                        <div className='flex justify-between'>\r\n                            <button onClick={() => changeShow(index)}>\r\n                                {showIncomingPrice[index] ? (\r\n                                    <IoEye />\r\n                                ) : (\r\n                                    <IoEyeOff />\r\n                                )}\r\n                            </button>\r\n                            <span className='min-w-fit'>\r\n                                {showIncomingPrice[index]\r\n                                    ? currency === 'UZS'\r\n                                        ? product.incomingpriceuzs.toLocaleString(\r\n                                            'ru-Ru'\r\n                                        ) + ' UZS'\r\n                                        : product.incomingprice.toLocaleString(\r\n                                            'ru-Ru'\r\n                                        ) + ' USD'\r\n                                    : ''}\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                </tr> :\r\n                    <li onClick={() => { productModal(true); productId(product.product._id); }} className='w-[90vw]  bg-white list-none mb-[10px] ps-0 rounded-md'>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[green]'>\r\n                                {product.product.name}\r\n                            </p>\r\n\r\n\r\n\r\n                        </li>\r\n\r\n                        <li className='border p-[10px] text-[blue] text-sm flex justify-between  items-center border-s-0 border-t-0 border-e-0 p-[10px] text-sm flex justify-between  items-center '>\r\n                            <p className='text-[red]'>\r\n                                <span> {t('Soni')}: </span>\r\n                                {product.pieces}\r\n                            </p>\r\n                            <p>\r\n                                <span className='me-2 w-8'>{t('Narxi')}: </span>\r\n                                {currency !== 'UZS'\r\n                                    ? wholeSale ? product.tradeprice || product.unitprice : product.unitprice\r\n                                    : wholeSale ? product.tradepriceuzs || product.unitpriceuzs : product.unitpriceuzs}{' '}\r\n                                {currency}\r\n                            </p>\r\n\r\n                        </li>\r\n                        <li className=' p-[10px] text-sm flex justify-between  items-center text-[green]'>\r\n                            <span className='me-2 w-8'>{t('Jami')}: </span>\r\n                            {currency !== 'UZS'\r\n                                ? product.totalprice.toLocaleString('ru-Ru')\r\n                                : product.totalpriceuzs.toLocaleString(\r\n                                    'ru-Ru'\r\n                                )}{' '}\r\n                            {currency}\r\n\r\n                        </li>\r\n\r\n\r\n                    </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {t} from 'i18next'\r\n\r\nexport const ReturnProductsTableRow = ({\r\n                                           data,\r\n                                           currentPage,\r\n                                           countPage,\r\n                                           currency,\r\n                                           Print\r\n                                       }) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            {map(data, (connector, index) => (\r\n                !isMobile ? <tr className='tr' key={uniqueId('connector')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + 1 + index}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {new Date(connector.createdAt).toLocaleDateString()}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {connector.saleconnector.id}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {connector.saleconnector?.client &&\r\n                                connector.saleconnector?.client?.name}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {Number(connector.count).toLocaleString()}\r\n                        </td>\r\n                        <td className='text-left td font-medium'>\r\n                            {currency === 'UZS'\r\n                                ? connector.totalpriceuzs.toLocaleString('ru-RU')\r\n                                : connector.totalprice.toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-warning-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-medium'>\r\n                            {currency === 'UZS'\r\n                                ? connector.backuzs.toLocaleString('ru-RU')\r\n                                : connector.back.toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-success-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='td border-r-0 py-[6px]'>\r\n                            <div className='flex justify-center items-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-primary-800'}\r\n                                    onClick={() => Print(connector.dailyconnector)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr> :\r\n                    <li className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p>{currentPage * countPage + 1 + index}- {new Date(connector.createdAt).toLocaleDateString()}</p>\r\n                            <p className='text-[blue]'>{t('ID')}: {connector.saleconnector.id}</p>\r\n                        </li>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{t('Mijoz')}: </span>{connector.saleconnector?.client &&\r\n                                connector.saleconnector?.client?.name}</p>\r\n                            <p className='text-[blue]'>{t('Soni')}: {Number(connector.count).toLocaleString()}</p>\r\n                        </li>\r\n                        <li className='flex justify-between p-[10px]  '><p className='text-[green]'>\r\n                            <span>{t('Jami')}: </span>{currency === 'UZS'\r\n                            ? connector.totalpriceuzs.toLocaleString('ru-RU')\r\n                            : connector.totalprice.toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-warning-500'>{currency}</span></p>\r\n                            <p className='text-[blue]'>{t('Qaytarilgan')}: {currency === 'UZS'\r\n                                ? connector.backuzs.toLocaleString('ru-RU')\r\n                                : connector.back.toLocaleString('ru-RU')}{' '}\r\n                                <span className='text-success-500'>{currency}</span></p>\r\n                        </li>\r\n                        <li className='flex justify-end p-[10px]  '>\r\n                            <div className='flex justify-center items-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-primary-800'}\r\n                                    onClick={() => Print(connector.dailyconnector)}\r\n                                />\r\n                            </div>\r\n                        </li>\r\n                    </li>\r\n            ))}\r\n            {!isMobile && <tr className='tr'>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                    {data.reduce((prev, el) => prev + el.count, 0)}\r\n                </td>\r\n                <td className='text-left td font-medium'>\r\n                    {currency === 'UZS'\r\n                        ? data.reduce((prev, el) => prev + el.totalpriceuzs, 0).toLocaleString('ru-RU')\r\n                        : data.reduce((prev, el) => prev + el.totalprice, 0).toLocaleString('ru-RU')}{' '}\r\n                    <span className='text-warning-500'>{currency}</span>\r\n                </td>\r\n                <td className='text-left td py-[0.625rem] font-medium'>\r\n                    {currency === 'UZS'\r\n                        ? data.reduce((prev, el) => prev + el.backuzs, 0).toLocaleString('ru-RU')\r\n                        : data.reduce((prev, el) => prev + el.back, 0).toLocaleString('ru-RU')\r\n                    }{' '}\r\n                    <span className='text-success-500'>{currency}</span>\r\n                </td>\r\n                <td className='td border-r-0 py-[6px]'>\r\n\r\n                </td>\r\n            </tr>}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {map} from 'lodash'\r\nimport {t} from 'i18next'\r\n\r\nexport const SaleReturnTableRow = ({\r\n                                       data,\r\n                                       changeHandler,\r\n                                       currency,\r\n                                       onKeyUp\r\n                                   }) => {\r\n                                    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n                                    useEffect(() => {\r\n                                        const handleResize = () => {\r\n                                            setIsMobile(window.innerWidth <= 768);\r\n                                        };\r\n                                \r\n                                        window.addEventListener('resize', handleResize);\r\n                                \r\n                                        return () => {\r\n                                            window.removeEventListener('resize', handleResize);\r\n                                        };\r\n                                    }, []);\r\n    \r\n    return (\r\n        <>\r\n            {map(data,(salereturn, index) => (\r\n                !isMobile?<tr className='tr' key={salereturn._id}>\r\n                    <td className='text-left td'>{index + 1}</td>\r\n                    <td className='text-left td'>\r\n                        {salereturn.productdata.code}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {salereturn.productdata.name}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {salereturn.product.pieces}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {(currency === 'UZS'\r\n                                ? salereturn.product.totalpriceuzs\r\n                                : salereturn.product.totalprice\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td py-[5px]'>\r\n                        <TableInput\r\n                            onKeyUp={onKeyUp}\r\n                            onChange={(e) =>\r\n                                changeHandler(\r\n                                    e.target.value,\r\n                                    salereturn._id,\r\n                                    index\r\n                                )\r\n                            }\r\n                            value={salereturn.pieces}\r\n                            type={'number'}\r\n                        />\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {currency === 'UZS'\r\n                            ? salereturn.totalpriceuzs\r\n                            : salereturn.totalprice}{' '}\r\n                        {currency}\r\n                    </td>\r\n                </tr>:\r\n                <li className='text-sm w-[90vw]  bg-[white] rounded-lg m-1 list-none'>\r\n                    <li className='border p-[10px] text-[black] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                        \r\n                        <p className='text-[green]'>\r\n                            {t('Nomi')}{': '}\r\n                            {salereturn.productdata.name}\r\n                        </p>\r\n                    </li>\r\n                    <li className='border p-[10px] text-[black] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                        <p className='text-[blue]'>\r\n                            {t('Soni')}{': '}\r\n                            {salereturn.product.pieces}\r\n                        </p>\r\n                        <p className='text-[green]'>\r\n                            {t('Jami')}{': '}\r\n                            {(currency === 'UZS'\r\n                                ? salereturn.product.totalpriceuzs\r\n                                : salereturn.product.totalprice\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                        </p>\r\n                    </li>\r\n                    <li className=' p-[10px] text-[black] text-sm flex items-center justify-between border-s-0 border-t-0 border-e-0'>\r\n                        <p >\r\n                            <div className='h-[30px] w-[150px]'>\r\n\r\n                            <TableInput\r\n                            onKeyUp={onKeyUp}\r\n                            onChange={(e) =>\r\n                                changeHandler(\r\n                                    e.target.value,\r\n                                    salereturn._id,\r\n                                    index\r\n                                )\r\n                            }\r\n                            value={salereturn.pieces}\r\n                            type={'number'}\r\n                            />\r\n                            </div>\r\n                        </p>\r\n                        <p className='text-[green]'>\r\n                            {t('Jami')}{': '}\r\n                            {currency === 'UZS'\r\n                            ? salereturn.totalpriceuzs\r\n                            : salereturn.totalprice}{' '}\r\n                        {currency}\r\n                        </p>\r\n                    </li>\r\n                </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {useLocation, useNavigate} from 'react-router-dom'\r\nimport {t} from 'i18next'\r\n\r\nexport const SalesListTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    Print,\r\n    sellers,\r\n    addPlus,\r\n    editComment\r\n}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    const location = useLocation()\r\n\r\n    const result = (prev, usd, uzs) => {\r\n        return currency === 'USD' ? prev + usd : prev + uzs\r\n    }\r\n    const reduceEl = (arr, usd, uzs) => {\r\n        return arr.length > 0 && arr.reduce((prev, item) => {\r\n            return result(prev, item[usd], item[uzs])\r\n        }, 0) || 0\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n    const linkToSale = (saleconnector, returnProducts) => {\r\n        navigate(`${sellers ? '/' : '/sotuv/sotish'}`, {\r\n            replace: true,\r\n            state: { saleconnector, returnProducts },\r\n        })\r\n    }\r\n\r\n    if (location.pathname.includes('/kassa/sale')) {\r\n        return (\r\n            <>\r\n                {map(data, (saleconnector, index) => (\r\n                    <tr className='tr' key={uniqueId('sales')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + 1 + index}\r\n                        </td>\r\n                        <td className='td '>\r\n                            <div className='flex justify-between'>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.updatedAt\r\n                                    ).toLocaleDateString()}\r\n                                </span>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.updatedAt\r\n                                    ).toLocaleTimeString()}{' '}\r\n                                </span>\r\n                            </div>\r\n                        </td>\r\n                        <td className='text-left td'>{saleconnector.id}</td>\r\n                        <td className='text-left td'>\r\n                            {saleconnector?.client?.name ? (\r\n                                <div className='flex justify-between items-center'>\r\n                                    <span> {saleconnector?.client?.name}</span>\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() => addPlus(saleconnector._id)}\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                <div className='flex justify-center items-center'>\r\n                                    <TableBtn\r\n                                        type={'add'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() => addPlus(saleconnector._id)}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </td>\r\n                        <td className='text-success-500 text-left td'>\r\n                            {reduceEl(\r\n                                saleconnector.products,\r\n                                'totalprice',\r\n                                'totalpriceuzs'\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-warning-500 text-left td'>\r\n                            {(\r\n                                reduceEl(\r\n                                    saleconnector.payments,\r\n                                    'cash',\r\n                                    'cashuzs'\r\n                                ) +\r\n                                reduceEl(\r\n                                    saleconnector.payments,\r\n                                    'card',\r\n                                    'carduzs'\r\n                                ) +\r\n                                reduceEl(\r\n                                    saleconnector.payments,\r\n                                    'transfer',\r\n                                    'transferuzs'\r\n                                )\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-error-500 text-left td'>\r\n                            {(\r\n                                reduceEl(\r\n                                    saleconnector.products,\r\n                                    'totalprice',\r\n                                    'totalpriceuzs'\r\n                                ) -\r\n                                reduceEl(\r\n                                    saleconnector.payments,\r\n                                    'payment',\r\n                                    'paymentuzs'\r\n                                ) -\r\n                                reduceEl(\r\n                                    saleconnector.discounts,\r\n                                    'discount',\r\n                                    'discountuzs'\r\n                                )\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-left td  '>\r\n                            {saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1].comment ? (\r\n                                <div className='flex justify-between items-center'>\r\n                                    <span>{saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1].comment}</span>\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() => editComment(saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1], saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1].comment)}\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                <div className='flex justify-center items-center'>\r\n                                    <TableBtn\r\n                                        type={'add'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() => editComment(saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1], saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1].comment)}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                        </td>\r\n\r\n                        <td className='py-[0.375rem] td border-r-0'>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-primary-800'}\r\n                                    onClick={() => Print(saleconnector)}\r\n                                />\r\n                                {!location.pathname.includes('/kassa/sale') && <>\r\n                                    <TableBtn\r\n                                        type={'add'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() => linkToSale(saleconnector)}\r\n                                    />\r\n                                    <TableBtn\r\n                                        type={'return'}\r\n                                        bgcolor={'bg-error-500'}\r\n                                        onClick={() =>\r\n                                            linkToSale(\r\n                                                saleconnector.saleconnector,\r\n                                                true\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                </>}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    \r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            {map(data, (saleconnector, index) => (\r\n                !isMobile?<tr className='tr' key={uniqueId('sales')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td '>\r\n                        <div className='flex justify-between'>\r\n                            <span>\r\n                                {new Date(\r\n                                    saleconnector.updatedAt\r\n                                ).toLocaleDateString()}\r\n                            </span>\r\n                            <span>\r\n                                {new Date(\r\n                                    saleconnector.updatedAt\r\n                                ).toLocaleTimeString()}{' '}\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                    <td className='text-left td'>{saleconnector.id}</td>\r\n                    <td className='text-left td'>\r\n                        {saleconnector?.client?.name ? (\r\n                            <div className='flex justify-between items-center'>\r\n                                <span> {saleconnector?.client?.name}</span>\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-success-500'}\r\n                                    onClick={() => addPlus(saleconnector._id)}\r\n                                />\r\n                            </div>\r\n                        ) : (\r\n                            <div className='flex justify-center items-center'>\r\n                                <TableBtn\r\n                                    type={'add'}\r\n                                    bgcolor={'bg-success-500'}\r\n                                    onClick={() => addPlus(saleconnector._id)}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </td>\r\n                    <td className='text-success-500 text-left td'>\r\n                        {reduceEl(\r\n                            saleconnector.products,\r\n                            'totalprice',\r\n                            'totalpriceuzs'\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-warning-500 text-left td'>\r\n                        {reduceEl(\r\n                            saleconnector.discounts,\r\n                            'discount',\r\n                            'discountuzs'\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-error-500 text-left td'>\r\n                        {(\r\n                            reduceEl(\r\n                                saleconnector.products,\r\n                                'totalprice',\r\n                                'totalpriceuzs'\r\n                            ) -\r\n                            reduceEl(\r\n                                saleconnector.payments,\r\n                                'payment',\r\n                                'paymentuzs'\r\n                            ) -\r\n                            reduceEl(\r\n                                saleconnector.discounts,\r\n                                'discount',\r\n                                'discountuzs'\r\n                            )\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td  '>\r\n                        {saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1].comment ? (\r\n                            <div className='flex justify-between items-center'>\r\n                                <span>{saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1].comment}</span>\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-success-500'}\r\n                                    onClick={() => editComment(saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1], saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1].comment)}\r\n                                />\r\n                            </div>\r\n                        ) : (\r\n                            <div className='flex justify-center items-center'>\r\n                                <TableBtn\r\n                                    type={'add'}\r\n                                    bgcolor={'bg-success-500'}\r\n                                    onClick={() => editComment(saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1], saleconnector.dailyconnectors[saleconnector.dailyconnectors.length - 1].comment)}\r\n                                />\r\n                            </div>\r\n                        )}\r\n\r\n                    </td>\r\n                    <td className='py-[0.375rem] td border-r-0'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(saleconnector)}\r\n                            />\r\n                            {!location.pathname.includes('/kassa/sale') && <>\r\n                                <TableBtn\r\n                                    type={'add'}\r\n                                    bgcolor={'bg-success-500'}\r\n                                    onClick={() => linkToSale(saleconnector)}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'return'}\r\n                                    bgcolor={'bg-error-500'}\r\n                                    onClick={() =>\r\n                                        linkToSale(\r\n                                            saleconnector.saleconnector,\r\n                                            true\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </>}\r\n                        </div>\r\n                    </td>\r\n                </tr>:\r\n                <li onClick={() => Print(saleconnector)} className='text-sm w-[90vw] bg-[white] rounded-lg m-1 list-none'>\r\n                    <li className='border p-[10px] text-[black] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                        <p>{t('Mijoz')}:{' '}\r\n                        {saleconnector?.client?.name}\r\n                        </p>\r\n                        <p>\r\n                        <span >\r\n                                {new Date(\r\n                                    saleconnector.updatedAt\r\n                                ).toLocaleDateString()}{' '}\r\n                            </span>\r\n                            <span>\r\n                                {new Date(\r\n                                    saleconnector.updatedAt\r\n                                ).toLocaleTimeString()}{' '}\r\n                            </span>\r\n                        </p>\r\n                    </li>\r\n                    <li className='border p-[10px] text-[blue] text-sm flex items-center justify-between border-s-0 border-t-0 border-e-0'>\r\n                        \r\n                    <p className='text-[green]'>\r\n                    {t('Jami')}{' '}{reduceEl(\r\n                            saleconnector.products,\r\n                            'totalprice',\r\n                            'totalpriceuzs'\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </p>\r\n                    <p className='text-warning-500'>\r\n                    {t('Chegirma')}{`: `}\r\n                    {reduceEl(\r\n                            saleconnector.discounts,\r\n                            'discount',\r\n                            'discountuzs'\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </p>\r\n                        \r\n                    </li>\r\n                    <li className=' p-[10px] text-[blue] text-sm flex items-center justify-between '>\r\n                        \r\n                    <p className='text-[red]'>\r\n                    {t('Qarz')}{' '}\r\n                    {(\r\n                            reduceEl(\r\n                                saleconnector.products,\r\n                                'totalprice',\r\n                                'totalpriceuzs'\r\n                            ) -\r\n                            reduceEl(\r\n                                saleconnector.payments,\r\n                                'payment',\r\n                                'paymentuzs'\r\n                            ) -\r\n                            reduceEl(\r\n                                saleconnector.discounts,\r\n                                'discount',\r\n                                'discountuzs'\r\n                            )\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </p>\r\n                    <p>\r\n                    {!location.pathname.includes('/kassa/sale') && <>\r\n                                <div className='flex gap-2'>\r\n                                <TableBtn\r\n                                    type={'add'}\r\n                                    bgcolor={'bg-success-500'}\r\n                                    onClick={() => linkToSale(saleconnector)}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'return'}\r\n                                    bgcolor={'bg-error-500'}\r\n                                    onClick={() =>\r\n                                        linkToSale(\r\n                                            saleconnector.saleconnector,\r\n                                            true\r\n                                        )\r\n                                    }\r\n                                />\r\n                                </div>\r\n                            </>}\r\n                    </p>\r\n                        \r\n                    </li>\r\n                </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nexport const SavedOrdersTableRow = ({data, Delete, handlePrint}) => {\r\n    const navigate = useNavigate()\r\n    const linkToSale = (temporary) => {\r\n        navigate('/dukonlar/buyurtma_berish/buyurtmalar', {\r\n            state: {...temporary},\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>{1 + index}</td>\r\n                    <td className='td text-end'>\r\n                        {new Date(item?.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {new Date(item?.createdAt).toLocaleTimeString()}\r\n                    </td>\r\n                    <td className='td text-left'>\r\n                        {item?.temporary?.partner?.label}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {item?.temporary?.tableProducts?.length}\r\n                    </td>\r\n                    <td className='td text-end font-bold'>\r\n                        {item?.temporary?.totalPrice?.toLocaleString('ru-RU')}{' '}\r\n                        USD\r\n                    </td>\r\n                    <td className='td text-end font-bold'>\r\n                        {item?.temporary?.totalPriceUzs?.toLocaleString(\r\n                            'ru-RU'\r\n                        )}{' '}\r\n                        UZS\r\n                    </td>\r\n                    <td className='td border-r-0'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                onClick={() => handlePrint(item.temporary)}\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                            />\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500'}\r\n                                onClick={() => linkToSale(item)}\r\n                            />\r\n                            <TableBtn\r\n                                onClick={() => Delete(item._id)}\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {roundUsd, roundUzs} from '../../../App/globalFunctions'\r\nimport {t} from 'i18next'\r\n\r\nexport const SellerTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    Edit,\r\n    linkToSellerReports,\r\n    currency,\r\n    modalOpen1\r\n}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {map(data, (seller, index) => (\r\n                !isMobile?<tr className='tr' key={uniqueId('filial')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + index + 1}\r\n                    </td>\r\n                    <td className='text-left td'>{seller.firstname}</td>\r\n                    <td className='text-left td'>{seller.lastname}</td>\r\n                    <td className='text-left td'>{seller.phone}</td>\r\n                    <td className='text-left td'>{seller?.sales || 0}</td>\r\n                    <td className='text-left td'>\r\n                        {currency === 'USD'\r\n                            ? seller?.totalsales?.toLocaleString('ru-RU')\r\n                            : seller?.totalsalesuzs?.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {currency === 'USD'\r\n                            ? roundUsd(seller?.profit).toLocaleString('ru-RU')\r\n                            : roundUzs(seller?.profituzs).toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='border-r-0 td py-[0.375rem]'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500'}\r\n                                onClick={() => Edit(seller)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'info'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => linkToSellerReports(seller._id)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>:\r\n                <li className='w-[90vw]  bg-white list-none mb-[10px]  rounded-md'>\r\n                <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                    <p className='text-lg'>\r\n                    {seller.firstname}{' '}\r\n                    {seller.lastname}\r\n                    </p>\r\n                </li>\r\n                <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                    <p >\r\n                    {t('Sotuvlar')}{': '}\r\n                    {seller?.sales || 0}\r\n                    </p>\r\n                    <p >\r\n                    {t('Summa')}{': '}\r\n                    {currency === 'USD'\r\n                            ? seller?.totalsales?.toLocaleString('ru-RU')\r\n                            : seller?.totalsalesuzs?.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </p>\r\n                </li>\r\n                <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                    <p className='text-[green]'>\r\n                    {t('Sof foyda')}{': '}\r\n                    {currency === 'USD'\r\n                            ? roundUsd(seller?.profit).toLocaleString('ru-RU')\r\n                            : roundUzs(seller?.profituzs).toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </p>\r\n                    \r\n                </li>\r\n                <li className=' p-[10px] text-sm flex justify-center border-s-0 '>\r\n                    <p className='text-[green]'>\r\n                    <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500 w-[41vw]'}\r\n                                onClick={() => {\r\n                                    Edit(seller)\r\n                                    modalOpen1(true)\r\n                                }}\r\n                            />\r\n                            <TableBtn\r\n                                type={'info'}\r\n                                bgcolor={'bg-primary-800 w-[41vw]'}\r\n                                onClick={() => linkToSellerReports(seller._id)}\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                    \r\n                </li>\r\n                </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import {map} from 'lodash'\r\nimport React from 'react'\r\nimport {IoCheckmark} from 'react-icons/io5'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\n\r\nconst SupplierIncomingsTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    Pay,\r\n}) => {\r\n    const reducer = (arr, key) =>\r\n        arr.reduce((prev, item) => prev + item[key], 0)\r\n    const changeCurrency = (item, key) =>\r\n        currency === 'USD' ? item[key] : item[key + 'uzs']\r\n\r\n    return (\r\n        <>\r\n            {map(data, (connector, index) => (\r\n                <tr key={connector._id} className='tr'>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {new Date(connector.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {new Date(connector.createdAt).toLocaleTimeString()}\r\n                    </td>\r\n                    <td className='td text-right'>{connector.id}</td>\r\n                    <td className='td text-right'>\r\n                        {connector.incoming.length}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {reducer(connector.incoming, 'pieces')}\r\n                    </td>\r\n                    <td className='td text-right font-medium text-primary-700'>\r\n                        {changeCurrency(connector, 'total').toLocaleString(\r\n                            'ru-RU'\r\n                        )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right font-medium text-success-500'>\r\n                        {changeCurrency(\r\n                            connector,\r\n                            'totalpayment'\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td\r\n                        className={`td text-right font-medium ${\r\n                            connector.debt !== 0\r\n                                ? 'text-error-500'\r\n                                : 'text-black-900'\r\n                        }`}\r\n                    >\r\n                        {changeCurrency(connector, 'debt').toLocaleString(\r\n                            'ru-RU'\r\n                        )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-[0.375rem] td border-r-0 text-center'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            {connector.debt !== 0 ? (\r\n                                <TableBtn\r\n                                    type={'pay'}\r\n                                    bgcolor={'bg-error-500'}\r\n                                    onClick={() => Pay(connector)}\r\n                                />\r\n                            ) : (\r\n                                <div\r\n                                    className={`w-[24px] h-[24px] flex justify-center items-center rounded-full bg-success-500`}\r\n                                >\r\n                                    <IoCheckmark color='white' />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SupplierIncomingsTableRow\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const SupplierTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    Edit,\r\n    Delete,\r\n    linkToSupplierReport,\r\n}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {map(data, (supplier, index) => (\r\n                !isMobile?<tr key={supplier._id} className='tr'>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-left'>{supplier.name}</td>\r\n                    <td className='py-[0.375rem] td border-r-0 text-center'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'info'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() =>\r\n                                    linkToSupplierReport(supplier._id)\r\n                                }\r\n                            />\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(supplier)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor='bg-error-500'\r\n                                onClick={() => Delete(supplier)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>:\r\n                <li className='text-sm w-[90vw]  bg-[white] rounded-lg m-2 list-none'>\r\n                    <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                        <p>{currentPage * countPage + 1 + index}</p> \r\n                        <p className='text-[green]'>{supplier.name}</p>\r\n                    </li>\r\n                    <li className='flex justify-end p-[10px] '>\r\n                    <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            \r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(supplier)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor='bg-error-500'\r\n                                onClick={() => Delete(supplier)}\r\n                            />\r\n                        </div>\r\n                    </li>\r\n                </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {uniqueId, map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\n\r\nexport const TemporaryIncomingsTableRow = ({\r\n                                               data,\r\n                                               Print,\r\n                                               Edit,\r\n                                               Delete,\r\n                                               currency\r\n                                           }) => {\r\n    return (\r\n        <>\r\n            {map(data,(temporary, index) => (\r\n                <tr className='tr' key={uniqueId('temporary')}>\r\n                    <td className='td'>{1 + index}</td>\r\n                    <td className='td text-left'>{temporary.supplier.name}</td>\r\n                    <td className='td text-right'>\r\n                        {temporary.incomings.pieces}\r\n                    </td>\r\n                    <td className='text-success-500 td text-right'>\r\n                        {(currency === 'USD'\r\n                                ? temporary.incomings.totalprice\r\n                                : temporary.incomings.totalpriceuzs\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {new Date(temporary.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {new Date(temporary.createdAt).toLocaleTimeString()} PM\r\n                    </td>\r\n                    <td className='td py-[6px] border-r-0'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-primary-800'}\r\n                                onClick={() => Print(temporary)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500'}\r\n                                onClick={() => Edit(temporary)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(temporary)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport {t} from 'i18next'\r\n\r\nexport const TemporarySaleTableRow = ({data, Delete, currency, Print}) => {\r\n    const navigate = useNavigate()\r\n    const {user} = useSelector((state) => state.login)\r\n    const link = user?.type?.toLowerCase() === 'seller' ? '/' : '/sotuv/sotish'\r\n    const linkToSale = (temporary) => {\r\n        navigate(link, {state: {temporary: {...temporary}}})\r\n    }\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {map(data, ({_id, temporary, createdAt, user}, index) => (\r\n                !isMobile ? <tr className='tr' key={uniqueId('sale')}>\r\n                        <td className='td'>{1 + index}</td>\r\n                        <td className='td text-left'>\r\n                            {user?.firstname} {user?.lastname}\r\n                        </td>\r\n                        <td className='td text-left'>\r\n                            {temporary.userValue ||\r\n                                temporary.clientValue.label ||\r\n                                temporary.packmanValue.label ||\r\n                                `${t('Mijoz ismi kiritilmagan')}`}\r\n                        </td>\r\n                        <td className='td text-right'>\r\n                            {temporary.tableProducts.length}\r\n                        </td>\r\n                        <td className='text-success-500 td text-right'>\r\n                            {currency === 'USD'\r\n                                ? (temporary?.totalPrice || 0).toLocaleString('ru-RU')\r\n                                : (temporary?.totalPriceUzs || 0).toLocaleString('ru-RU')}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='td text-right'>\r\n                            {new Date(createdAt).toLocaleDateString()}\r\n                        </td>\r\n                        <td className='td text-right'>\r\n                            {new Date(createdAt).toLocaleTimeString()}\r\n                        </td>\r\n                        <td className='td py-[6px] border-r-0'>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-primary-800'}\r\n                                    onClick={() =>\r\n                                        Print({_id, temporary, createdAt, user})\r\n                                    }\r\n                                />\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() => linkToSale({...temporary, _id, user})}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'delete'}\r\n                                    bgcolor={'bg-error-500'}\r\n                                    onClick={() => Delete(_id)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr> :\r\n                    <li className='w-[90vw] p bg-white list-none mb-[10px] rounded-md'>\r\n                        <li className='flex p-3 justify-between border border-s-0 border-t-0 border-e-0 text-[blue]'>\r\n                            <p>\r\n                                {1 + index}-\r\n                                {new Date(createdAt).toLocaleDateString()}\r\n                            </p>\r\n                            <p>\r\n                            <span>\r\n                                {t('Vaqti: ')}\r\n                            </span>\r\n                                {new Date(createdAt).toLocaleTimeString()}\r\n                            </p>\r\n                        </li>\r\n                        <li className='flex p-3 justify-between border border-s-0 border-t-0 border-e-0 text-[green]'>\r\n                            <p>\r\n                                {t('Sotuvchi')}:\r\n                            </p>\r\n                            <p className='text-[blue]'>\r\n                                {user?.firstname} {user?.lastname}\r\n                            </p>\r\n\r\n                        </li>\r\n                        <li className='flex p-3 justify-between border border-s-0 border-t-0 border-e-0 text-[green]'>\r\n                            <p>\r\n                                {t('Mijoz')}:\r\n                            </p>\r\n                            <p className='text-[blue]'>\r\n                                {temporary.userValue ||\r\n                                    temporary.clientValue.label ||\r\n                                    temporary.packmanValue.label ||\r\n                                    `${t('Mijoz ismi kiritilmagan')}`}\r\n                            </p>\r\n\r\n                        </li>\r\n                        <li className='flex p-3 justify-between border border-s-0 border-t-0 border-e-0 text-[green]'>\r\n                            <p>\r\n                                {t('Maxsulotlar')}:\r\n                            </p>\r\n                            <p>\r\n                                {temporary.tableProducts.length}\r\n                            </p>\r\n\r\n                        </li>\r\n                        <li className='flex p-3 justify-between border border-s-0 border-t-0 border-e-0 text-[green]'>\r\n                            <p>\r\n                                {t('Jami')}:\r\n                            </p>\r\n                            <p>\r\n                                {currency === 'USD'\r\n                                    ? (temporary?.totalPrice || 0).toLocaleString('ru-RU')\r\n                                    : (temporary?.totalPriceUzs || 0).toLocaleString('ru-RU')}\r\n                                {currency}\r\n                            </p>\r\n\r\n                        </li>\r\n                        <li className='flex p-3 justify-end  text-[green]'>.\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-primary-800'}\r\n                                    onClick={() =>\r\n                                        Print({_id, temporary, createdAt, user})\r\n                                    }\r\n                                />\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() => linkToSale({...temporary, _id})}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'delete'}\r\n                                    bgcolor={'bg-error-500'}\r\n                                    onClick={() => Delete(_id)}\r\n                                />\r\n                            </div>\r\n                        </li>\r\n                    </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const UnitTableRow = ({data, currentPage, countPage, Edit, Delete}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {map(data,(unit, index) => (\r\n                !isMobile? <tr key={unit._id} className='tr'>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-left'>{unit.name}</td>\r\n                    <td className='py-[0.375rem] td border-r-0 text-center max-w-[50px]'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(unit)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor='bg-error-500 ml-2.5'\r\n                                onClick={() => Delete(unit)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>:\r\n                <li className='text-1xl w-[90vw]  bg-[white] rounded-lg m-1 list-none'>\r\n                    <li className='flex justify-between p-[10px] items-center'><p>{unit.name}</p> <p className='text-[blue]'>\r\n                    <div className='flex items-center justify-end w-[100px]'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(unit)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor='bg-error-500 ml-2.5'\r\n                                onClick={() => Delete(unit)}\r\n                            />\r\n                        </div>\r\n                        </p></li>\r\n                    \r\n                </li>\r\n                \r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import {FaSortDown, FaSortUp} from 'react-icons/fa'\r\nimport {map, uniqueId} from 'lodash'\r\n\r\nfunction Thead({headers, Sort, sortItem}) {\r\n    const sort = (filter, pos) => {\r\n        let sortNum = sortItem && sortItem.filter === filter && sortItem.sort\r\n        return (pos === sortNum && 'rgba(255, 255, 255, 0.4)') || 'white'\r\n    }\r\n\r\n    const roundedStyle = (index) => {\r\n        return index === headers.length - 1\r\n            ? 'rounded-tr-lg'\r\n            : index === 0\r\n                ? 'rounded-tl-lg border-r-2 border-primary-700'\r\n                : 'border-r-2 border-primary-700'\r\n    }\r\n\r\n    return (\r\n        <tr className='bg-primary-900 rounded-t-lg'>\r\n            {map(headers,(header, index) => {\r\n                return (\r\n                    <th\r\n                        key={uniqueId('header')}\r\n                        scope='col'\r\n                        className={`th \r\n          ${roundedStyle(index)}\r\n          ${header.styles || ''}\r\n          `}\r\n                    >\r\n                        <div className='inline-flex items-center ml-1'>\r\n                            <span>{header.title}</span>{' '}\r\n                            {header.filter && (\r\n                                <button onClick={() => Sort(header.filter)}>\r\n                                    <FaSortUp\r\n                                        size={14}\r\n                                        color={sort(header.filter, '1')}\r\n                                        style={{\r\n                                            transform: 'translateY(50%)'\r\n                                        }}\r\n                                    />\r\n                                    <FaSortDown\r\n                                        size={14}\r\n                                        color={sort(header.filter, '-1')}\r\n                                        style={{\r\n                                            transform: 'translateY(-50%)'\r\n                                        }}\r\n                                    />\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </th>\r\n                )\r\n            })}\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Thead\r\n"],"names":["universalSort","data","setData","key","sort","prevData","keys","split","orderBy","item","length","UsdToUzs","val","currency","Math","round","UzsToUsd","checkEmptyString","values","result","failed","message","i","regexForEmptyString","test","value","exportExcel","fileName","headers","wscols","json","Object","map","index","maxLength","max","x","toString","wch","wb","XLSX","book_new","ws","json_to_sheet","sheet_add_aoa","sheet_add_json","origin","skipHeader","book_append_sheet","Date","toLocaleDateString","roundUzs","roundUsd","reduceSumm","arr","reduce","prev","current","currentExchangerate","uzs","usd","_ref","type","onClick","bgcolor","isDisabled","_jsx","className","disabled","children","chooseIcon","IoTrashOutline","color","size","IoCreateOutline","IoPrint","IoSave","SiMicrosoftexcel","IoAdd","IoSwapHorizontal","FaMoneyBill","IoInformation","IoDocument","onChange","checked","placeholder","label","onKeyUp","_jsxs","onWheel","e","target","blur","min","regexForTypeNumber","DropdownIcon","props","components","DropdownIndicator","IoCaretDown","container","styles","width","control","Control","_ref4","height","padding","borderRadius","fontSize","fontWeight","outline","boxShadow","cursor","backgroundColor","border","option","Option","_ref2","transition","overflow","menu","singleValue","lineHeight","margin","valueContainer","dropdownIndicator","isFocused","paddingRight","Placeholder","_ref3","input","display","onSelect","options","defaultValue","Select","CustomStyle","IndicatorSeparator","isSearchable","ClientSaleTable","currentPage","countPage","Print","sellers","addPlus","editComment","isMobile","setIsMobile","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","reduceEl","_Fragment","saleconnector","_saleconnector$client","_saleconnector$discou","_saleconnector$discou2","_saleconnector$debt","_saleconnector$debt2","_saleconnector$client2","_saleconnector$discou3","_saleconnector$discou4","_saleconnector$debt3","_saleconnector$debt4","t","client","name","createdAt","toLocaleTimeString","products","toLocaleString","discount","discountuzs","debt","debtuzs","id","TableBtn","uniqueId","page","Sort","Edit","Delete","changeHandler","inputValue","inputDisabled","Excel","editedIncoming","saveEditIncoming","changeNumberHandler","sortItem","ReturnPayment","Save","currencyType","Pay","reports","onClickTableRow","linkToSellerReports","footer","increment","decrement","lowUnitpriceProducts","linkToSupplierReport","printedData","productminimumpage","handleDelete","wholeSale","handleShowProduct","updatePosition","handleCountProduct","handleUnitPrice","selectedFilial","startDate","endDate","modalOpen","totalDebt","Thead","checkRows","ProductTableRow","AdminProductTableRow","CategoryTableRow","UnitTableRow","SupplierTableRow","ProductReportTableRow","LabelsIncome","RegisterIncomingTableRow","InventoryTableRow","InventoriesTableRow","IncomingsTableRow","RegisterSaleTableRow","TemporaryIncomingsTableRow","TemporarySaleTableRow","SalesListTableRow","ClientTableRow","PackmanTableRow","SellerTableRow","ExchangenerateTableRow","SaleReturnTableRow","CashierSaleTableRow","PaymentsTableRow","IncomeTableRow","DebtsTableRow","DiscountTableRow","ExpensesTableRow","BarcodeTableRow","ReturnProductsTableRow","FilialShopTableRow","FilialShopDataIdTableRow","GeneralReportTableRow","DailyReport","SupplierIncomingsTableRow","CategoryReportTableRow","MarketProductsTableRow","PartnerProductsTableRow","RegisterOrdersTableRow","RegisterIncomingOrdersTableRow","OrderProductsTableRow","ReceiveOrderProductsTableRow","IncomingOrderProductsTableRow","SavedOrdersTableRow","handlePrint","colSpan","RegisterSaleTableFooter","saleproducts","totalprice","summ","product","totalpriceuzs","market","_market$director","_market$director2","image","src","alt","toUpperCase","director","firstname","lastname","phone1","mainmarket","stopPropagation","_id","barcode","calculateTotalPrice","datas","property","_saleconnector$paymen","_saleconnector$paymen2","_saleconnector$paymen3","_saleconnector$paymen4","_saleconnector$paymen5","_saleconnector$paymen6","Number","payment","cash","cashuzs","card","carduzs","transfer","transferuzs","useSelector","state","productdata","code","total","unit","price","incomingprice","incomingpriceuzs","sellingprice","sellingpriceuzs","totalsaleproducts","totalsales","totalsalesuzs","navigate","useNavigate","category","totalproducts","profit","profituzs","linkToSale","replace","_client$saleconnector","_client$saleconnector2","_client$saleconnector3","_client$saleconnector4","_client$saleconnector5","_client$saleconnector6","_client$saleconnector7","_client$saleconnector8","_client$saleconnector9","_client$saleconnector10","_client$saleconnector11","_client$saleconnector12","_client$saleconnector13","_client$saleconnector14","_client$saleconnector15","_client$saleconnector16","universalToast","el","_el$saleconnector","_el$saleconnector2","_el$saleconnector3","_el$saleconnector4","dailyReport","_dailyReport$saleconn","_dailyReport$saleconn2","_dailyReport$saleconn3","pieces","unitprice","unitpriceuzs","user","hour","minute","hourCycle","previous","next","isEditComment","setIsEditComment","onMouseOver","onMouseOut","comment","debtid","_discount$procient","_discount$procient2","procient","exchange","exchangerate","typeofexpense","expense","_expense$user","_expense$user2","_expense$user3","_expense$user4","sum","sumuzs","_item$category","_item$productdata","_item$productdata2","_item$price","_item$price2","_item$price3","_item$price4","_item$price5","_item$price6","totalincomingpriceuzs","totalincomingprice","totalsellingpriceuzs","totalsellingprice","Link","to","IoArrowRedoCircleSharp","_data$salesCount","_data$saleProducts","_data$totalpriceuzs","_data$totalprice","_data$salesCount2","_data$saleProducts2","_data$totalpriceuzs2","_data$totalprice2","salesCount","saleProducts","income","dailyconnector","showIncomingPrice","setShowIncomingPrice","_item$product","_item$product2","_item$total","_item$unit","_item$pieces","_item$unit2","_item$pieces2","_item$totalpriceuzs","_item$totalprice","_item$incomingpriceuz","_item$incomingprice","recived","_item$product3","IoRemove","TableInput","send","_item$product4","changeShow","IoEye","IoEyeOff","location","useLocation","inputVal","hasData","filter","p","numberOfChecks","incoming","_incoming$pieces","_incoming$unit","supplier","pathname","includes","StatusIcon","status","IoCheckmark","IoHourglass","inventory","inventories","completed","inventorycount","productcount","_product$unit","partner","useParams","_product$productdata","_product$category","_product$productdata2","_product$productdata3","_product$connections","ProductCheckbox","connections","some","connection","_item$unitpriceuzs","_item$unitprice","_item$product5","packman","_product$price","_product$price2","payDebt","payDebtUzs","sale","_sale$client","_sale$cash","_sale$cashuzs","_sale$card","_sale$carduzs","_sale$transfer","_sale$transferuzs","_sale$client2","_sale$cash2","_sale$cashuzs2","_sale$card2","_sale$carduzs2","_sale$transfer2","_sale$transferuzs2","carrd","_product$category2","_product$category3","_product$price3","_product$price4","_product$price5","_product$price6","_product$price7","_product$price8","_product$price9","_product$price10","_product$price11","_product$price12","_product$price13","tradepriceuzs","tradeprice","minimumcount","_item$pieces$recived","_item$pieces2$send","_item$pieces3","delivered","order","position","positions","createOptions","currentPosition","hasEqual","check","IoCloseCircleSharp","IoCheckmarkCircleSharp","checkPosition","createValue","find","pos","_item$market","_item$market2","_item$products","inn","SelectTable","handleChange","_product$product","_product$product2","oldprice","oldpriceuzs","_item$sender","_item$sender2","sender","productId","productModal","filials","registerSelling","login","filial","productcode","categorycode","ind","style","filialProductsTotal","unitname","fromFilial","connector","_connector$saleconnec","_connector$saleconnec2","_connector$saleconnec3","_connector$saleconnec4","_connector$saleconnec5","_connector$saleconnec6","count","backuzs","back","salereturn","returnProducts","updatedAt","payments","discounts","dailyconnectors","_saleconnector$client3","_saleconnector$client4","_saleconnector$client5","_item$temporary","_item$temporary$partn","_item$temporary2","_item$temporary2$tabl","_item$temporary3","_item$temporary3$tota","_item$temporary4","_item$temporary4$tota","temporary","tableProducts","totalPrice","totalPriceUzs","modalOpen1","seller","_seller$totalsales","_seller$totalsalesuzs","_seller$totalsales2","_seller$totalsalesuzs2","sales","phone","changeCurrency","reducer","incomings","_user$type","link","toLowerCase","userValue","clientValue","packmanValue","roundedStyle","header","scope","title","FaSortUp","transform","FaSortDown"],"sourceRoot":""}