{"version":3,"file":"static/js/968.127f6f8b.chunk.js","mappings":"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","sources":["Pages/Incomings/Routes/SavedIncomings.js"],"sourcesContent":["import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport Table from '../../../Components/Table/Table'\r\nimport {universalSort} from './../../../App/globalFunctions'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {deleteTemporary, getTemporary, setTemporaryRegister} from '../incomingSlice'\r\nimport {filter, map} from 'lodash'\r\nimport NotFind from '../../../Components/NotFind/NotFind.js'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal.js'\r\n\r\nconst SavedIncomings = () => {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    let navigate = useNavigate()\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0,\r\n    })\r\n    const {\r\n        market: {_id},\r\n    } = useSelector((state) => state.login)\r\n\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const {temporaries} = useSelector((state) => state.incoming)\r\n\r\n    const [currentTemporaryData, setCurrentTemporaryData] = useState([])\r\n    const [storeData, setStoreData] = useState([])\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [modalBody, setModalBody] = useState('approve')\r\n    const [printBody, setPrintBody] = useState({})\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setPrintBody({})\r\n        setModalBody('')\r\n    }\r\n\r\n    const changeTemporaryData = useCallback((data) => {\r\n        const count = (arr, key) =>\r\n            arr.reduce((prev, item) => prev + item[key], 0)\r\n        const temporary = map(data, (temp) => {\r\n            let {\r\n                _id,\r\n                createdAt,\r\n                temporaryincoming: {supplier, incomings},\r\n            } = temp\r\n            return {\r\n                _id,\r\n                createdAt,\r\n                supplier,\r\n                incomings: {\r\n                    totalprice: count(incomings, 'totalprice'),\r\n                    totalpriceuzs: count(incomings, 'totalpriceuzs'),\r\n                    pieces: count(incomings, 'pieces'),\r\n                },\r\n                temporaries: incomings,\r\n            }\r\n        })\r\n        setCurrentTemporaryData(temporary)\r\n        setStoreData(temporary)\r\n    }, [])\r\n\r\n    const sendTemporayToRegister = (temporary) => {\r\n        const incomings = filter(\r\n            temporaries,\r\n            (temp) => temp._id === temporary._id\r\n        )[0]\r\n        dispatch(\r\n            setTemporaryRegister({\r\n                _id: temporary._id,\r\n                incomings: incomings.temporaryincoming.incomings,\r\n                supplier: temporary.supplier,\r\n            })\r\n        )\r\n        navigate('/maxsulotlar/qabul/qabulqilish')\r\n    }\r\n\r\n    const handlePrintModal = (el) => {\r\n        toggleModal()\r\n        setModalBody('savedincomingscheck')\r\n        setPrintBody({\r\n            createdAt: el.createdAt,\r\n            temporaries: el.temporaries,\r\n            supplier: el.supplier,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getTemporary({\r\n                market: _id,\r\n            })\r\n        )\r\n    }, [dispatch, _id])\r\n\r\n    const removeTemporary = (temporary) => {\r\n        dispatch(\r\n            deleteTemporary({\r\n                _id: temporary._id,\r\n            })\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        changeTemporaryData(temporaries)\r\n    }, [temporaries, changeTemporaryData])\r\n\r\n    // Tableheader\r\n    const headers = [\r\n        {\r\n            title: 'â„–',\r\n            styles: 'w-[8%]',\r\n        },\r\n        {\r\n            title: t('Yetkazib beruvchi'),\r\n            filter: 'supplier.name',\r\n            styles: '',\r\n        },\r\n        {\r\n            title: t('Maxsulotlar'),\r\n            filter: 'incomings.pieces',\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Jami'),\r\n            filter: 'incomings.totalprice',\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Sana'),\r\n            filter: 'createdAt',\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Vaqti'),\r\n            filter: 'createdAt',\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: '',\r\n            styles: 'w-[10%]',\r\n        },\r\n    ]\r\n\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2,\r\n                    })\r\n                    universalSort(\r\n                        currentTemporaryData,\r\n                        setCurrentTemporaryData,\r\n                        filterKey,\r\n                        1,\r\n                        storeData\r\n                    )\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0,\r\n                    })\r\n                    universalSort(\r\n                        currentTemporaryData,\r\n                        setCurrentTemporaryData,\r\n                        filterKey,\r\n                        '',\r\n                        storeData\r\n                    )\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1,\r\n                    })\r\n                    universalSort(\r\n                        currentTemporaryData,\r\n                        setCurrentTemporaryData,\r\n                        filterKey,\r\n                        -1,\r\n                        storeData\r\n                    )\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1,\r\n            })\r\n            universalSort(\r\n                currentTemporaryData,\r\n                setCurrentTemporaryData,\r\n                filterKey,\r\n                -1,\r\n                storeData\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='tableContainerPadding  grow mainPadding'>\r\n            <UniversalModal\r\n                isOpen={modalVisible}\r\n                body={modalBody}\r\n                // approveFunction={deletePayment}\r\n                printedIncomings={printBody}\r\n                toggleModal={toggleModal}\r\n            />\r\n            {currentTemporaryData.length > 0 ? (\r\n                <Table\r\n                    page={'temporaryincoming'}\r\n                    headers={headers}\r\n                    data={currentTemporaryData}\r\n                    currency={currencyType}\r\n                    Edit={sendTemporayToRegister}\r\n                    Delete={removeTemporary}\r\n                    Sort={filterData}\r\n                    sortItem={sorItem}\r\n                    Print={handlePrintModal}\r\n                />\r\n            ) : (\r\n                <NotFind text={t('Saqlangan qabullar mavjud emas')} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedIncomings\r\n"],"names":["SavedIncomings","t","useTranslation","dispatch","useDispatch","navigate","useNavigate","sorItem","setSorItem","useState","filter","sort","count","market","_id","useSelector","state","login","currencyType","currency","temporaries","incoming","currentTemporaryData","setCurrentTemporaryData","storeData","setStoreData","modalVisible","setModalVisible","modalBody","setModalBody","printBody","setPrintBody","toggleModal","changeTemporaryData","useCallback","data","arr","key","reduce","prev","item","temporary","map","temp","createdAt","temporaryincoming","supplier","incomings","totalprice","totalpriceuzs","pieces","useEffect","getTemporary","headers","title","styles","_jsxs","className","children","_jsx","UniversalModal","isOpen","body","printedIncomings","length","Table","page","Edit","setTemporaryRegister","Delete","deleteTemporary","Sort","filterKey","universalSort","sortItem","Print","el","NotFind","text"],"sourceRoot":""}