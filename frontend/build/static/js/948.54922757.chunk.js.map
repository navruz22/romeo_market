{"version":3,"file":"static/js/948.54922757.chunk.js","mappings":"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","sources":["Pages/Clients/ClientsSales.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal'\r\nimport Table from '../../Components/Table/Table'\r\nimport TableMobile from '../../Components/Table/TableMobile'\r\nimport { universalSort } from './../../App/globalFunctions'\r\nimport { t } from 'i18next'\r\nimport SmallLoader from '../../Components/Spinner/SmallLoader.js'\r\nimport { getClientsSales } from './clientsSlice'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst ClientsSales = () => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const location = useLocation()\r\n\r\n    const { market: _id, user } = useSelector((state) => state.login)\r\n    const { clients_info } =\r\n        useSelector((state) => state.clients)\r\n    const { sellings } = useSelector((state) => state.sellings)\r\n    const { currencyType, currency } = useSelector((state) => state.currency)\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [countPage, setCountPage] = useState(10)\r\n    const [sendingSearch, setSendingSearch] = useState({\r\n        id: '',\r\n        client: ''\r\n    })\r\n    const [currentData, setCurrentData] = useState(clients_info)\r\n    console.log(clients_info);\r\n    // Payments STATES\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0\r\n    })\r\n    const [storeData, setStoreData] = useState(clients_info)\r\n    const [modalBody, setModalBody] = useState('')\r\n    const [modalData, setModalData] = useState(null)\r\n    const [totalDebt, setTotalDebt] = useState({\r\n        usd: 0,\r\n        uzs: 0\r\n    })\r\n    const [customLoading, setCustomLoading] = useState(false)\r\n    const [printBody, setPrintBody] = useState({})\r\n\r\n    const headers = [\r\n        {\r\n            title: 'â„–'\r\n        },\r\n        {\r\n            title: t('Sana'),\r\n            filter: 'createdAt'\r\n        },\r\n        {\r\n            title: t('ID'),\r\n            filter: 'id'\r\n        },\r\n        {\r\n            title: t('Mijoz')\r\n        },\r\n        {\r\n            title: t('Jami')\r\n        },\r\n        {\r\n            title: t('Chegirma')\r\n        },\r\n        {\r\n            title: t('Qarz')\r\n        },\r\n        {\r\n            title: '',\r\n            styles: 'w-[7rem]'\r\n        }\r\n    ]\r\n\r\n    const toggleCheckModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setModalBody('')\r\n        setModalData(null)\r\n    }\r\n    const toggleSaleCheck = () => {\r\n        setModalVisible(!modalVisible)\r\n        setModalBody('')\r\n        setModalBody(null)\r\n    }\r\n\r\n    const convertToUsd = (value) => Math.round(value * 1000) / 1000\r\n    const convertToUzs = (value) => Math.round(value)\r\n\r\n    const toggleModal = () => {\r\n        setModalBody('')\r\n        setModalVisible(!modalVisible)\r\n        setTimeout(() => {\r\n            // setCurrentProduct(null)\r\n        }, 500)\r\n    }\r\n\r\n    const handleClosePay = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n\r\n    const handleClickPrint = (saleconnector) => {\r\n        // if (saleconnector.payment) {\r\n            setModalBody('checkSell')\r\n            setModalData(saleconnector)\r\n            setModalVisible(!modalVisible)\r\n        // } else {\r\n        //     setModalBody('allChecks')\r\n        //     setModalData(saleconnector)\r\n        //     setModalVisible(!modalVisible)\r\n        // }\r\n    }\r\n\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2\r\n                    })\r\n                    universalSort(\r\n                        currentData,\r\n                        setCurrentData,\r\n                        filterKey,\r\n                        1,\r\n                        storeData\r\n                    )\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0\r\n                    })\r\n                    universalSort(\r\n                        currentData,\r\n                        setCurrentData,\r\n                        filterKey,\r\n                        '',\r\n                        storeData\r\n                    )\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1\r\n                    })\r\n                    universalSort(\r\n                        currentData,\r\n                        setCurrentData,\r\n                        filterKey,\r\n                        -1,\r\n                        storeData\r\n                    )\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1\r\n            })\r\n            universalSort(currentData, setCurrentData, filterKey, -1, storeData)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const data = location.state\r\n        let body = {\r\n            market: _id,\r\n            clientId: data\r\n        }\r\n        dispatch(getClientsSales(body))\r\n    }, [\r\n        dispatch,\r\n        _id,\r\n    ])\r\n\r\n    useEffect(() => {\r\n        setCurrentData(clients_info)\r\n    }, [clients_info])\r\n\r\n    return (\r\n        <div className='relative overflow-auto '>\r\n            {customLoading && (\r\n                <div\r\n                    className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            <div className='lg:ps-[20px] lg:tableContainerPadding '>\r\n                {currentData.length > 0 &&\r\n                    (!isMobile ? (\r\n                        <Table\r\n                            page={'clientssales'}\r\n                            headers={headers}\r\n                            data={currentData}\r\n                            currentPage={currentPage}\r\n                            countPage={countPage}\r\n                            currency={currencyType}\r\n                            reports={true}\r\n                            Print={handleClickPrint}\r\n                            Sort={filterData}\r\n                            sortItem={sorItem}\r\n                            totalDebt={totalDebt}\r\n                        />\r\n                    ) : (\r\n                        <TableMobile\r\n                            page={'clientssales'}\r\n                            headers={headers}\r\n                            data={currentData}\r\n                            currentPage={currentPage}\r\n                            countPage={countPage}\r\n                            currency={currencyType}\r\n                            reports={true}\r\n                            Print={handleClickPrint}\r\n                            Sort={filterData}\r\n                            sortItem={sorItem}\r\n                        />\r\n                    ))}\r\n            </div>\r\n            <UniversalModal\r\n                body={modalBody}\r\n                toggleModal={\r\n                    modalBody === 'sell'\r\n                        ? toggleModal\r\n                        : modalBody === 'complete'\r\n                            ? handleClosePay\r\n                            : modalBody === 'allChecks'\r\n                                ? toggleSaleCheck\r\n                                : toggleCheckModal\r\n                }\r\n                isOpen={modalVisible}\r\n                payment={modalData}\r\n                printedSelling={\r\n                    modalBody === 'dailySaleCheck' ? printBody : modalData\r\n                }\r\n                product={modalData}\r\n                headers={headers}\r\n                headerText={\r\n                    modalBody === 'complete' &&\r\n                    'To\\'lovni amalga oshirishni tasdiqlaysizmi?'\r\n                }\r\n                title={\r\n                    modalBody === 'complete' &&\r\n                    'To\\'lovni amalga oshirgach bu ma`lumotlarni o\\'zgaritirib bo\\'lmaydi!'\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ClientsSales\r\n"],"names":["ClientsSales","isMobile","setIsMobile","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","dispatch","useDispatch","location","useLocation","market","_id","user","useSelector","state","login","clients_info","clients","sellings","currencyType","currency","currentPage","setCurrentPage","countPage","setCountPage","sendingSearch","setSendingSearch","id","client","currentData","setCurrentData","console","log","modalVisible","setModalVisible","sorItem","setSorItem","filter","sort","count","storeData","setStoreData","modalBody","setModalBody","modalData","setModalData","totalDebt","setTotalDebt","usd","uzs","customLoading","setCustomLoading","printBody","setPrintBody","headers","title","t","styles","handleClickPrint","saleconnector","filterData","filterKey","universalSort","data","body","clientId","getClientsSales","_jsxs","className","children","_jsx","SmallLoader","length","TableMobile","page","reports","Print","Sort","sortItem","Table","UniversalModal","toggleModal","setTimeout","handleClosePay","toggleSaleCheck","toggleCheckModal","isOpen","payment","printedSelling","product","headerText"],"sourceRoot":""}