{"version":3,"file":"static/js/1972.172b6000.chunk.js","mappings":"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","sources":["Components/Dates/Dates.js","Components/FilterButtons/FilterButtons.js","Components/SelectInput/CustomStyle.js","Components/SelectInput/SelectInput.js","Pages/Incomings/Components/ResultIncomings.js","Components/Card/CardLink.js","Pages/Incomings/Routes/Incomings.js"],"sourcesContent":["import React from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport {IoCalendarNumber} from 'react-icons/io5'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nfunction Dates({value, onChange, placeholder, maxWidth}) {\r\n    return (\r\n        <div className={`group relative ${maxWidth ? maxWidth : 'grow'}`}>\r\n            <DatePicker\r\n                selected={value}\r\n                placeholderText={placeholder}\r\n                onChange={onChange}\r\n                className={`datePickerStyle`}\r\n                dateFormat={'dd.MM.yyyy'}\r\n            />\r\n            <IoCalendarNumber\r\n                size={'0.625rem'}\r\n                className='datePickerIcon group-hover:text-blue-500'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dates\r\n","import React from 'react'\r\n\r\nfunction FilterButtons({label, element, grow}) {\r\n    return (\r\n        <div\r\n            className={` ${grow ? 'grow ' : ''}`}\r\n        >\r\n            {label && (\r\n                <h3\r\n                    className={\r\n                        ' font-light mb-[10px]  text-blue-700 leading-[1rem] text-sm'\r\n                    }\r\n                >\r\n                    {label}:\r\n                </h3>\r\n            )}\r\n            {element}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterButtons\r\n","import React from 'react'\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} color={'#86A7E9'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\n\r\nconst DropdownIndicator = (styles, {isFocused}) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    paddingRight: '.625rem',\r\n    color: isFocused ? '#193F8A' : '#071F45'\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    zIndex: 30\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    color: '#1c1c1c',\r\n    fontSize: '.875rem',\r\n    lineHeight: '1.25rem',\r\n    fontWeight: '400',\r\n    margin: 0\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\n\r\nconst Placeholder = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    margin: 0,\r\n    color: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#86A7E9'\r\n})\r\nconst Control = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    width: '100%',\r\n    height: '100%',\r\n    padding: '.625rem .58rem',\r\n    borderRadius: '.25rem',\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    color: '#86A7E9',\r\n    outline: 'none',\r\n    boxShadow: '0px 10px 10px rgba(0, 0, 0, 0.05)',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n        backgroundColor: '#EAEAEA'\r\n    },\r\n    '&:focus-within': {\r\n        outline: '4px solid #A9C0EF',\r\n        backgroundColor: '#ffffff'\r\n    },\r\n    backgroundColor: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#fff',\r\n    border: isDisabled ? 'none' : '1px solid #86A7E9'\r\n})\r\n\r\nconst inputStyles = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    display: 'flex',\r\n    lineHeight: '1.25rem',\r\n    margin: 0\r\n})\r\n\r\nconst CustomStyle = {\r\n    container: (styles) => ({\r\n        ...styles,\r\n        height: '100%'\r\n    }),\r\n    control: Control,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    dropdownIndicator: DropdownIndicator,\r\n    placeholder: Placeholder,\r\n    input: inputStyles\r\n}\r\n\r\nexport default CustomStyle\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle'\r\n\r\nconst SelectInput = ({\r\n    onSelect,\r\n    options,\r\n    isDisabled,\r\n    label,\r\n    placeholder,\r\n    value,\r\n}) => {\r\n    return (\r\n        <div className='grow '>\r\n            {label && (\r\n                <label\r\n                    className={\r\n                        'w-[90%] text-blue-700 block leading-[1.125rem] mb-[.625rem]'\r\n                    }\r\n                >\r\n                    {label}\r\n                </label>\r\n            )}\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                value={value}\r\n                defaultValue={''}\r\n                options={options}\r\n                isDisabled={isDisabled}\r\n                placeholder={placeholder}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectInput\r\n","import React from 'react'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nconst ResultIncomings = ({ connectors, styles, currencyType }) => {\r\n\r\n    const { t } = useTranslation(['common'])\r\n\r\n    const price = () => {\r\n        if (connectors.length > 0) {\r\n            return currencyType === 'USD'\r\n                ? connectors\r\n                    .reduce((prev, item) => prev + item.totalprice, 0)\r\n                    .toLocaleString('ru-RU')\r\n                : connectors\r\n                    .reduce((prev, item) => prev + item.totalpriceuzs, 0)\r\n                    .toLocaleString('ru-RU')\r\n        }\r\n        return 0\r\n    }\r\n\r\n    return (\r\n        <div className={`productTypeBlock ${styles}`}>\r\n            <div className='productType'>\r\n                {t(\"Maxsulotlar soni\")}:{' '}\r\n                <span className='ml-[0.5rem] font-[400] text-black-900'>\r\n                    {connectors\r\n                        .reduce((prev, item) => prev + item.products, 0)\r\n                        .toLocaleString('ru-RU')}\r\n                </span>\r\n            </div>\r\n            <div className='productSumAll'>\r\n                {t(\"Jami\")} :{' '}\r\n                <span className='ml-[0.5rem] font-[400] text-black-900'>\r\n                    {price()} {currencyType}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultIncomings\r\n","import {t} from 'i18next'\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CardLink = (\r\n    {\r\n        totalprice,\r\n        pieces,\r\n        suppliers,\r\n        createdAt,\r\n        currencyType,\r\n        path,\r\n        totalpriceuzs,\r\n        state,\r\n        debt,\r\n        debtUzs,\r\n        paid,\r\n        paidUzs\r\n    }) => {\r\n    return (\r\n        <Link to={path} className='flex-[0_0_23.5%]' state={state}>\r\n            <div className='w-full h-full cardStyle'>\r\n                <h1 className='headerStyle'>\r\n                    {(currencyType === 'USD'\r\n                            ? totalprice\r\n                            : totalpriceuzs\r\n                    ).toLocaleString('ru-Ru')}\r\n                    <span className='cardSpan'>{currencyType}</span>\r\n                </h1>\r\n\r\n                <div className='text-[.875rem] mt-[1rem]'>\r\n                    <div className='numberCard'>\r\n                        <p className='paragrafCard'>{t(\"Maxsulot\")}:</p>\r\n                        <p>{pieces.toLocaleString('ru-Ru')}</p>\r\n                    </div>\r\n                    <div className='numberCard'>\r\n                        <p className='paragrafCard'>{t('Yetkazuvchilar')}</p>\r\n                        <p>{suppliers.toLocaleString('ru-Ru')}</p>\r\n                    </div>\r\n                    <div className='numberCard'>\r\n                        <p className='paragrafCard'>{t('Sana')}:</p>\r\n                        <p>{new Date(createdAt).toLocaleDateString('ru-RU')}</p>\r\n                    </div>\r\n                    <span className={'block h-[1px] bg-white-400 my-[0.5rem]'}></span>\r\n                    <div className='numberCard items-center'>\r\n                        <p className='paragrafCard'>{t('To\\'langan')} :</p>\r\n                        <span\r\n                            className={'block p-[0.1rem_0.5rem] rounded-[4px] bg-success-500'}>\r\n                            {currencyType === 'UZS' ? paidUzs.toLocaleString('ru-Ru') : paid.toLocaleString('ru-Ru')}{' '}\r\n                            <span>{currencyType}</span>\r\n                        </span>\r\n                    </div>\r\n                    {debt > 0 && <div className='numberCard items-center'>\r\n                        <p className='paragrafCard'>{t('Qarzlar')} :</p>\r\n                        <span\r\n                            className={'block p-[0.1rem_0.5rem] rounded-[4px] bg-error-500'}>\r\n                            {currencyType === 'UZS' ? debtUzs.toLocaleString('ru-Ru') : debt.toLocaleString('ru-Ru')}{' '}\r\n                            <span>{currencyType}</span>\r\n                        </span>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default CardLink\r\n","import React, {useCallback, useEffect, useState} from 'react'\r\nimport CardLink from '../../../Components/Card/CardLink'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {filter, map, uniqueId} from 'lodash'\r\nimport {getAllSuppliers, getIncomingConnectors} from '../incomingSlice'\r\nimport Dates from '../../../Components/Dates/Dates'\r\nimport SelectInput from '../../../Components/SelectInput/SelectInput'\r\nimport FilterButtons from '../../../Components/FilterButtons/FilterButtons'\r\nimport ResultIncomings from '../Components/ResultIncomings'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nfunction Incomings() {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const {\r\n        market: {_id},\r\n    } = useSelector((state) => state.login)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const {incomingconnectors, suppliers} = useSelector(\r\n        (state) => state.incoming\r\n    )\r\n\r\n    const [beginDay, setBeginDay] = useState(\r\n        new Date(\r\n            new Date().getFullYear(),\r\n            new Date().getMonth(),\r\n            1\r\n        ).toISOString()\r\n    )\r\n    const [endDay, setEndDay] = useState(\r\n        new Date(new Date().setHours(23, 59, 59, 0)).toISOString()\r\n    )\r\n\r\n    const [suppliersData, setSuppliersData] = useState([])\r\n    const [cardConnectors, setCardConnectors] = useState([])\r\n    const [supplierSearch, setSupplierSearch] = useState('')\r\n\r\n    // change suppliers data\r\n    const changeSuppliersData = (data) => {\r\n        const suppliers = map(data, (supplier) => {\r\n            return {\r\n                label: supplier.name,\r\n                value: supplier._id,\r\n            }\r\n        })\r\n        setSuppliersData(suppliers)\r\n    }\r\n\r\n    //change connectors data START\r\n    const changeConnectorsData = useCallback((data) => {\r\n        let groups = []\r\n        const convert = (el) => new Date(el.createdAt).toLocaleDateString()\r\n        for (let element of data) {\r\n            let existingGroups = filter(\r\n                groups,\r\n                (group) => convert(group) === convert(element)\r\n            )\r\n            if (existingGroups.length > 0) {\r\n                currentGroup(existingGroups, element)\r\n            } else {\r\n                newGroup(groups, element)\r\n            }\r\n        }\r\n        addChnagedIncomings(groups)\r\n    }, [])\r\n\r\n    const addChnagedIncomings = (groups) => {\r\n        const sumSupplier = (arr) => {\r\n            let repeat = []\r\n            return arr.reduce((prev, {_id}) => {\r\n                if (!repeat.includes(_id)) {\r\n                    repeat.push(_id)\r\n                    return prev + 1\r\n                }\r\n                return prev\r\n            }, 0)\r\n        }\r\n        const sumTotal = (arr) => {\r\n            return arr.reduce((prev, total) => prev + total, 0)\r\n        }\r\n        const data = map(groups, (income) => {\r\n            return {\r\n                createdAt: income.createdAt,\r\n                products: income.incoming.length,\r\n                suppliers: sumSupplier(income.supplier),\r\n                totalprice: sumTotal(income.total),\r\n                totalpriceuzs: sumTotal(income.totaluzs),\r\n                totalpayment: sumTotal(income.totalpayment),\r\n                totalpaymentuzs: sumTotal(income.totalpaymentuzs),\r\n                debt: sumTotal(income.debt),\r\n                debtuzs: sumTotal(income.debtuzs),\r\n            }\r\n        })\r\n        setCardConnectors(data)\r\n    }\r\n\r\n    const currentGroup = (exist, el) => {\r\n        exist[0].incoming.push(...el.incoming)\r\n        exist[0].supplier.push(el.supplier)\r\n        exist[0].total.push(el.total)\r\n        exist[0].totaluzs.push(el.totaluzs)\r\n        exist[0].totalpayment.push(el.totalpayment)\r\n        exist[0].totalpaymentuzs.push(el.totalpaymentuzs)\r\n        exist[0].debt.push(el.debt)\r\n        exist[0].debtuzs.push(el.debtuzs)\r\n        exist[0]._id = el._id\r\n    }\r\n    \r\n    const newGroup = (group, el) => {\r\n        let newgroup = {\r\n            createdAt: el.createdAt,\r\n            incoming: [...el.incoming],\r\n            total: [el.total],\r\n            totaluzs: [el.totaluzs],\r\n            totalpayment: [el.totalpayment],\r\n            totalpaymentuzs: [el.totalpaymentuzs],\r\n            debt: [el.debt],\r\n            debtuzs: [el.debtuzs],\r\n            supplier: [el.supplier],\r\n            _id: el._id,\r\n        }\r\n        group.push(newgroup)\r\n    }\r\n    //change connectors data END\r\n\r\n    const selectSuppliers = (e) => {\r\n        let target = e.value\r\n        if (target === 'all') {\r\n            changeConnectorsData(incomingconnectors)\r\n            setSupplierSearch('')\r\n        } else {\r\n            const connectorsForSupplier = filter(\r\n                incomingconnectors,\r\n                ({supplier}) => {\r\n                    return supplier._id === target\r\n                }\r\n            )\r\n            changeConnectorsData(connectorsForSupplier)\r\n            setSupplierSearch(e.label)\r\n        }\r\n    }\r\n\r\n    // change date func\r\n    const changeDate = (value, name) => {\r\n        name === 'beginDay' && setBeginDay(new Date(value).toISOString())\r\n        name === 'endDay' && setEndDay(new Date(value).toISOString())\r\n    }\r\n\r\n    useEffect(() => {\r\n        changeSuppliersData(suppliers)\r\n    }, [suppliers])\r\n\r\n    useEffect(() => {\r\n        changeConnectorsData(incomingconnectors)\r\n    }, [incomingconnectors, changeConnectorsData])\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getIncomingConnectors({\r\n                market: _id,\r\n                beginDay,\r\n                endDay,\r\n            })\r\n        )\r\n    }, [dispatch, _id, beginDay, endDay])\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllSuppliers({_id}))\r\n    }, [dispatch, _id])\r\n    return (\r\n        <section className={'grow overflow-auto'}>\r\n            <div className='flex items-center gap-[1.25rem] mainPadding'>\r\n                <Dates\r\n                    label={t('dan')}\r\n                    value={new Date(beginDay)}\r\n                    onChange={(value) => changeDate(value, 'beginDay')}\r\n                    maxWidth={'max-w-[9.6875rem]'}\r\n                />\r\n                <Dates\r\n                    label={t('gacha')}\r\n                    value={new Date(endDay)}\r\n                    onChange={(value) => changeDate(value, 'endDay')}\r\n                    maxWidth={'max-w-[9.6875rem]'}\r\n                />\r\n                <FilterButtons\r\n                    element={\r\n                        <SelectInput\r\n                            isSearchable={true}\r\n                            options={[\r\n                                {\r\n                                    label: t('Yetkazib beruvchilar'),\r\n                                    value: 'all',\r\n                                },\r\n                                ...suppliersData,\r\n                            ]}\r\n                            onSelect={selectSuppliers}\r\n                        />\r\n                    }\r\n                    grow={true}\r\n                    label={t('Yetkazuvchi')}\r\n                />\r\n            </div>\r\n            <ResultIncomings\r\n                currencyType={currencyType}\r\n                connectors={cardConnectors}\r\n                styles={'mainPadding'}\r\n            />\r\n            <div className='flex flex-wrap gap-[1.25rem] mainPadding'>\r\n                {map(cardConnectors, (item) => {\r\n                    return (\r\n                        <CardLink\r\n                            key={uniqueId('card')}\r\n                            totalprice={item.totalprice}\r\n                            totalpriceuzs={item.totalpriceuzs}\r\n                            currencyType={currencyType}\r\n                            pieces={item.products}\r\n                            suppliers={item.suppliers}\r\n                            createdAt={item.createdAt}\r\n                            debt={item.debt}\r\n                            debtUzs={item.debtuzs}\r\n                            paid={item.totalpayment}\r\n                            paidUzs={item.totalpaymentuzs}\r\n                            path={`/maxsulotlar/qabul/qabullar/${uniqueId()}`}\r\n                            state={{\r\n                                date: item.createdAt,\r\n                                supplier: supplierSearch,\r\n                            }}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Incomings\r\n"],"names":["_ref","value","onChange","placeholder","maxWidth","_jsxs","className","children","_jsx","DatePicker","selected","placeholderText","dateFormat","IoCalendarNumber","size","label","element","grow","DropdownIcon","props","components","DropdownIndicator","IoCaretDown","color","container","styles","height","control","Control","_ref4","isDisabled","width","padding","borderRadius","fontSize","fontWeight","outline","boxShadow","cursor","backgroundColor","border","option","Option","_ref2","isFocused","isSelected","transition","overflow","menu","zIndex","singleValue","lineHeight","margin","valueContainer","dropdownIndicator","paddingRight","Placeholder","_ref3","input","display","onSelect","options","Select","CustomStyle","defaultValue","IndicatorSeparator","connectors","currencyType","t","useTranslation","reduce","prev","item","products","toLocaleString","length","totalprice","totalpriceuzs","pieces","suppliers","createdAt","path","state","debt","debtUzs","paid","paidUzs","Link","to","Date","toLocaleDateString","dispatch","useDispatch","market","_id","useSelector","login","currency","incomingconnectors","incoming","beginDay","setBeginDay","useState","getFullYear","getMonth","toISOString","endDay","setEndDay","setHours","suppliersData","setSuppliersData","cardConnectors","setCardConnectors","supplierSearch","setSupplierSearch","changeConnectorsData","useCallback","data","groups","convert","el","existingGroups","filter","group","currentGroup","newGroup","addChnagedIncomings","sumSupplier","arr","repeat","includes","push","sumTotal","total","map","income","supplier","totaluzs","totalpayment","totalpaymentuzs","debtuzs","exist","newgroup","changeDate","name","useEffect","changeSuppliersData","getIncomingConnectors","getAllSuppliers","Dates","FilterButtons","SelectInput","isSearchable","e","target","connectorsForSupplier","ResultIncomings","CardLink","uniqueId","date"],"sourceRoot":""}