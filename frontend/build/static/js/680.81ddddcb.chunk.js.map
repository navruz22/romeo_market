{"version":3,"file":"static/js/680.81ddddcb.chunk.js","mappings":"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","sources":["Components/LineChart/LineChart.js","Components/DailyCircle/DailyCircle.js","Components/PieChart/PieChart.js","Pages/MainPage/MainPage.js"],"sourcesContent":["import React from 'react'\r\nimport {\r\n    CategoryScale,\r\n    Chart as ChartJS,\r\n    Filler,\r\n    Legend,\r\n    LinearScale,\r\n    LineElement,\r\n    PointElement,\r\n    Title,\r\n    Tooltip\r\n} from 'chart.js'\r\nimport {Line} from 'react-chartjs-2'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nfunction LineChart({arr, label}) {\r\n    const {t} = useTranslation(['common'])\r\n\r\n    ChartJS.register(\r\n        CategoryScale,\r\n        LinearScale,\r\n        PointElement,\r\n        LineElement,\r\n        Title,\r\n        Tooltip,\r\n        Filler,\r\n        Legend\r\n    )\r\n\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                position: 'bottom'\r\n            },\r\n            datalabels: {\r\n                display: false\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: label,\r\n                padding: {\r\n                    bottom: 30\r\n                },\r\n                font: {\r\n                    size: 16,\r\n                    lineHeight: 2,\r\n                },\r\n                color: 'rgba(28, 28, 28, 0.7)'\r\n            },\r\n            tooltip: {\r\n                mode: 'index',\r\n                intersect: false\r\n            }\r\n        },\r\n        hover: {\r\n            mode: 'index',\r\n            intersect: false\r\n        },\r\n        scales: {\r\n            y: {\r\n                min: 0,\r\n                ticks: {\r\n                    callback: (value) => {\r\n                        return value.toLocaleString('ru-Ru')\r\n                    },\r\n                    beginAtZero: true\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const months = [\r\n        t('Yanvar'),\r\n        t('Fevral'),\r\n        t('Mart'),\r\n        t('Aprel'),\r\n        t('May'),\r\n        t('Iyun'),\r\n        t('Iyul'),\r\n        t('Avgust'),\r\n        t('Sentabr'),\r\n        t('Oktabr'),\r\n        t('Noyabr'),\r\n        t('Dekabr')\r\n    ]\r\n    const labels = months.slice(0, new Date().getMonth() + 1)\r\n\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                fill: true,\r\n                data: arr,\r\n                borderColor: 'rgb(0,144,163)',\r\n                backgroundColor: 'rgba(0, 180, 204, 0.5)'\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <Line options={options} data={data} />\r\n    )\r\n}\r\n\r\nexport default LineChart","import React from 'react'\r\n\r\nfunction DailyCircle({label, text, nth}) {\r\n    const circleBorderStyles = (nth) => {\r\n        switch (nth) {\r\n            case 1:\r\n                return 'border-warning-400 shadow-[0_0_25px_rgba(253,176,34,0.5)]'\r\n            case 2:\r\n                return 'border-success-400 shadow-[0_0_25px_rgba(18,183,106,0.5)]'\r\n            case 3:\r\n                return 'border-error-400 shadow-[0_0_25px_rgba(240,68,56,0.5)]'\r\n            default:\r\n                return 'border-primary-700 shadow-[0_0_25px_rgba(0,180,204,0.5)]'\r\n        }\r\n    }\r\n    return (\r\n        <div\r\n            className={`daily-circle p-2 rounded-full border-[5.5px] bg-transparent shadow-inner-[0_4px_4px_rgba(0,0,0,0.25)] backdrop-blur-[1px] flex items-center justify-center ${circleBorderStyles(nth)}`}>\r\n            <div\r\n                className='main-circle w-[10.625rem] h-[10.625rem] bg-background shadow-[0_30px_50px_rgba(0,0,0,0.25)] hover:shadow-none transition-all ease-linear duration-200 rounded-full flex items-center justify-center flex-col'>\r\n                <h3 className={`text-black-700 font-medium text-[1.5rem] leading-[2.375rem]`}>{text}</h3>\r\n                <h5 className={'text-black-500 text-[1rem] leading-[1.75rem]'}>{label}</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyCircle","import React from 'react'\r\nimport {ArcElement, Chart as ChartJS, Legend, Tooltip} from 'chart.js'\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels'\r\nimport {Pie} from 'react-chartjs-2'\r\nimport {useSelector} from 'react-redux'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nfunction PieChart({arr = [0]}) {\r\n    const {t} = useTranslation(['common'])\r\n\r\n    const {currencyType} = useSelector(state => state.currency)\r\n    ChartJS.register(ArcElement, Tooltip, Legend, ChartDataLabels)\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false\r\n    }\r\n    const data = {\r\n        labels: [t('Xarajatlar'), t('Sof foyda')],\r\n        datasets: [\r\n            {\r\n                data: arr,\r\n                datalabels: {\r\n                    font: {\r\n                        size: 18,\r\n                    },\r\n                    color: arr.length > 1 && arr.some(item => item !== 0) ? '#ffffff' : '#1c1c1c',\r\n                    formatter: (value) => {\r\n                        return value?.toLocaleString('ru-Ru') + '\\n' + currencyType\r\n                    },\r\n                    textAlign: 'center',\r\n                    clamp: true,\r\n                    align: 'center'\r\n                },\r\n                backgroundColor: [\r\n                    'rgba(240, 68, 56, 0.5)',\r\n                    'rgba(18, 183, 106, 0.5)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(240, 68, 56, 1)',\r\n                    'rgba(18, 183, 106, 1)'\r\n                ],\r\n                borderWidth: 1\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Pie data={data} options={options} />\r\n    )\r\n}\r\n\r\nexport default PieChart","import React, {useEffect} from 'react'\r\nimport LineChart from '../../Components/LineChart/LineChart.js'\r\nimport DailyCircle from '../../Components/DailyCircle/DailyCircle.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getMonthlyReport, getReports} from '../Reports/reportsSlice.js'\r\nimport {getCurrency} from '../Currency/currencySlice.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {map} from 'lodash'\r\nimport PieChart from '../../Components/PieChart/PieChart.js'\r\nimport './MainPage.scss'\r\n\r\nfunction MainPage() {\r\n    const {t} = useTranslation(['common'])\r\n    const months = [\r\n        t('Yanvar'),\r\n        t('Fevral'),\r\n        t('Mart'),\r\n        t('Aprel'),\r\n        t('May'),\r\n        t('Iyun'),\r\n        t('Iyul'),\r\n        t('Avgust'),\r\n        t('Sentabr'),\r\n        t('Oktabr'),\r\n        t('Noyabr'),\r\n        t('Dekabr'),\r\n    ]\r\n    const dispatch = useDispatch()\r\n    const {reports, monthlyReport} = useSelector((state) => state.reports)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const filterMonthlyReport = () => {\r\n        return monthlyReport\r\n            ? currencyType === 'USD'\r\n                ? map(monthlyReport.salesSum, (item) => item.usd)\r\n                : map(monthlyReport.salesSum, (item) => item.uzs)\r\n            : []\r\n    }\r\n    const filterMonthlyReportCount = () => {\r\n        const arr = filterMonthlyReport()\r\n        return arr.length > 0 ? arr[arr.length - 1].toLocaleString('ru-Ru') : 0\r\n    }\r\n    useEffect(() => {\r\n        const body = {\r\n            startDate: new Date(\r\n                new Date().getFullYear(),\r\n                new Date().getMonth(),\r\n                new Date().getDate()\r\n            ).toISOString(),\r\n            endDate: new Date().toISOString(),\r\n        }\r\n        dispatch(getReports(body))\r\n        dispatch(getCurrency())\r\n        dispatch(getMonthlyReport())\r\n    }, [dispatch])\r\n    return (\r\n        <section\r\n            className={\r\n                ' mt-[30px]  flex  flex-col gap-[5rem] overflow-y-auto '\r\n            }\r\n        >\r\n            <div className={'circle-mobile flex lg:justify-center p-[30px]  gap-[3.1rem]'}>\r\n                <DailyCircle\r\n                    text={reports?.sale?.salecount}\r\n                    label={t('Sotuvlar soni')}\r\n                />\r\n                <DailyCircle\r\n                    nth={1}\r\n                    text={\r\n                        currencyType === 'UZS'\r\n                            ? reports?.sale?.saleuzs?.toLocaleString('ru-Ru')\r\n                            : reports?.sale?.sale?.toLocaleString('ru-Ru')\r\n                    }\r\n                    label={t('Sotuv summasi')}\r\n                />\r\n                <DailyCircle\r\n                    nth={2}\r\n                    text={\r\n                        currencyType === 'UZS'\r\n                            ? reports?.income?.incomeuzs?.toLocaleString(\r\n                                  'ru-Ru'\r\n                              )\r\n                            : reports?.income?.income?.toLocaleString('ru-Ru')\r\n                    }\r\n                    label={t('Sof foyda')}\r\n                />\r\n                <DailyCircle\r\n                    nth={3}\r\n                    text={\r\n                        currencyType === 'UZS'\r\n                            ? reports?.expenses?.expensesuzs?.toLocaleString(\r\n                                  'ru-Ru'\r\n                              )\r\n                            : reports?.expenses?.expenses?.toLocaleString(\r\n                                  'ru-Ru'\r\n                              )\r\n                    }\r\n                    label={t('Xarajatlar')}\r\n                />\r\n            </div>\r\n            <div className={'h-[25rem] p-[20px]  mt-[-100px]  lg:mt-[0px]'}>\r\n                <LineChart\r\n                    label={[\r\n                        t('Oylik sotuvlar soni'),\r\n                        `${months[new Date().getMonth()]} : ${\r\n                            monthlyReport?.sales.length > 0\r\n                                ? monthlyReport.sales[\r\n                                      monthlyReport.sales.length - 1\r\n                                  ]\r\n                                : 0\r\n                        }`,\r\n                    ]}\r\n                    arr={monthlyReport?.sales}\r\n                />\r\n            </div>\r\n            <div className={'flex p-[20px] lg:flex-nowrap flex-wrap gap-[5%] h-[25rem]'}>\r\n                <div className={'lg:w-[60%] w-[100%] h-[25rem] mb-8'}>\r\n                    <LineChart\r\n                        label={[\r\n                            t('Oylik sotuvlar summasi'),\r\n                            `${\r\n                                months[new Date().getMonth()]\r\n                            } : ${filterMonthlyReportCount()} ${currencyType}`,\r\n                        ]}\r\n                        arr={filterMonthlyReport()}\r\n                    />\r\n                </div>\r\n                <div className={'lg:w-[30%] w-[50rem] h-[25rem]  pb-5'}>\r\n                    <PieChart\r\n                        arr={[\r\n                            currencyType === 'UZS'\r\n                                ? monthlyReport?.monthExpense?.uzs\r\n                                : monthlyReport?.monthExpense?.usd,\r\n                            currencyType === 'UZS'\r\n                                ? monthlyReport?.monthProfit?.uzs\r\n                                : monthlyReport?.monthProfit?.usd,\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n"],"names":["_ref","arr","label","t","useTranslation","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","options","responsive","maintainAspectRatio","plugins","legend","display","position","datalabels","title","text","padding","bottom","font","size","lineHeight","color","tooltip","mode","intersect","hover","scales","y","min","ticks","callback","value","toLocaleString","beginAtZero","data","labels","slice","Date","getMonth","datasets","fill","borderColor","backgroundColor","_jsx","Line","nth","className","circleBorderStyles","children","_jsxs","currencyType","useSelector","state","currency","ArcElement","ChartDataLabels","length","some","item","formatter","textAlign","clamp","align","borderWidth","Pie","_reports$sale","_reports$sale2","_reports$sale2$saleuz","_reports$sale3","_reports$sale3$sale","_reports$income","_reports$income$incom","_reports$income2","_reports$income2$inco","_reports$expenses","_reports$expenses$exp","_reports$expenses2","_reports$expenses2$ex","_monthlyReport$monthE","_monthlyReport$monthE2","_monthlyReport$monthP","_monthlyReport$monthP2","months","dispatch","useDispatch","reports","monthlyReport","filterMonthlyReport","map","salesSum","usd","uzs","useEffect","body","startDate","getFullYear","getDate","toISOString","endDate","getReports","getCurrency","getMonthlyReport","DailyCircle","sale","salecount","saleuzs","income","incomeuzs","expenses","expensesuzs","LineChart","sales","filterMonthlyReportCount","PieChart","monthExpense","monthProfit"],"sourceRoot":""}